<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azure.github.io/Cloud-Native/60DaysOfIA</id>
    <title>Build Intelligent Apps On Azure Blog</title>
    <updated>2024-02-15T09:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://azure.github.io/Cloud-Native/60DaysOfIA"/>
    <subtitle>Build Intelligent Apps On Azure Blog</subtitle>
    <icon>https://azure.github.io/Cloud-Native/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Kick-off #60Days of IA]]></title>
        <id>https://azure.github.io/Cloud-Native/60DaysOfIA/kick-off</id>
        <link href="https://azure.github.io/Cloud-Native/60DaysOfIA/kick-off"/>
        <updated>2024-02-15T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[Combine the power of AI, cloud-scale data, and cloud-native app development to create highly differentiated digital experiences. Develop adaptive, responsive, and personalized experiences by building and modernizing intelligent applications with Azure.]]></summary>
        <content type="html"><![CDATA[
<p>Let’s ride the buzz of AI with the focus on building intelligent apps using cloud-native technologies. Build '#IntelligentApps' brings to you a learning journey to build your skills on creating differentiated experiences while modernizing your applications. It’s time to 'learn it all'.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-well-cover">What We’ll Cover<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/kick-off#what-well-cover" class="hash-link" aria-label="Direct link to What We’ll Cover" title="Direct link to What We’ll Cover">​</a></h2>
<ul>
<li>What is Build Intelligent Apps?</li>
<li>How Can I <em>participate</em>?</li>
<li>How Can I <em>skill up</em>? (in just 60 Days)</li>
<li><strong>Exercise:</strong> Take the <a href="https://aka.ms/build-ia/csc" target="_blank" rel="noopener noreferrer">Build Intelligent Apps Skills Challenge</a></li>
</ul>
<p><img loading="lazy" alt="Build intelligent apps" src="https://azure.github.io/Cloud-Native/assets/images/60-days-of-ia-cloud-skills-banner-9fc317c136f398d5a50e68626dcd21e0.jpg" width="1920" height="347" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="get-ready-to-build-intelligentapps-starting-february-19">Get Ready To Build #IntelligentApps starting February 19!<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/kick-off#get-ready-to-build-intelligentapps-starting-february-19" class="hash-link" aria-label="Direct link to Get Ready To Build #IntelligentApps starting February 19!" title="Direct link to Get Ready To Build #IntelligentApps starting February 19!">​</a></h2>
<p>Today, we kick off with content and activities for you to skill up on all things Intelligent Apps or AI Apps on Azure with content, events, and community interactions! Read on to learn about what is coming!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="explore-our-initiatives">Explore Our Initiatives<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/kick-off#explore-our-initiatives" class="hash-link" aria-label="Direct link to Explore Our Initiatives" title="Direct link to Explore Our Initiatives">​</a></h2>
<p>We have a number of initiatives planned for the month to help you learn and skill up on relevant technologies. Click on the links to visit the relevant pages for each.</p>
<ul>
<li><a href="https://aka.ms/build-ia/60days" target="_blank" rel="noopener noreferrer">#60Days of IA</a> - 8 themed weeks of blogs on AI led application development</li>
<li><a href="https://aka.ms/FallForIA/LearnLive" target="_blank" rel="noopener noreferrer">Learn Live Series</a> – 8 weekly live episodes on 'Kubernetes' and 'Serverless'</li>
<li><a href="https://aka.ms/build-ia/ATE-series" target="_blank" rel="noopener noreferrer">Ask The Expert</a> – join live Q&amp;A sessions with Product Engineering and Advocacy teams</li>
<li><a href="https://aka.ms/build-ia/csc" target="_blank" rel="noopener noreferrer">Cloud Skills Challenge</a> – skill up by competing with peers to complete modules</li>
</ul>
<p><img loading="lazy" alt="Build intelligent apps" src="https://azure.github.io/Cloud-Native/assets/images/60-days-of-ia-cloud-skills-modules-43a5b9ca105934979c7ce8cff3338a87.png" width="1920" height="1080" class="img_ev3q"></p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><h2 class="anchor anchorWithStickyNavbar_LWe7" id="register-for-the-events">Register for the events!<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/kick-off#register-for-the-events" class="hash-link" aria-label="Direct link to Register for the events!" title="Direct link to Register for the events!">​</a></h2><p>What are 4 things you can do today, to jumpstart your learning journey?</p><ul>
<li><strong>Register</strong> for live Q&amp;A sessions (free, online)<!-- -->
<ul>
<li>February 29 – <a href="https://aka.ms/intelligent-apps/ate-aks/?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Ask The Expert: Intelligent Apps with Azure Kubernetes Service</a></li>
<li>March 7 – <a href="https://aka.ms/intelligent-apps/ate-cosmos/?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Ask The Expert: Intelligent Apps with Azure Cosmos DB</a></li>
<li>March 21 - <a href="https://aka.ms/intelligent-apps/ate-ai/?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Ask The Expert: Intelligent Apps with Azure AI</a></li>
<li>April 4 – <a href="https://aka.ms/intelligent-apps/ate-functions/?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Ask The Expert: Intelligent Apps with Azure Functions</a></li>
</ul>
</li>
<li><strong>Register</strong> for the <a href="https://aka.ms/intelligent-apps/aks-learnlive?ocid=buildia24_LL_website&amp;ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Learn Live Series: Kubernetes Edition</a> – weekly live learning<!-- -->
<ul>
<li>February 21 – <a href="https://aka.ms/learn-live-building-intelligent-apps-aks-ep1?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Episode 1: Deploying Intelligent Apps with OpenAI on AKS</a></li>
<li>February 28 – <a href="https://aka.ms/learn-live-building-intelligent-apps-aks-ep2?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Episode 2: Bring Your Own AI Models to Intelligent Apps on AKS with KAITO</a></li>
<li>March 6 – <a href="https://aka.ms/learn-live-building-intelligent-apps-aks-ep3?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Episode 3: Enhance Observability of Your Intelligent Apps on AKS</a></li>
<li>March 13 – <a href="https://aka.ms/learn-live-building-intelligent-apps-aks-ep4?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Episode 4: Taking Your Intelligent App Global with AKS</a></li>
</ul>
</li>
<li><strong>Register</strong> for the <a href="https://aka.ms/aks-day?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Kubernetes Day at KubeCon, EU</a> to meet the product engineering teams in-person and learn about the new product capabilities for intelligent apps.</li>
<li><strong>Complete</strong> the <a href="https://aka.ms/intelligent-apps/apps-csc?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Cloud Skills Challenge</a> to earn a Microsoft Learn badge – ends on <em>April 15</em>!</li>
</ul></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="60days-of-intelligent-apps">#60Days Of Intelligent Apps<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/kick-off#60days-of-intelligent-apps" class="hash-link" aria-label="Direct link to #60Days Of Intelligent Apps" title="Direct link to #60Days Of Intelligent Apps">​</a></h2>
<p><a href="https://aka.ms/build-ia/60days" target="_blank" rel="noopener noreferrer">#60Days of IA</a> is a series of blog posts grouped into themed weeks - taking you from core concepts to end-to-end solution examples in 60 days. Each blog will provide conceptual lessons paired with exercises and resources to help you reinforce learnings and take next steps.</p>
<p>This series takes you through learning journey in <strong>eight stages</strong>, each building on the previous week to help you skill up in a beginner-friendly way:</p>
<ul>
<li><strong>Week 1</strong>: Power of <a href="https://azure.microsoft.com/en-us/blog/build-next-generation-ai-powered-applications-on-microsoft-azure/?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Intelligent Applications</a></li>
<li><strong>Week 2</strong>: <a href="https://learn.microsoft.com/en-us/azure/aks/?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Kubernetes Service</a> is the platform of choice for intelligent apps</li>
<li><strong>Week 3</strong>: <a href="https://learn.microsoft.com/en-us/azure/cosmos-db/introduction?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Cosmos DB</a> is the database of choice for intelligent apps</li>
<li><strong>Week 4</strong>: <a href="https://learn.microsoft.com/en-us/azure/ai-services/ai-services-and-ecosystem?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure AI</a> is your choice for <a href="https://www.microsoft.com/en-us/ai/responsible-ai?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Responsible AI</a></li>
<li><strong>Week 5</strong>: Building an intelligent <a href="https://azure.microsoft.com/en-us/solutions/serverless/?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">serverless</a> event driven <a href="https://learn.microsoft.com/en-us/azure/azure-functions/functions-overview?pivots=programming-language-csharp?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">functions app</a></li>
<li><strong>Week 6</strong>: Build intelligent microservices with <a href="https://learn.microsoft.com/en-us/azure/container-apps/overview?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">serverless containers</a></li>
<li><strong>Week 7</strong>: <a href="https://learn.microsoft.com/en-us/platform-engineering/?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Platform engineering</a> needs for your intelligent apps</li>
<li><strong>Week 8</strong>: Managing cost for your intelligent apps</li>
</ul>
<p>We will start with defining intelligent apps and then expand on how to build with cloud-native technologies like <a href="https://azure.microsoft.com/en-us/products/kubernetes-service/?WT.mc_id=javascript-99907-ninarasi&amp;ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Kubernetes Service</a>, <a href="https://azure.microsoft.com/en-us/products/container-apps/?WT.mc_id=javascript-99907-ninarasi&amp;?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Container Apps</a> and <a href="https://azure.microsoft.com/en-us/products/functions?WT.mc_id=javascript-99907-ninarasi&amp;?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Functions</a>, as well as integrate AI and cloud-scale data. You will learn how to build end-to-end scenarios for real world application development based on <a href="https://learn.microsoft.com/en-us/azure/architecture/??ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">reference architectures</a>. Before we dive deep on intelligent apps, here is a high-level overview of the <strong>Intelligent Apps</strong> landscape on Azure for you to leverage the most comprehensive, trusted cloud to prime the customer and employee experiences.</p>
<p><img loading="lazy" alt="intelligent apps on Azure" src="https://azure.github.io/Cloud-Native/assets/images/intelligent-apps-on-azure-3a921fedb320e7c7d903aebad7248d3b.png" width="1280" height="720" class="img_ev3q"></p>
<p>Bring your applications to a modern application platform in the cloud, which leverages a cloud data platform at scale and agile development methods with DevOps is the best way to prime the customer and employee experiences. Azure offers the latest apps, data, AI and is the most comprehensive, trusted cloud.</p>
<p><img loading="lazy" alt="intelligent apps" src="https://azure.github.io/Cloud-Native/assets/images/intelligent-apps-5fb4e761e294fadde7c79685bd415a00.png" width="1280" height="720" class="img_ev3q"></p>
<p><strong>Containers on Azure</strong> services offer you a wide range of capabilities, from simplicity to control to suit your different needs.</p>
<p><img loading="lazy" alt="containers on azure" src="https://azure.github.io/Cloud-Native/assets/images/Containers-on-Azure-98bc0be88024cfcfaab2150a56d0f9f9.jpg" width="1280" height="720" class="img_ev3q"></p>
<p><img loading="lazy" alt="containers on azure" src="https://azure.github.io/Cloud-Native/assets/images/Containers-on-Azure-2-d540131359e93ea0f5da8bc2082fec3d.jpg" width="1280" height="720" class="img_ev3q"></p>
<p>To start with the basics for developing <a href="https://azure.microsoft.com/en-us/products/kubernetes-service/?WT.mc_id=javascript-99907-ninarasi&amp;ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Kubernetes</a> applications, explore <a href="https://azure.github.io/Cloud-Native/cnny-2023" target="_blank" rel="noopener noreferrer">#30Days of CloudNative</a>.</p>
<p>Cloud-native development when paired with <strong>serverless computing</strong> enhances your solution architecture for building cost optimized, resilient applications.</p>
<p><img loading="lazy" alt="serverless on Azure" src="https://azure.github.io/Cloud-Native/assets/images/serverless-on-azure-f9eb0000337edcfd1c86e90460767400.jpg" width="1280" height="720" class="img_ev3q"></p>
<p>To start with the basics for <a href="https://azure.microsoft.com/solutions/serverless/?WT.mc_id=javascript-99907-ninarasi&amp;?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">serverless computing</a>, explore <a href="https://azure.github.io/Cloud-Native/blog" target="_blank" rel="noopener noreferrer">#30DaysOfServerless</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="lets-get-started">Let’s Get Started<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/kick-off#lets-get-started" class="hash-link" aria-label="Direct link to Let’s Get Started" title="Direct link to Let’s Get Started">​</a></h2>
<p>Now you know everything! We hope you are as excited as we are to dive into a full month of active learning and doing! Don't forget to <a href="https://azure.github.io/Cloud-Native/60DaysOfIA/rss.xml" target="_blank" rel="noopener noreferrer">subscribe</a> for updates in your favorite feed reader. <strong>And, look out for our first Intelligent Apps blog on Monday, February 19!</strong></p>]]></content>
        <author>
            <name>#60Days Of IA</name>
            <uri>https://azure.github.io/Cloud-Native/Build-IA/</uri>
        </author>
        <category label="Build-Intelligent-Apps" term="Build-Intelligent-Apps"/>
        <category label="60-days-of-IA" term="60-days-of-IA"/>
        <category label="learn-live" term="learn-live"/>
        <category label="hack-together" term="hack-together"/>
        <category label="community-buzz" term="community-buzz"/>
        <category label="ask-the-expert" term="ask-the-expert"/>
        <category label="azure-kubernetes-service" term="azure-kubernetes-service"/>
        <category label="azure-functions" term="azure-functions"/>
        <category label="azure-openai" term="azure-openai"/>
        <category label="azure-container-apps" term="azure-container-apps"/>
        <category label="azure-cosmos-db" term="azure-cosmos-db"/>
        <category label="github-copilot" term="github-copilot"/>
        <category label="github-codespaces" term="github-codespaces"/>
        <category label="github-actions" term="github-actions"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[1. Harnessing the power of Intelligent Apps]]></title>
        <id>https://azure.github.io/Cloud-Native/60DaysOfIA/harnessing-the-power-of-intelligent-apps</id>
        <link href="https://azure.github.io/Cloud-Native/60DaysOfIA/harnessing-the-power-of-intelligent-apps"/>
        <updated>2024-02-19T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[Combine the power of AI, cloud-scale data, and cloud-native app development to create highly differentiated digital experiences. Develop adaptive, responsive, and personalized experiences by building and modernizing intelligent applications with Azure.]]></summary>
        <content type="html"><![CDATA[
<p><img loading="lazy" alt="intelligent apps on Azure" src="https://azure.github.io/Cloud-Native/assets/images/harnessing-the-power-of-intelligent-apps-3b3c32d8c0893071a61077331b877218.jpg" width="1000" height="561" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="harnessing-the-power-of-intelligent-apps">Harnessing the Power of Intelligent Apps<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/harnessing-the-power-of-intelligent-apps#harnessing-the-power-of-intelligent-apps" class="hash-link" aria-label="Direct link to Harnessing the Power of Intelligent Apps" title="Direct link to Harnessing the Power of Intelligent Apps">​</a></h2>
<p>Organizations are increasingly adopting advanced technologies to drive innovation and elevate operational efficiency. Intelligent apps—applications that integrate machine learning (ML), data analytics, and predictive or generative artificial intelligence (AI) to create differentiated digital experiences—are one way to achieve this. According to Gartner®, “by 2026, 30% of new applications will use AI to drive personalized adaptive user interfaces, up from less than 5% today”<sup>1</sup>.</p>
<p>Intelligent apps tend to fall into one of three categories:</p>
<ul>
<li><strong>Outcome-based apps</strong> — These apps focus on user intent, predictions, and task automation to enable better decision-making.</li>
<li><strong>Functionality-based apps</strong> — These apps use ML, AI, or APIs to generate content. They examine user patterns to provide personalized recommendations or feedback.</li>
<li><strong>Feature-based apps</strong> — These apps have AI or ML components built in, which means they rely on neural networks and internal LLMs to run advanced algorithms.</li>
</ul>
<p>Because Intelligent apps help organizations leverage business intelligence and other data to drive and automate organizational decision-making, they’re becoming a pivotal part of modern business strategies. In this article, we’ll spotlight the success stories of some organizations that have leveraged Microsoft Azure to create and deploy intelligent apps in their workflows and products.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="intelligent-apps-in-action">Intelligent Apps in Action<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/harnessing-the-power-of-intelligent-apps#intelligent-apps-in-action" class="hash-link" aria-label="Direct link to Intelligent Apps in Action" title="Direct link to Intelligent Apps in Action">​</a></h2>
<p>Intelligent Apps offer tangible business outcomes by automating complex processes, enhancing decision-making, and providing personalized experiences. By leveraging Azure services, the organizations discussed below have experienced a paradigm shift in their operations — and a boost in productivity and agility.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-intelligent-apps-power-the-ultimate-lego-experience">How Intelligent Apps Power the Ultimate LEGO Experience<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/harnessing-the-power-of-intelligent-apps#how-intelligent-apps-power-the-ultimate-lego-experience" class="hash-link" aria-label="Direct link to How Intelligent Apps Power the Ultimate LEGO Experience" title="Direct link to How Intelligent Apps Power the Ultimate LEGO Experience">​</a></h3>
<p>Denmark’s ultimate LEGO experience center, LEGO House, found challenges in maintaining its on-premises data center. To keep serving its custom-built digital experiences, the business upgraded its facilities with <a href="https://azure.microsoft.com/en-us/products/kubernetes-service/?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Kubernetes Service</a> (AKS) in 2023.</p>
<p>This shift in approach to the cloud was a boon for responsiveness — LEGO House could take on visitor feedback to swiftly update experiences and develop new ones. The containerized, component-based setup on AKS also allowed LEGO House’s digital tech stack to become more scalable and flexible, transforming development efficiency and maintenance.</p>
<p>LEGO House continued its partnership with Microsoft to launch experiences like City Architect — powered by <a href="https://azure.microsoft.com/en-us/products/iot-edge?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure IoT Edge Device</a> — and Robo Lab. These innovations allowed visitors to interact with digitally projected landscapes and build robots, fostering principles of programming. AKS streamlines integration and supports element reuse, enhancing efficiency and creativity.</p>
<p>The results were remarkable — improved stability, higher uptime, and positive visitor feedback. Azure services made life easier for LEGO House’s developers and gave the entire LEGO ecosystem a strong foundation for growth. Specifically, by allowing the reuse of elements, AKS provides a common foundation for all LEGO experience builds. The organization’s next move is to rebuild the entire House on the <a href="https://azure.microsoft.com/en-us/solutions/ai?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure AI</a> platform and AKS. Read more about how LEGO <a href="https://customers.microsoft.com/en-us/story/1703088157691224129-lego-house-azure-kubernetes-service-media-and-entertainment-denmark?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">modernized interactive experiences across LEGO House with Azure Kubernetes Service</a>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="using-intelligent-apps-to-make-cars-smarter-with-tomtom">Using Intelligent Apps to Make Cars Smarter With TomTom<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/harnessing-the-power-of-intelligent-apps#using-intelligent-apps-to-make-cars-smarter-with-tomtom" class="hash-link" aria-label="Direct link to Using Intelligent Apps to Make Cars Smarter With TomTom" title="Direct link to Using Intelligent Apps to Make Cars Smarter With TomTom">​</a></h3>
<p>TomTom’s navigation solutions have a proven track record of innovating the driving experience. Today, the company continues to adapt to drivers’ evolving needs. Using <a href="https://azure.microsoft.com/en-us/products/ai-services/openai-service/?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure OpenAI Service</a>, <a href="https://learn.microsoft.com/en-us/azure/cosmos-db/introduction?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Cosmos DB</a>, and <a href="https://azure.microsoft.com/en-us/products/kubernetes-service/?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">AKS</a> to develop Digital Cockpit, TomTom has created smarter, AI-powered vehicles, facilitating huge advancements in user experience.</p>
<p>Digital Cockpit is an AI-driven, conversational in-car infotainment system that allows drivers to interact naturally with the vehicle. It can perform tasks like navigation, controlling onboard systems, and even managing work tasks during electric vehicle recharging.</p>
<p>Let’s look closer at the Azure services that drive Digital Cockpit:</p>
<ul>
<li><strong>Azure OpenAI Service</strong> — The Azure OpenAI Service supports generative AI chatbots that provide natural-sounding voices and accurate transcription of spoken audio.</li>
<li><strong>Azure Cosmos DB</strong> — Azure Cosmos DB, a globally distributed database, retains customer conversations and preferences, allowing the system to continuously learn and tailor driver experiences.</li>
<li><strong>AKS</strong> — AKS accelerates service deployment and scaling, enhancing overall architecture efficiency.</li>
</ul>
<p>Internally, integrating Azure services resulted in a significant improvement in TomTom’s development efficiency. For example, the team working on the prototype no longer required ten engineers — three team members were sufficient to complete the task. Additionally, response times decreased from 12 to 2.5 seconds, and the system demonstrated a 95 percent success rate in understanding complex driver requests. Read more about how <a href="https://customers.microsoft.com/en-us/story/1723808815413508250-tomtom-azure-netherlands?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">TomTom brings AI-powered, talking cars to life with Azure</a>.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Try the <a href="https://aka.ms/intelligent-apps/apps-csc?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Intelligent Apps Skills Challenges</a> to compete for the leaderboard and earn a Microsoft Learn Badge.</p></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-gluwa-leverages-intelligent-apps-to-make-banking-more-accessible">How Gluwa Leverages Intelligent Apps to Make Banking More Accessible<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/harnessing-the-power-of-intelligent-apps#how-gluwa-leverages-intelligent-apps-to-make-banking-more-accessible" class="hash-link" aria-label="Direct link to How Gluwa Leverages Intelligent Apps to Make Banking More Accessible" title="Direct link to How Gluwa Leverages Intelligent Apps to Make Banking More Accessible">​</a></h3>
<p>San Francisco-based startup Gluwa is on a mission to address the financial gap for the unbanked and underbanked, estimated at 1.4 billion people globally. Combining blockchain technology and Azure services, Gluwa connects investors with individuals in emerging markets.</p>
<p>Gluwa harnesses the capabilities of various Azure services to power its blockchain services. <a href="https://azure.microsoft.com/en-us/products/container-instances?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Container Instances</a> and AKS play a pivotal role in peer-to-peer discovery, fostering a dynamic and efficient environment. <a href="https://azure.microsoft.com/en-us/products/app-configuration?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure App Configuration</a> streamlines the centralization of app configurations, ensuring seamless control and adaptability.</p>
<p>For secure media delivery, Gluwa relies on the powerful combination of <a href="https://azure.microsoft.com/en-us/products/cdn?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Content Delivery Network</a> and <a href="https://learn.microsoft.com/en-us/azure/storage/common/storage-introduction?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Storage</a>, which bolsters reliability and safeguards sensitive data. Using <a href="https://azure.microsoft.com/en-us/products/devops?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure DevOps</a> to manage intricate lifecycle builds, Gluwa streamlined the development process. <a href="https://azure.microsoft.com/en-us/products/app-service?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure App Services</a> serve as the backbone for Gluwa’s APIs, complemented by <a href="https://azure.microsoft.com/en-us/products/cache?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Redis</a> for optimal cache distribution, to enhance overall performance. Finally, <a href="https://azure.microsoft.com/en-us/products/azure-sql/database?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure SQL</a> and Azure Cosmos DB are scalable database solutions that support Gluwa’s infrastructure, ensuring adaptability and responsiveness in meeting evolving demands within the blockchain landscape.</p>
<p>Gluwa’s decentralized financial platform, Gluwa Invest, encourages stable coin investments, while the Creditcoin blockchain records loans, providing transparency and immutability. Together, they’ve facilitated nearly 4.27 million loan transactions, totaling over $79.7 million. Gluwa turned to Azure’s reliable, scalable cloud foundation to make these innovative and socially impactful initiatives a reality. Read more about how <a href="https://customers.microsoft.com/en-us/story/1709609183358710412-gluwa-azure-banking-and-capital-markets-usa?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Gluwa uses blockchain to help investors fund loans to the unbanked</a>.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/harnessing-the-power-of-intelligent-apps#summary" class="hash-link" aria-label="Direct link to Summary" title="Direct link to Summary">​</a></h2>
<p>Azure services have empowered organizations developing intelligent apps by offering scalability, flexibility, and seamless integration of ML, data analytics, and AI.</p>
<p>Azure’s impact extends beyond immediate efficiency gains, empowering developers to iterate, learn, and keep creating new experiences. Businesses that build with Azure services can streamline collaboration across ecosystems, unlocking collective vision and applied creativity.</p>
<p>Explore Microsoft <a href="https://customers.microsoft.com/en-us/home?sq=aks&amp;ff=&amp;p=1&amp;so=story_publish_date%20desc&amp;ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Customer Stories</a> for deeper insights into transformative, AI-powered solutions. Finally, don’t forget to mark your calendar for <a href="https://aka.ms/aks-day?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Kubernetes Day</a> at <a href="https://events.linuxfoundation.org/kubecon-cloudnativecon-europe/" target="_blank" rel="noopener noreferrer">KubeCon EU 2024</a> to get the latest on cutting-edge developments in cloud technology.</p>
<p><sup>1</sup> Source: <a href="https://www.gartner.com/en/articles/demand-grows-for-intelligent-applications-powered-by-ai" target="_blank" rel="noopener noreferrer">Gartner, Demand Grows for Intelligent Applications Powered by AI, September 27, 2023</a>. GARTNER is a registered trademark and service mark of Gartner, Inc. and/or its affiliates in the U.S. and internationally and is used herein with permission. All rights reserved.</p>]]></content>
        <author>
            <name>#60Days Of IA</name>
            <uri>https://azure.github.io/Cloud-Native/Build-IA/</uri>
        </author>
        <category label="Build-Intelligent-Apps" term="Build-Intelligent-Apps"/>
        <category label="60-days-of-IA" term="60-days-of-IA"/>
        <category label="learn-live" term="learn-live"/>
        <category label="hack-together" term="hack-together"/>
        <category label="community-buzz" term="community-buzz"/>
        <category label="ask-the-expert" term="ask-the-expert"/>
        <category label="azure-kubernetes-service" term="azure-kubernetes-service"/>
        <category label="azure-functions" term="azure-functions"/>
        <category label="azure-openai" term="azure-openai"/>
        <category label="azure-container-apps" term="azure-container-apps"/>
        <category label="azure-cosmos-db" term="azure-cosmos-db"/>
        <category label="github-copilot" term="github-copilot"/>
        <category label="github-codespaces" term="github-codespaces"/>
        <category label="github-actions" term="github-actions"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2. Power Up: Crafting an Intelligent Energy Forecasting Application Using Azure Kubernetes Service]]></title>
        <id>https://azure.github.io/Cloud-Native/60DaysOfIA/power-up-crafting-an-intelligent-energy-forecasting-application-using-azure-kubernetes-service</id>
        <link href="https://azure.github.io/Cloud-Native/60DaysOfIA/power-up-crafting-an-intelligent-energy-forecasting-application-using-azure-kubernetes-service"/>
        <updated>2024-02-27T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this article, we’ll will guide you through creating an intelligent app that leverages Azure technologies, including Azure Kubernetes Service (AKS), to build an application that forecasts energy usage and pricing.]]></summary>
        <content type="html"><![CDATA[
<p>At the forefront of recent technological innovation are intelligent apps: apps that use machine learning (ML), artificial intelligence (AI), and data analytics. These apps support smarter, data-driven decisions, making them particularly useful in sectors like energy management, where efficiency and long-term planning are critical.</p>
<p>Our upcoming series will guide you through creating an intelligent app that leverages Azure technologies, including <a href="https://azure.microsoft.com/products/kubernetes-service?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Kubernetes Service</a> (AKS), to build an application that forecasts energy usage and pricing.</p>
<p>Your app will harness AKS for hosting and AI to analyze historical energy consumption data. Then, you’ll integrate the Kubernetes AI Toolchain Operator (KAITO) with advanced analytical tools—such as LLaMA 2, Langchain, and pandas—to build an intelligent app that underscores the importance of green energy practices and demonstrates the versatility and efficacy of Azure services.</p>
<p>We invite you to join us on this three-part educational series, where you’ll learn the skills needed to construct your own intelligent apps. This series is more than a technical walkthrough: It’s an opportunity to engage with cutting-edge technologies and contribute to meaningful advancements in energy management.</p>
<p>Whether you’re an experienced developer or new to the AI and ML sphere, this series will give you a glimpse into the future of application development and the strategic impact of cloud technologies in driving forward-thinking solutions.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-synergy-of-azure-kubernetes-service-and-intelligent-apps">The Synergy of Azure Kubernetes Service and Intelligent Apps<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/power-up-crafting-an-intelligent-energy-forecasting-application-using-azure-kubernetes-service#the-synergy-of-azure-kubernetes-service-and-intelligent-apps" class="hash-link" aria-label="Direct link to The Synergy of Azure Kubernetes Service and Intelligent Apps" title="Direct link to The Synergy of Azure Kubernetes Service and Intelligent Apps">​</a></h2>
<p>Using AKS as the backbone of intelligent apps has numerous benefits — especially when deploying your AI-driven application. AKS provides a managed, cloud-based container orchestration service that simplifies deploying, managing, and scaling AI-backed applications, making it ideal for a project like the one you’ll create in this series.</p>
<p>One of the primary advantages of AKS is its ability to handle distributed applications with evolving demands. For AI-driven apps, the ability to scale resources based on computational demands is crucial. Because AKS allows for automatic scaling, intelligent apps have the necessary resources during peak analysis times without wasting resources during quieter periods. But this dynamic scalability isn’t just about handling loads efficiently: It’s also cost-effective, ensuring that you pay only for the resources you use.</p>
<p>Integrating the Kaito operator with AKS further enhances the deployment of AI models like LLaMA 2 by simplifying the complexities of managing AI workloads. Kaito, designed specifically for Kubernetes environments, acts as a bridge between the advanced AI models and the scalable, managed infrastructure provided by AKS. It offers custom resource definitions (CRDs) tailored for AI applications, facilitating the deployment, updating, and management of AI models within the Kubernetes ecosystem.</p>
<p>This seamless integration enables developers to focus more on the application logic and less on the underlying infrastructure, accelerating the development cycle and reducing the time to market for innovative AI solutions.</p>
<p>AKS and KAITO create a robust, flexible, and efficient environment for developing and deploying intelligent applications. This combination not only leverages the cloud’s power and scalability but also optimizes the deployment of AI models, making it easier for developers to bring complex, data-driven applications to life.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Register for <strong><a href="https://developer.microsoft.com/en-us/reactor/events/21815/?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Intelligent Apps on AKS: Episode 2</a></strong>, a live hands-on training with an expert on how to use AKS to run your own AI models with KAITO.</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="laying-the-groundwork-with-azure-kubernetes-service">Laying the Groundwork with Azure Kubernetes Service<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/power-up-crafting-an-intelligent-energy-forecasting-application-using-azure-kubernetes-service#laying-the-groundwork-with-azure-kubernetes-service" class="hash-link" aria-label="Direct link to Laying the Groundwork with Azure Kubernetes Service" title="Direct link to Laying the Groundwork with Azure Kubernetes Service">​</a></h2>
<p>In the <a href="https://azure.github.io/Cloud-Native/60DaysOfIA/forecasting-energy-usage-with-intelligent-apps-1" target="_blank" rel="noopener noreferrer">first installment of this series</a>, you’ll roll up your sleeves and set up an AKS environment. This step is foundational to the rest of the series, laying the groundwork for deploying and managing your application — and accessing the full scalability and flexibility that AKS offers.</p>
<p>The article starts with a straightforward step-by-step guide on establishing the AKS environment, ensuring you have a solid base for the exciting journey ahead. This tutorial is succinct to maintain clarity and speedy development, offering links to additional resources for well-documented steps.</p>
<p>Next, you’ll meet KAITO, a tool that streamlines deploying AI applications in Kubernetes environments. The core of this article is configuring <a href="https://github.com/Azure/kaito" target="_blank" rel="noopener noreferrer">the KAITO operator</a> to work seamlessly with the LLaMA 2 model, providing hands-on instructions, code samples, and screenshots to guide you through each step.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="adding-intelligence-to-the-app">Adding Intelligence to the App<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/power-up-crafting-an-intelligent-energy-forecasting-application-using-azure-kubernetes-service#adding-intelligence-to-the-app" class="hash-link" aria-label="Direct link to Adding Intelligence to the App" title="Direct link to Adding Intelligence to the App">​</a></h2>
<p>The second part of this series dives into the more practical aspects of building the Intelligent App. You’ll leverage an open-source energy dataset alongside powerful tools like LangChain and a pandas Python agent to craft a forecasting model that predicts future energy demands with speed and precision.</p>
<p>Integrating these tools with AKS highlights the high-impact relationship between robust data processing capabilities and scalable cloud infrastructure. Hands-on examples and streamlined code will guide you through setting up the environment, processing the dataset, and deploying the forecasting model.</p>
<p>This practical application reinforces the theoretical foundations laid in Part 1 and sets the stage for advanced analytics and AI-driven predictions. As you progress through the tutorial, the focus will remain on simplicity and efficiency, ensuring that even complex AI-related processes become accessible.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Complete the <strong><a href="https://aka.ms/intelligent-apps/apps-csc?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Intelligent Apps Skills Challenge</a></strong> to compete for the leaderboard and earn a Microsoft Learn Badge.</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="building-a-web-interface">Building a Web Interface<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/power-up-crafting-an-intelligent-energy-forecasting-application-using-azure-kubernetes-service#building-a-web-interface" class="hash-link" aria-label="Direct link to Building a Web Interface" title="Direct link to Building a Web Interface">​</a></h2>
<p>As the concluding installment of our series, part 3 assembles all the pieces by introducing a user-friendly web interface. Here, users can input or upload their energy usage data and parameters, after which the Intelligent App will generate future predictions on usage and pricing.</p>
<p>This web front end serves as the direct point of interaction with your AKS-hosted application, seamlessly displaying the reports and predictions the AI model produces.</p>
<p>After deploying this interface in the AKS environment established in <a href="https://azure.github.io/Cloud-Native/60DaysOfIA/forecasting-energy-usage-with-intelligent-apps-1" target="_blank" rel="noopener noreferrer">part 1</a>, you’ll experience the complete cycle of developing an intelligent, data-driven application and appreciate how straightforward it is to engineer intelligent apps that can deliver tangible, user-centric outcomes.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ready-to-get-started">Ready to Get Started?<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/power-up-crafting-an-intelligent-energy-forecasting-application-using-azure-kubernetes-service#ready-to-get-started" class="hash-link" aria-label="Direct link to Ready to Get Started?" title="Direct link to Ready to Get Started?">​</a></h2>
<p>Together, these three articles guide you through creating an innovative, AI-driven energy forecasting app. Setting up a scalable AKS environment with integrated cutting-edge AI models, processing open-source energy data for insightful predictions, and deploying a user-friendly web interface will equip you with the tools you need to build your own Intelligent Apps.</p>
<p>Stay tuned for each part of the series and get ready to dive into the world of Azure, AI, and application development with us. Join us in this exciting venture and harness the power of technology to make a difference. Register for the <strong><a href="https://aka.ms/learn-live-building-intelligent-apps-aks-ep2?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Intelligent Apps on AKS: Episode 2</a></strong>  to experience live hands-on training with an expert on how to use AKS to run your own AI models with KAITO.</p>]]></content>
        <author>
            <name>#60Days Of IA</name>
            <uri>https://azure.github.io/Cloud-Native/Build-IA/</uri>
        </author>
        <category label="Build-Intelligent-Apps" term="Build-Intelligent-Apps"/>
        <category label="60-days-of-IA" term="60-days-of-IA"/>
        <category label="learn-live" term="learn-live"/>
        <category label="hack-together" term="hack-together"/>
        <category label="community-buzz" term="community-buzz"/>
        <category label="ask-the-expert" term="ask-the-expert"/>
        <category label="azure-kubernetes-service" term="azure-kubernetes-service"/>
        <category label="azure-functions" term="azure-functions"/>
        <category label="azure-openai" term="azure-openai"/>
        <category label="azure-container-apps" term="azure-container-apps"/>
        <category label="azure-cosmos-db" term="azure-cosmos-db"/>
        <category label="github-copilot" term="github-copilot"/>
        <category label="github-codespaces" term="github-codespaces"/>
        <category label="github-actions" term="github-actions"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2.1 Forecasting Energy Usage with Intelligent Apps Part 1: Laying the Groundwork with AKS, KAITO, and LLaMA]]></title>
        <id>https://azure.github.io/Cloud-Native/60DaysOfIA/forecasting-energy-usage-with-intelligent-apps-1</id>
        <link href="https://azure.github.io/Cloud-Native/60DaysOfIA/forecasting-energy-usage-with-intelligent-apps-1"/>
        <updated>2024-03-05T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this series, you’ll create an Intelligent App powered by Azure Kubernetes Service (AKS) to forecast energy usage and cost.]]></summary>
        <content type="html"><![CDATA[
<p><img loading="lazy" alt="Forecasting Energy Usage with Intelligent Apps: Laying the Groundwork with AKS, KAITO, and LLaMA" src="https://azure.github.io/Cloud-Native/assets/images/2-1-1-bbabd21a17593792973868c2ad8ae31f.jpg" width="700" height="426" class="img_ev3q"></p>
<p><em>This three-part series demonstrates how to create an Intelligent App that forecasts future energy consumption and pricing based on historical data. In this first article, you’ll set up an Azure Kubernetes Service (AKS) environment, install KAITO, and set up KAITO to work with the LLaMA 2 model.</em></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="forecasting-energy-usage-with-intelligent-apps-part-1-laying-the-groundwork-with-aks-kaito-and-llama">Forecasting Energy Usage with Intelligent Apps Part 1: Laying the Groundwork with AKS, KAITO, and LLaMA<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/forecasting-energy-usage-with-intelligent-apps-1#forecasting-energy-usage-with-intelligent-apps-part-1-laying-the-groundwork-with-aks-kaito-and-llama" class="hash-link" aria-label="Direct link to Forecasting Energy Usage with Intelligent Apps Part 1: Laying the Groundwork with AKS, KAITO, and LLaMA" title="Direct link to Forecasting Energy Usage with Intelligent Apps Part 1: Laying the Groundwork with AKS, KAITO, and LLaMA">​</a></h2>
<p>Intelligent Apps leverage artificial intelligence (AI) and machine learning (ML) technologies to enhance traditional applications with advanced capabilities. They enable businesses to make smarter decisions, automate tasks, and drive innovation by extracting actionable insights from vast amounts of data.</p>
<p>In this series, you’ll create an Intelligent App powered by <a href="https://azure.microsoft.com/en-ca/products/kubernetes-service" target="_blank" rel="noopener noreferrer">Azure Kubernetes Service</a> (AKS) to forecast energy usage and cost. Each article will demonstrate the use of core Azure technologies, particularly AKS, to build an application that generates forecasts based on AI capabilities applied to user input and historical data analysis.</p>
<p>Let’s get started!</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="prerequisites">Prerequisites<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/forecasting-energy-usage-with-intelligent-apps-1#prerequisites" class="hash-link" aria-label="Direct link to Prerequisites" title="Direct link to Prerequisites">​</a></h3>
<p>To follow this tutorial, ensure you have the following:</p>
<ul>
<li>An <a href="https://azure.microsoft.com/en-us/free/search" target="_blank" rel="noopener noreferrer">Azure Subscription</a> that supports the GPU-enabled <a href="https://learn.microsoft.com/en-us/azure/virtual-machines/ncv3-series" target="_blank" rel="noopener noreferrer">Standard_NC12s_v3 instance type</a> in the selected region. You might need to request an increase in vCPU quota.</li>
<li>Basic understanding of <a href="https://azure.microsoft.com/en-us/products/kubernetes-service" target="_blank" rel="noopener noreferrer">AKS</a> and Kubernetes</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="building-an-intelligent-app-with-azure-kubernetes-service-and-kaito">Building an Intelligent App with Azure Kubernetes Service and KAITO<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/forecasting-energy-usage-with-intelligent-apps-1#building-an-intelligent-app-with-azure-kubernetes-service-and-kaito" class="hash-link" aria-label="Direct link to Building an Intelligent App with Azure Kubernetes Service and KAITO" title="Direct link to Building an Intelligent App with Azure Kubernetes Service and KAITO">​</a></h3>
<p>This first article walks you through setting up an AKS environment and the Kubernetes AI Toolchain Operator (KAITO) to automate AI/ML model deployment in the AKS cluster.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="downloading-the-llama-2-model">Downloading the LLaMA 2 Model<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/forecasting-energy-usage-with-intelligent-apps-1#downloading-the-llama-2-model" class="hash-link" aria-label="Direct link to Downloading the LLaMA 2 Model" title="Direct link to Downloading the LLaMA 2 Model">​</a></h4>
<p>A fundamental piece in your Intelligent App’s architecture is the target model. Here, you’ll use LLaMA 2, an open-source project developed by Meta in partnership with Microsoft.</p>
<p>LLaMA 2 is a large-scale training and inference framework for ML models. It provides a distributed computing infrastructure that enables executing ML tasks across multiple nodes or clusters, using parallelism and optimization techniques to improve performance.</p>
<p>To configure your model, download LLaMA 2 by following the instructions in <a href="https://github.com/Azure/kaito/tree/main/presets/models/llama2" target="_blank" rel="noopener noreferrer">this document</a>. Ensure you download the <strong>llama2-7b</strong> model.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="configuring-the-aks-cluster-and-kaito">Configuring the AKS Cluster and KAITO<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/forecasting-energy-usage-with-intelligent-apps-1#configuring-the-aks-cluster-and-kaito" class="hash-link" aria-label="Direct link to Configuring the AKS Cluster and KAITO" title="Direct link to Configuring the AKS Cluster and KAITO">​</a></h4>
<p><img loading="lazy" alt="engergy-usage-aks model" src="https://azure.github.io/Cloud-Native/assets/images/2-1-2-330abba56cfa621014fbd395b9b6297c.jpg" width="1484" height="694" class="img_ev3q"></p>
<p>Creating an AKS environment is the first step for onboarding large AI inference models onto Kubernetes. Later, you’ll integrate the node provisioner controller with AKS APIs, letting you dynamically add GPU nodes to the cluster to promote scalability and optimal resource use.</p>
<p>Additionally, AKS facilitates testing service endpoints within the cluster, providing a reliable environment for validating and fine-tuning AI inference services.</p>
<p>KAITO is an open-source operator that transforms how you deploy AI models on Kubernetes. It streamlines the process, automating critical tasks like infrastructure provisioning and resource optimization. It intelligently selects the optimal hardware configuration for your specific model, using available CPU and GPU resources on AKS. KAITO eliminates the manual setup complexities, accelerating your deployment time and reducing associated costs.</p>
<p>To set up an AKS cluster and install KAITO, follow <a href="https://github.com/Azure/kaito/blob/main/docs/installation.md" target="_blank" rel="noopener noreferrer">this tutorial</a>, adjusting the KAITO installation steps to match the <strong>llama2-7b</strong> model you downloaded earlier.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Register for <strong><a href="https://aka.ms/learn-live-building-intelligent-apps-aks-ep3?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Intelligent Apps on AKS: Episode 3</a></strong>, a live hands-on training with an expert on how OpenCost, Prometheus, and Grafana with AKS can improve intelligent apps.</p></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="pushing-llama-2-model-to-azure-container-registry">Pushing LLaMA 2 Model to Azure Container Registry<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/forecasting-energy-usage-with-intelligent-apps-1#pushing-llama-2-model-to-azure-container-registry" class="hash-link" aria-label="Direct link to Pushing LLaMA 2 Model to Azure Container Registry" title="Direct link to Pushing LLaMA 2 Model to Azure Container Registry">​</a></h4>
<p>Now that you have AKS with the KAITO installation, you need to push the local model image to the AKS cluster.</p>
<p>Create an Azure Container Registry (ACR) resource using Azure CLI with the following command, replacing <code>&lt;YOUR-ACR-NAME&gt;</code> with a new ACR name:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">az acr create --name &lt;YOUR-ACR-NAME&gt; --resource-group $RESOURCE_GROUP --sku Standard --location $LOCATION</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Now, push your local LLaMA 2 model’s Docker image to the ACR hosted at <code>&lt;YOUR-ACR-NAME&gt;.azurecr.io</code> by running:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker push &lt;YOUR-ACR-NAME&gt;.azurecr.io/llama2_model:latest</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Finally, run the command to update the AKS cluster to attach it to your ACR, allowing the cluster to pull the model container image from <code>&lt;YOUR-ACR-NAME&gt;.azurecr.io</code>:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">az aks update -g $RESOURCE_GROUP -n $MY_CLUSTER --attach-acr &lt;YOUR-ACR-NAME&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="starting-the-inference-service">Starting the Inference Service<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/forecasting-energy-usage-with-intelligent-apps-1#starting-the-inference-service" class="hash-link" aria-label="Direct link to Starting the Inference Service" title="Direct link to Starting the Inference Service">​</a></h4>
<p>After installing KAITO, run the following command to start a <code>llama-2-7b</code> inference service, replacing <code>&lt;YOUR-ACR-NAME&gt;</code> with the ACR name you created previously:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ cat examples/kaito_workspace_llama2_7b.yaml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">apiVersion: kaito.sh/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kind: Workspace</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">metadata:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name: workspace-llama-2-7b</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">resource:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  instanceType: "Standard_NC12s_v3"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  labelSelector:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    matchLabels:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      apps: llama-2-7b</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">inference:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  preset:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name: "llama-2-7b"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    accessMode: private</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    presetOptions:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      image: &lt;YOUR-ACR-NAME&gt;.azurecr.io/llama2_model:latest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl apply -f examples/kaito_workspace_llama2_7b.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Kubernetes uses this YAML code to instantiate a workspace resource with the specified configurations. This enables deploying and managing inference workloads within the cluster.</p>
<p>You can monitor the workspace status by executing the command below. The model deployment has been completed once the <code>WORKSPACEREADY</code> column becomes <code>True</code>:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl get workspace workspace-llama-2-7b </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| NAME | INSTANCE | RESOURCEREADY | INFERENCEREADY | WORKSPACEREADY | AGE |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| workspace-llama-2-7b | Standard_NC12s_v3 | True | True | True | 10m |</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>Note</strong>: Achieving machine and workspace readiness may take up to 20 minutes.</p>
<p>Now, run the command below to find the inference service’s cluster IP:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl get svc workspace-llama-2-7b </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| NAME | TYPE | CLUSTER-IP | EXTERNAL-IP | PORT(S) | AGE |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| workspace-llama-2-7b | ClusterIP | &lt;CLUSTERIP&gt; | &lt;none&gt; | 80/TCP,29500/TCP | 10m |</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Finally, run a curl pod to test the service endpoint in the cluster:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">export CLUSTERIP=$(kubectl get svc workspace-llama-2-7b -o jsonpath="{.spec.clusterIPs[0]}")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl run -it --rm --restart=Never curl --image=curlimages/curl -- curl -X POST http://$CLUSTERIP/generate -H "accept: application/json" -H "Content-Type: application/json" -d "{\"prompts\":[\"What is the capital of India?\"],\"parameters\": {\"temperature\": 0, \"max_gen_len\": 64 }}"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>You should receive these results:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{"results":[{"prompt":"What is the capital of India?","response":"\nWhat is the capital of India? New Delhi is the capital of India. It is located in the northern part of the country. It is also the home of the President of India.\nWhat is the"}]}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>Note</strong>: You can test with your own questions, but there may be inaccuracies within the response. This is because AKS hasn’t fine-tuned the model for your scenario.</p>
<p>That’s it! You’ve successfully established your AKS environment and familiarized yourself with setting up KAITO to deploy the LLaMA 2 model within your Kubernetes environment. You’re now ready to analyze a model and make predictions using Azure’s AI services.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="next-steps">Next Steps<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/forecasting-energy-usage-with-intelligent-apps-1#next-steps" class="hash-link" aria-label="Direct link to Next Steps" title="Direct link to Next Steps">​</a></h2>
<p>In this article, you established an AKS cluster and configured KAITO to integrate with the LLaMA 2 model for advanced ML capabilities. In part 2, you’ll use AKS and KAITO to analyze historical energy consumption data with advanced ML models. You’ll create a dynamic web interface for users to input data, generate predictions, and visualize results seamlessly.</p>
<p>Be sure to join the <a href="https://azure.github.io/Cloud-Native/Build-IA/CloudSkills" target="_blank" rel="noopener noreferrer">Cloud Skill Challenge</a> to level up your cloud computing skills and gain hands-on experience. You can also register for the <a href="https://aka.ms/learn-live-building-intelligent-apps-aks-ep3?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">next episode</a> on <strong>Intelligent Apps with Azure Kubernetes Service</strong>, an instructor led live learning experience to deploy your app on AKS. And, join the AKS product and engineering team at <em>KubeCon EU 2024</em>—the premier conference for cloud-native technologies, for <strong>AKS <a href="https://aka.ms/aks-day" target="_blank" rel="noopener noreferrer">Customer</a> and <a href="https://aka.ms/aks-lab-day" target="_blank" rel="noopener noreferrer">Lab</a> Days</strong>.</p>]]></content>
        <author>
            <name>#60Days Of IA</name>
            <uri>https://azure.github.io/Cloud-Native/Build-IA/</uri>
        </author>
        <category label="Build-Intelligent-Apps" term="Build-Intelligent-Apps"/>
        <category label="60-days-of-IA" term="60-days-of-IA"/>
        <category label="learn-live" term="learn-live"/>
        <category label="hack-together" term="hack-together"/>
        <category label="community-buzz" term="community-buzz"/>
        <category label="ask-the-expert" term="ask-the-expert"/>
        <category label="azure-kubernetes-service" term="azure-kubernetes-service"/>
        <category label="azure-functions" term="azure-functions"/>
        <category label="azure-openai" term="azure-openai"/>
        <category label="azure-container-apps" term="azure-container-apps"/>
        <category label="azure-cosmos-db" term="azure-cosmos-db"/>
        <category label="github-copilot" term="github-copilot"/>
        <category label="github-codespaces" term="github-codespaces"/>
        <category label="github-actions" term="github-actions"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[3. Cosmos DB and Intelligent Apps: A Match Made for Innovation]]></title>
        <id>https://azure.github.io/Cloud-Native/60DaysOfIA/cosmos-db-and-intelligent-apps-a-match-made-for-innovation</id>
        <link href="https://azure.github.io/Cloud-Native/60DaysOfIA/cosmos-db-and-intelligent-apps-a-match-made-for-innovation"/>
        <updated>2024-03-07T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this series, you’ll learn why Cosmos DB is an ideal choice for powering such applications—and how it makes building Intelligent Apps accessible and approachable.]]></summary>
        <content type="html"><![CDATA[
<p><img loading="lazy" alt="Cosmos DB and Intelligent Apps: A Match Made for Innovation" src="https://azure.github.io/Cloud-Native/assets/images/3-1-f7591beb1d3d4e2aa01db52eaeab6713.jpeg" width="624" height="380" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cosmos-db-and-intelligent-apps-a-match-made-for-innovation">Cosmos DB and Intelligent Apps: A Match Made for Innovation<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/cosmos-db-and-intelligent-apps-a-match-made-for-innovation#cosmos-db-and-intelligent-apps-a-match-made-for-innovation" class="hash-link" aria-label="Direct link to Cosmos DB and Intelligent Apps: A Match Made for Innovation" title="Direct link to Cosmos DB and Intelligent Apps: A Match Made for Innovation">​</a></h2>
<p>Intelligent Apps represent the next frontier in application development. Merging machine learning (ML), data analytics, and artificial intelligence (AI), Intelligent Apps help drive and automate informed decisions within everyday workflows. These applications can offer predictive insights and personalized experiences by understanding user intent, making predictions, and automating tasks.</p>
<p>The core of Intelligent Apps lies in their ability to harness vast amounts of data, analyze it for patterns, and use these insights to improve decision-making processes, enhance user experiences, and streamline operations.</p>
<p><a href="https://azure.microsoft.com/free/cosmos-db?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Cosmos DB</a> plays an instrumental role in building these advanced applications. Its scalability, multi-model support, and seamless integration with Azure AI Services make it a solid foundation for Intelligent Apps. Using Cosmos DB, you can manage and analyze large volumes of diverse data worldwide with minimal latency, ensuring the apps you build are intelligent, highly responsive, and globally available. Moreover, the service’s ability to handle real-time data updates and queries empowers Intelligent Apps to deliver dynamic, up-to-the-minute insights and actions.</p>
<p>Our three-part series demonstrates how to use Cosmos DB alongside Azure AI Services to create an Intelligent App that forecasts price fluctuations based on historical pricing and product data. In completing this series, you’ll learn why Cosmos DB is an ideal choice for powering such applications—and how it makes building Intelligent Apps accessible and approachable.</p>
<p>Join us as we embark on this journey to unlock the potential of Intelligent Apps with Cosmos DB!</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Complete the <strong><a href="https://aka.ms/intelligent-apps/data-csc?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Intelligent Apps Data Skills Challenge</a></strong> to compete for the leaderboard and earn a Microsoft Learn Badge.</p></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="building-an-intelligent-forecasting-demo-for-e-commerce">Building an Intelligent Forecasting Demo for E-Commerce<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/cosmos-db-and-intelligent-apps-a-match-made-for-innovation#building-an-intelligent-forecasting-demo-for-e-commerce" class="hash-link" aria-label="Direct link to Building an Intelligent Forecasting Demo for E-Commerce" title="Direct link to Building an Intelligent Forecasting Demo for E-Commerce">​</a></h3>
<p>In the competitive e-commerce landscape, the ability to adapt pricing in real time based on demand and historical data is a valuable asset. So, this project focuses on developing a forecasting model that leverages AI/ML capabilities to predict future price changes. By integrating this model into your projects, you can enhance your applications with data-driven decision-making tools that respond effectively to market trends.</p>
<p>At the heart of this project is Azure Cosmos DB, chosen for its robust data management and analysis features. Cosmos DB facilitates the handling of large datasets required for accurate forecasting, providing a scalable, globally distributed database environment that supports real-time updates and queries. This capability is crucial for applying AI algorithms to historical price data, enabling the app to generate timely predictions that can inform pricing strategies.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="laying-the-groundwork-with-cosmos-db">Laying the Groundwork with Cosmos DB<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/cosmos-db-and-intelligent-apps-a-match-made-for-innovation#laying-the-groundwork-with-cosmos-db" class="hash-link" aria-label="Direct link to Laying the Groundwork with Cosmos DB" title="Direct link to Laying the Groundwork with Cosmos DB">​</a></h3>
<p><a href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-1" target="_blank" rel="noopener noreferrer">Part 1 of our series</a> starts with the foundation: setting up an Azure Cosmos DB environment tailored for the intelligent forecasting application. We’ll guide you through the initial steps of creating and configuring your Cosmos DB instance to ensure it’s ready to handle the complexities of historical pricing data.</p>
<p>This installment reviews how to populate your database with relevant data that will serve as the backbone for the dynamic repricing model. Once the Cosmos DB environment is established and filled with historical pricing data, you’ll be in a strong position to start leveraging Azure AI Services to analyze this data and predict future price trends.</p>
<p>But the first article isn’t just about setting up a database: It’s about preparing the stage for a sophisticated application that can dynamically adjust e-commerce prices. Through this exercise, you’ll learn the importance of a well-structured data foundation and how it enables the creation of more responsive and intelligent e-commerce platforms.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="analyzing-data-with-azure-ai-services">Analyzing Data with Azure AI Services<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/cosmos-db-and-intelligent-apps-a-match-made-for-innovation#analyzing-data-with-azure-ai-services" class="hash-link" aria-label="Direct link to Analyzing Data with Azure AI Services" title="Direct link to Analyzing Data with Azure AI Services">​</a></h3>
<p>In part 2 of this series, the spotlight turns to Azure AI Services. You’ll explore how to harness Azure’s powerful AI capabilities to sift through the dataset, identifying patterns and trends that are key to understanding future price fluctuations.</p>
<p>This stage is all about bridging the gap between raw data and actionable insights, demonstrating how to apply AI capabilities to accurately forecast prices. We’ll walk step-by-step through integrating Azure AI Services with Cosmos DB, helping you create a seamless workflow that brings the dynamic repricing model to life.</p>
<p>This hands-on exploration will equip you with the skills to implement intelligent forecasting within your own e-commerce platforms—something that helps you make data-driven decisions on inventory pricing. By the end of part 2, you’ll have a fully operational forecasting model capable of predicting price trends based on historical data.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="building-the-web-interface">Building the Web Interface<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/cosmos-db-and-intelligent-apps-a-match-made-for-innovation#building-the-web-interface" class="hash-link" aria-label="Direct link to Building the Web Interface" title="Direct link to Building the Web Interface">​</a></h3>
<p>In part 3 of this series, you’ll create a simple, yet effective web interface for the Intelligent App. This interface will serve as the window through which you can easily view and interact with the results of the dynamic repricing tool. We’ll guide you through the development process, showcasing how to use popular web technologies to build an interface.</p>
<p>This web interface is critical in making the Intelligent App not just a powerful analytical tool but also a practical solution for e-commerce businesses. By providing a clear and intuitive way to access and understand the pricing forecasts, you can efficiently make informed decisions about pricing.</p>
<p>This final piece of the series ties together all the components of the project and highlights the importance of user experience in the deployment of Intelligent Apps.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Check out the <a href="https://aka.ms/intelligent-apps/ate-cosmos?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Cosmos DB Ask The Expert</a> session to learn how to build RAG solutions, manage chat history by seamlessly connecting with Azure OpenAI, as well as explore the power of Azure Cosmos DB's copilot. The experts will also cover how to seamlessly integrate your operational and transactional data with AI frameworks and sdks like Semantic Kernel, Langchain, and LlamaIndex.</p></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="harnessing-cosmos-db-for-intelligent-apps">Harnessing Cosmos DB for Intelligent Apps<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/cosmos-db-and-intelligent-apps-a-match-made-for-innovation#harnessing-cosmos-db-for-intelligent-apps" class="hash-link" aria-label="Direct link to Harnessing Cosmos DB for Intelligent Apps" title="Direct link to Harnessing Cosmos DB for Intelligent Apps">​</a></h3>
<p>In this exploration of how to build an Intelligent App with Cosmos DB, you’ll have completed a project that showcases the power of Azure services and demonstrates the practical applications of these technologies in forecasting for e-commerce. And by walking through the steps needed to use Cosmos DB alongside Azure AI Services, you’re walking away with a blueprint for building apps that can dynamically adjust pricing based on historical data and market trends.</p>
<p>Stay tuned for our series to dive deeper into the creation of this forecasting tool. Whether you’re looking to enhance your technical skills or implement intelligent solutions in your own projects, following along will shine light onto the value of using Cosmos DB for Intelligent Apps.</p>]]></content>
        <author>
            <name>#60Days Of IA</name>
            <uri>https://azure.github.io/Cloud-Native/Build-IA/</uri>
        </author>
        <category label="Build-Intelligent-Apps" term="Build-Intelligent-Apps"/>
        <category label="60-days-of-IA" term="60-days-of-IA"/>
        <category label="learn-live" term="learn-live"/>
        <category label="hack-together" term="hack-together"/>
        <category label="community-buzz" term="community-buzz"/>
        <category label="ask-the-expert" term="ask-the-expert"/>
        <category label="azure-kubernetes-service" term="azure-kubernetes-service"/>
        <category label="azure-functions" term="azure-functions"/>
        <category label="azure-openai" term="azure-openai"/>
        <category label="azure-container-apps" term="azure-container-apps"/>
        <category label="azure-cosmos-db" term="azure-cosmos-db"/>
        <category label="github-copilot" term="github-copilot"/>
        <category label="github-codespaces" term="github-codespaces"/>
        <category label="github-actions" term="github-actions"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[3.1 Dynamic Repricing of Products Using Intelligent Apps Part 1]]></title>
        <id>https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-1</id>
        <link href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-1"/>
        <updated>2024-03-08T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this series, you’ll learn why Cosmos DB is an ideal choice for powering such applications—and how it makes building Intelligent Apps accessible and approachable. In the first article of this series, you’ll set up and populate the Cosmos DB database with data to use in the later parts of the series.]]></summary>
        <content type="html"><![CDATA[
<p><img loading="lazy" alt="Cosmos DB and Intelligent Apps: A Match Made for Innovation" src="https://azure.github.io/Cloud-Native/assets/images/3-1-1-95d16f4679738d90454174a0d0aaa18a.jpeg" width="624" height="380" class="img_ev3q"></p>
<p><em>This three-part series demonstrates how to use Azure Cosmos DB to build an Intelligent App that uses historical pricing and product data to forecast future price fluctuations for specific products. In the first article of this series, you’ll set up and populate the Cosmos DB database with data to use in the later parts of the series.</em></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="dynamic-repricing-of-products-using-intelligent-apps-part-1-setting-up-and-populating-cosmos-db-with-data">Dynamic Repricing of Products Using Intelligent Apps Part 1: Setting Up and Populating Cosmos DB with Data<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-1#dynamic-repricing-of-products-using-intelligent-apps-part-1-setting-up-and-populating-cosmos-db-with-data" class="hash-link" aria-label="Direct link to Dynamic Repricing of Products Using Intelligent Apps Part 1: Setting Up and Populating Cosmos DB with Data" title="Direct link to Dynamic Repricing of Products Using Intelligent Apps Part 1: Setting Up and Populating Cosmos DB with Data">​</a></h2>
<p>Intelligent Apps leverage data and artificial intelligence (AI) to provide smart, personalized, and adaptive experiences for users. AI and machine learning (ML) techniques like natural language processing (NLP), computer vision, and deep learning help understand context, intent, and user preferences to deliver relevant and timely insights and actions.</p>
<p>Some examples of Intelligent Apps include:</p>
<ul>
<li><strong>Virtual assistants</strong>—Interactive applications that understand and execute user commands</li>
<li><strong>Chatbots</strong>—Automated messaging systems that provide information or assistance</li>
<li><strong>Recommendation</strong> systems—Algorithms that suggest relevant items based on user preferences and behavior</li>
</ul>
<p>In this three-part series, you’ll create an Intelligent App powered by Azure Cosmos DB and AI/ML capabilities that dynamically suggests changes to product prices based on demand and historical trends. This app will help optimize revenue and customer satisfaction by adjusting product prices according to market conditions and customer behavior.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="laying-the-groundwork-for-an-intelligent-app-with-cosmos-db">Laying the Groundwork for an Intelligent App with Cosmos DB<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-1#laying-the-groundwork-for-an-intelligent-app-with-cosmos-db" class="hash-link" aria-label="Direct link to Laying the Groundwork for an Intelligent App with Cosmos DB" title="Direct link to Laying the Groundwork for an Intelligent App with Cosmos DB">​</a></h3>
<p>First, you’ll set up an Azure Cosmos DB database and populate it with product data and historical information about sales and demand. In part 2, you’ll analyze this data using AI and ML to forecast and suggest price changes.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="prerequisites">Prerequisites<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-1#prerequisites" class="hash-link" aria-label="Direct link to Prerequisites" title="Direct link to Prerequisites">​</a></h4>
<p>To follow this tutorial, ensure you have the following:</p>
<ul>
<li><a href="https://azure.microsoft.com/free/?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">An Azure account</a></li>
<li>A <a href="https://www.kaggle.com/account/login?phase=startRegisterTab&amp;returnUrl=%2F" target="_blank" rel="noopener noreferrer">Kaggle account</a> to download the <a href="https://www.kaggle.com/datasets/sujaykapadnis/price-quote-data/data" target="_blank" rel="noopener noreferrer">dataset</a> this tutorial uses</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="create-an-azure-cosmos-db-account">Create an Azure Cosmos DB Account<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-1#create-an-azure-cosmos-db-account" class="hash-link" aria-label="Direct link to Create an Azure Cosmos DB Account" title="Direct link to Create an Azure Cosmos DB Account">​</a></h4>
<p>Azure Cosmos DB is a fully managed multi-model database that ensures fast access to data, easy scalability, reliable uptime, and strong data consistency. Cosmos DB supports various data models and APIs, including SQL, MongoDB, Cassandra, Gremlin, and table storage, making it easy to query and manipulate data using familiar tools and languages.</p>
<p>Although you already have an Azure account, you also need to create an Azure Cosmos DB account by following the steps below:</p>
<ol>
<li>
<p>Sign in to the <a href="https://portal.azure.com/" target="_blank" rel="noopener noreferrer">Azure portal</a>.</p>
</li>
<li>
<p>Click <strong>Create a resource</strong> on the upper-left side of the page.</p>
</li>
<li>
<p>Search for “Azure Cosmos DB” and select it. On the <strong>Azure Cosmos DB</strong> page, select <strong>Create</strong>.</p>
</li>
<li>
<p>Enter the settings for your new account:</p>
<ul>
<li>
<p>Select your desired subscription.</p>
</li>
<li>
<p>Create a new resource group or select an existing one if you have one you’d like to use.</p>
</li>
<li>
<p>Enter a unique account name.</p>
</li>
<li>
<p>Select <strong>SQL (Core)</strong> as the API. This is the default API for Azure Cosmos DB and allows you to use SQL syntax to query and manage your data.</p>
</li>
<li>
<p>Select a <strong>Location</strong> for the account.</p>
</li>
<li>
<p>Click <strong>Review + create</strong>.</p>
</li>
</ul>
</li>
<li>
<p>Review your account settings and click <strong>Create</strong> to create the account.</p>
</li>
</ol>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Complete the <strong><a href="https://aka.ms/intelligent-apps/data-csc?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Data Skills Challenge</a></strong> to compete for the leaderboard and earn a Microsoft Learn Badge.</p></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="create-a-database-and-a-container">Create a Database and a Container<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-1#create-a-database-and-a-container" class="hash-link" aria-label="Direct link to Create a Database and a Container" title="Direct link to Create a Database and a Container">​</a></h4>
<p>Next, you’ll create a database and container within Azure Cosmos DB. Databases facilitate management, billing, and scaling, while a container is a schema-agnostic grouping of items (documents) with a partition key and a provisioned throughput. The partition property determines how the data is distributed across physical partitions for scalability and performance.</p>
<p>To create a database and container, follow the steps below:</p>
<ol>
<li>
<p>From the Azure portal, navigate to your Azure Cosmos DB account and select <strong>Data Explorer</strong> on the left menu. In the <strong>Data Explorer</strong>, select <strong>New Database</strong> on the top menu.</p>
</li>
<li>
<p>In the <strong>Add Database</strong> panel, enter a name for the new database, like “ProductsDB.”</p>
</li>
<li>
<p>Check <strong>Provision database throughput</strong> if you want to enable shared throughput for the database. This shares the throughput (RU/s) you provision among all containers in the database. You can also activate or deactivate autoscale, which automatically adjusts the throughput based on your application’s usage patterns.</p>
</li>
<li>
<p>Select <strong>OK</strong> to create the database.</p>
</li>
<li>
<p>In <strong>Data Explorer</strong>, expand the <strong>ProductsDB</strong> database and select <strong>New Container</strong> on the top menu. Then, open the <strong>Add Container</strong> panel and create a new container:</p>
<ul>
<li>
<p>Enter “Products” as the container name.</p>
</li>
<li>
<p>Enter “/ITEM_ID” as the container’s partition key. This will <a href="https://learn.microsoft.com/en-us/azure/cosmos-db/partitioning-overview" target="_blank" rel="noopener noreferrer">partition</a> the data by its <code>ITEM_ID</code> property, since columns with a wide range of values make excellent partition keys.</p>
</li>
<li>
<p>Use the default value of 400 throughput units. If you’d like, you can also deactivate autoscale for the container.</p>
</li>
</ul>
</li>
<li>
<p>Select <strong>OK</strong> to create the container.</p>
</li>
</ol>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="populate-the-container">Populate the Container<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-1#populate-the-container" class="hash-link" aria-label="Direct link to Populate the Container" title="Direct link to Populate the Container">​</a></h4>
<p>Now that you’ve created your database and container, you need to populate them with some data. For this demonstration, you’ll use a CSV file that contains <a href="https://www.ons.gov.uk/economy/inflationandpriceindices/datasets/consumerpriceindicescpiandretailpricesindexrpiitemindicesandpricequotes" target="_blank" rel="noopener noreferrer">UK inflation data</a>. The dataset contains over 100,000 rows of data representing 600 products sold in UK shops over 12 months.</p>
<p>To populate the container with this data, follow these steps:</p>
<ol>
<li>
<p>Download the <a href="https://www.kaggle.com/datasets/sujaykapadnis/price-quote-data/data" target="_blank" rel="noopener noreferrer">CSV file</a>.</p>
</li>
<li>
<p>In the Azure portal, navigate to your Azure Cosmos DB account and select <strong>Data Explorer</strong> on the left menu.</p>
</li>
<li>
<p>In <strong>Data Explorer</strong>, expand the <strong>ProductsDB</strong> database and the <strong>Products</strong> container, and select <strong>Items</strong>.</p>
</li>
</ol>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="upload-the-csv-file"><em>Upload the CSV File</em><a href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-1#upload-the-csv-file" class="hash-link" aria-label="Direct link to upload-the-csv-file" title="Direct link to upload-the-csv-file">​</a></h5>
<p>Now, upload the CSV file:</p>
<ol>
<li>
<p>From the top menu, select <strong>Upload Item</strong>.</p>
</li>
<li>
<p>In the <strong>Upload Item</strong> panel, select <strong>Browse</strong>, and choose the CSV file you downloaded previously.</p>
</li>
<li>
<p>Select <strong>Upload</strong> to upload the file to the container.</p>
</li>
<li>
<p>After the upload finishes, you should see the items in the container, each representing a row in the CSV file. You can select an item to view its properties and values in JSON format.</p>
</li>
</ol>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="verify-the-data-in-the-container"><em>Verify the Data in the Container</em><a href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-1#verify-the-data-in-the-container" class="hash-link" aria-label="Direct link to verify-the-data-in-the-container" title="Direct link to verify-the-data-in-the-container">​</a></h5>
<p>To verify that the data in the container is correct and consistent, you can use the SQL query editor in the Data Explorer.</p>
<ol>
<li>
<p>Select <strong>New SQL Query</strong>.</p>
</li>
<li>
<p>The query editor lets you execute SQL queries against the data in the container. For example, run the following query to get the container’s item count:</p>
<p><code>SELECT VALUE COUNT(1) FROM c</code></p>
<p>You should get a result of <code>10000</code>, which matches the number of rows in the CSV file.</p>
</li>
<li>
<p>You can also run queries to check the data quality and integrity, like the following:</p>
<ul>
<li>
<p><strong>Get the distinct values of ITEM_ID</strong> — <code>SELECT DISTINCT VALUE c.ITEM_ID FROM c</code></p>
</li>
<li>
<p><strong>Get the average price of each product</strong> — <code>SELECT c.ITEM_ID, c.ITEM_DESC, AVG(c.PRICE) AS avg_price FROM c GROUP BY c.ITEM_ID, c.ITEM_DESC</code></p>
</li>
<li>
<p><strong>Get the price trend of a product over time</strong> — <code>SELECT c.QUOTE_DATE, c.PRICE FROM c WHERE c.ITEM_ID = '210102' ORDER BY c.QUOTE_DATE</code></p>
</li>
</ul>
</li>
<li>
<p>You can also use the built-in charts to visualize the query results. In the top-right corner of the query editor, select <strong>Chart</strong> and choose the chart type you want to use, such as line, bar, or pie.</p>
</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="next-steps">Next Steps<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-1#next-steps" class="hash-link" aria-label="Direct link to Next Steps" title="Direct link to Next Steps">​</a></h3>
<p>In this article, you configured an Azure Cosmos DB database and populated it with data about product price changes. You also verified the data in the container using SQL queries and charts.</p>
<p>In the <a href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-2" target="_blank" rel="noopener noreferrer">next part of the series</a>, you’ll learn how to use Azure’s AI and ML capabilities to analyze the data and suggest product price forecasts.</p>
<p>If you want to challenge yourself and learn more about Azure, Cosmos DB, and AI/ML, we encourage you to participate in the <strong><a href="https://azure.github.io/Cloud-Native/Build-IA/CloudSkills" target="_blank" rel="noopener noreferrer">Data Cloud Skill Challenge</a></strong>. You can also register for <strong>AKS <a href="https://aka.ms/aks-day" target="_blank" rel="noopener noreferrer">Customer</a> and <a href="https://aka.ms/aks-lab-day" target="_blank" rel="noopener noreferrer">Lab</a> Days</strong> at the premier conference for cloud-native technologies, <em>KubeCon EU 2024</em>.</p>]]></content>
        <author>
            <name>#60Days Of IA</name>
            <uri>https://azure.github.io/Cloud-Native/Build-IA/</uri>
        </author>
        <category label="Build-Intelligent-Apps" term="Build-Intelligent-Apps"/>
        <category label="60-days-of-IA" term="60-days-of-IA"/>
        <category label="learn-live" term="learn-live"/>
        <category label="hack-together" term="hack-together"/>
        <category label="community-buzz" term="community-buzz"/>
        <category label="ask-the-expert" term="ask-the-expert"/>
        <category label="azure-kubernetes-service" term="azure-kubernetes-service"/>
        <category label="azure-functions" term="azure-functions"/>
        <category label="azure-openai" term="azure-openai"/>
        <category label="azure-container-apps" term="azure-container-apps"/>
        <category label="azure-cosmos-db" term="azure-cosmos-db"/>
        <category label="github-copilot" term="github-copilot"/>
        <category label="github-codespaces" term="github-codespaces"/>
        <category label="github-actions" term="github-actions"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[3.2 Dynamic Repricing of Products Using Intelligent Apps Part 2]]></title>
        <id>https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-2</id>
        <link href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-2"/>
        <updated>2024-03-08T09:01:00.000Z</updated>
        <summary type="html"><![CDATA[In this series, you’ll learn why Cosmos DB is an ideal choice for powering such applications—and how it makes building Intelligent Apps accessible and approachable.]]></summary>
        <content type="html"><![CDATA[
<p><img loading="lazy" alt="Dynamic Repricing of Products Using Intelligent Apps Part 2: Price Forecasting with AI/ML" src="https://azure.github.io/Cloud-Native/assets/images/3-2-1-e5a063f4e30bad99d184e8bec1007e72.jpeg" width="624" height="380" class="img_ev3q"></p>
<p><em>This three-part series demonstrates how to use Azure Cosmos DB to build an Intelligent App that uses historical pricing and product data to forecast future price fluctuations for specific products. In this installment, you’ll use artificial intelligence and machine learning to build the price forecasting model.</em></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="dynamic-repricing-of-products-using-intelligent-apps-part-2-price-forecasting-with-aiml">Dynamic Repricing of Products Using Intelligent Apps Part 2: Price Forecasting with AI/ML<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-2#dynamic-repricing-of-products-using-intelligent-apps-part-2-price-forecasting-with-aiml" class="hash-link" aria-label="Direct link to Dynamic Repricing of Products Using Intelligent Apps Part 2: Price Forecasting with AI/ML" title="Direct link to Dynamic Repricing of Products Using Intelligent Apps Part 2: Price Forecasting with AI/ML">​</a></h2>
<p><a href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-1" target="_blank" rel="noopener noreferrer">In Part 1 of this series</a>, you set up and populated an <a href="https://azure.microsoft.com/free/cosmos-db?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Cosmos DB</a> database, laying the groundwork for your Intelligent Application. You also imported your data to a Cosmos DB instance.</p>
<p>In this second article, you’ll use this data alongside Azure’s machine learning (ML) and artificial intelligence (AI) capabilities to build a model that analyzes pricing trends and predicts future prices for a fictional e-commerce business.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="analyzing-price-trends-to-predict-future-prices">Analyzing Price Trends to Predict Future Prices<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-2#analyzing-price-trends-to-predict-future-prices" class="hash-link" aria-label="Direct link to Analyzing Price Trends to Predict Future Prices" title="Direct link to Analyzing Price Trends to Predict Future Prices">​</a></h3>
<p>The ability to forecast pricing is a game-changer. With the power of foresight, businesses can preemptively adjust their pricing strategies in line with market expectations.</p>
<p>In this tutorial, we’ll give you a step-by-step guide to generating a predictive ML model for an e-commerce business, using Azure’s suite of ML tools.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="prerequisites">Prerequisites<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-2#prerequisites" class="hash-link" aria-label="Direct link to Prerequisites" title="Direct link to Prerequisites">​</a></h4>
<p>Before you begin, make sure you have the following:</p>
<ul>
<li>An active <a href="https://azure.microsoft.com/free/?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Account</a></li>
<li>A Cosmos DB instance with the <a href="https://www.kaggle.com/datasets/sujaykapadnis/price-quote-data/data" target="_blank" rel="noopener noreferrer">pricing data</a> you set up in Part 1</li>
<li>Access to <a href="https://studio.azureml.net/" target="_blank" rel="noopener noreferrer">Azure Machine Learning Studio</a></li>
<li>An <a href="https://learn.microsoft.com/azure/machine-learning/tutorial-azure-ml-in-a-day?view=azureml-api-2&amp;ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Machine Learning workspace</a></li>
<li>A <a href="https://learn.microsoft.com/azure/machine-learning/quickstart-create-resources?view=azureml-api-2#create-a-new-notebook&amp;ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Jupyter notebook set up</a> in your workspace</li>
<li>Familiarity with <a href="https://azure.microsoft.com/products/machine-learning?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Machine Learning</a> concepts</li>
<li>Basic Python programming knowledge and understanding of ML concepts</li>
</ul>
<p><strong>Note</strong>: You should add and run all code in this article into your Jupyter Notebook in the order in which it appears.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Check out the Azure <strong><a href="https://aka.ms/intelligent-apps/ate-cosmos?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Cosmos DB Ask The Expert</a></strong> session to learn how to build RAG solutions, manage chat history by seamlessly connecting with <em>Azure OpenAI</em>, as well as explore the power of <em>Azure Cosmos DB's copilot</em>. The experts will also cover how to seamlessly integrate your operational and transactional data with AI frameworks and sdks like Semantic Kernel, Langchain, and LlamaIndex.</p></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="extract-historical-pricing-data-from-cosmos-db">Extract Historical Pricing Data from Cosmos DB<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-2#extract-historical-pricing-data-from-cosmos-db" class="hash-link" aria-label="Direct link to Extract Historical Pricing Data from Cosmos DB" title="Direct link to Extract Historical Pricing Data from Cosmos DB">​</a></h4>
<p>Start by extracting historical pricing data from Cosmos DB, where you stored it in Part 1. For this tutorial, you’ll extract items with names ending in <code>JACKET</code>. Because the dataset is relatively small, a simple <code>like</code> query will do. However, when working with larger data sets, you should consider additional upfront data cleaning and categorizing, to ensure you can query your database efficiently.</p>
<p>Run the code below to extract the data:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">from azure.cosmos import CosmosClient, exceptions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import pandas as pd</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Initialize a Cosmos client</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">endpoint = "your_cosmos_db_endpoint"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">key = 'your_cosmos_db_key'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">client = CosmosClient(endpoint, key)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Connect to the database and container</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">database_name = 'your_database_name'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">container_name = 'your_container_name'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">database = client.get_database_client(database_name)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">container = database.get_container_client(container_name)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Query these items using the SQL query syntax</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">query = "SELECT * FROM c where ITEM_DESC like '%JACKET'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">items = list(container.query_items(query=query, enable_cross_partition_query=True))</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Convert the query result to a DataFrame</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pricing_data = pd.DataFrame(items)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="preprocess-data-and-split-into-training-and-testing">Preprocess Data and Split into Training and Testing<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-2#preprocess-data-and-split-into-training-and-testing" class="hash-link" aria-label="Direct link to Preprocess Data and Split into Training and Testing" title="Direct link to Preprocess Data and Split into Training and Testing">​</a></h4>
<p>Before feeding the data into an ML model, preprocess it and split it into training and testing sets using the code below:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">from sklearn.model_selection import train_test_split</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Assume the DataFrame `pricing_data` has columns: 'quote_date', 'price', 'price_relative', 'item_id', etc.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Convert 'quote_date' from string to datetime for proper chronological splitting</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pricing_data['QUOTE_DATE'] = pd.to_datetime(pricing_data['QUOTE_DATE'], format='%Y%m')</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Selecting the features and target for the model</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">X = pricing_data[['QUOTE_DATE', 'ITEM_ID', 'PRICE_RELATIVE','STRATUM_WEIGHT', 'SHOP_WEIGHT']]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">y = pricing_data['price']</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Split the data into training and testing sets</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># We'll use a chronological split rather than a random split to maintain the time series integrity</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">split_date = pd.Timestamp('YYYY-MM-DD')  # replace with the appropriate date</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">train = pricing_data.loc[pricing_data['QUOTE_DATE'] &lt;= split_date]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">test = pricing_data.loc[pricing_data['QUOTE_DATE'] &gt; split_date]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">X_train, y_train = train[['ITEM_ID', 'PRICE_RELATIVE', 'STRATUM_WEIGHT', 'SHOP_WIGHT']], train['PRICE']</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">X_test, y_test = test[['ITEM_ID', 'PRICE_RELATIVE', 'STRATUM_WEIGHT', 'SHOP_WEIGHT']], test['PRICE']</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="train-a-forecasting-model-using-azure-machine-learning">Train a Forecasting Model Using Azure Machine Learning<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-2#train-a-forecasting-model-using-azure-machine-learning" class="hash-link" aria-label="Direct link to Train a Forecasting Model Using Azure Machine Learning" title="Direct link to Train a Forecasting Model Using Azure Machine Learning">​</a></h4>
<p>Next, you’ll build and train the forecasting model using Azure Machine Learning. Note that in the code below, you’re using a local compute target, which works on simple datasets like the one used for this tutorial. However, Azure Machine Learning offers more powerful compute targets for more complex models.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">from azureml.core import Workspace, Experiment, Environment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from azureml.train.automl import AutoMLConfig</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Connect to your Azure ML workspace</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ws = Workspace.from_config()</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Define your experiment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">experiment_name = 'price_forecasting_experiment'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">experiment = Experiment(ws, experiment_name)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Configure the automated ML job </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">automl_config = AutoMLConfig(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    task='forecasting',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    primary_metric='normalized_root_mean_squared_error',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    experiment_timeout_minutes=30,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    training_data=train,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    label_column_name='PRICE',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    n_cross_validations=5,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    enable_early_stopping=True,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    verbosity=logging.INFO,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    compute_target='local'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">) </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Submit the experiment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">run = experiment.submit(automl_config, show_output=True)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="evaluate-and-integrate-the-model">Evaluate and Integrate the Model<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-2#evaluate-and-integrate-the-model" class="hash-link" aria-label="Direct link to Evaluate and Integrate the Model" title="Direct link to Evaluate and Integrate the Model">​</a></h4>
<p>Next, check the results of the model by running the following:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">from azureml.widgets import RunDetails</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Show run details while running</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RunDetails(run).show()</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Wait for the run to complete</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">run.wait_for_completion()</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Retrieve the best model from the AutoML run</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">best_run, fitted_model = run.get_output()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">print(best_run)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">print(fitted_model)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Evaluate the best model's accuracy using the test data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Assuming test data is a Pandas DataFrame with the same structure as the training data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">X_test = test_data.drop('PRICE', axis=1)  # Features (drop the target column)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">y_test = test_data['PRICE']  # True values of the target column</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Predict using the fitted model</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">y_pred = fitted_model.predict(X_test)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Calculate the accuracy or any other performance metrics</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from sklearn.metrics import mean_squared_error, r2_score</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mse = mean_squared_error(y_test, y_pred)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">r2 = r2_score(y_test, y_pred)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">print(f"Mean Squared Error: {mse}")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">print(f"R-squared: {r2}")</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>With the performance metrics calculated, you can now determine whether the model’s predictions are accurate enough for your needs. If they are, you can integrate the model with a hypothetical e-commerce platform. The easiest way to integrate a model is to deploy it using an Azure Machine Learning endpoint:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ws = Workspace.from_config() </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Register the model from the best run</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">model = best_run.register_model(model_name='price_forecast_model', model_path='outputs/model.pkl') </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Download the scoring file produced by AutoML</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">best_run.download_file('outputs/scoring_file_v_1_0_0.py', 'score.py')</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Download the environment file produced by AutoML</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">best_run.download_file(constants.CONDA_ENV_FILE_PATH, 'environment.yml')</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Create the environment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">env = Environment.from_conda_specification(name='forecasting_environment', file_path='environment.yml')</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Create the inference configuration</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">inference_config = InferenceConfig(entry_script='score.py', environment=env)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Create the deployment configuration</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">deployment_config = AciWebservice.deploy_configuration(cpu_cores=1, memory_gb=1)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Deploy the model as a web service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">service_name = 'price-forecast-service'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">service = Model.deploy(ws, service_name, [model], inference_config, deployment_config) </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">service.wait_for_deployment(show_output=True)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># The web service endpoint URL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">print(service.scoring_uri)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And with that, you’ve deployed your Azure ML endpoint and are ready for Part 3!</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/dynamic-repricing-of-products-using-intelligent-apps-part-2#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h3>
<p>In this tutorial, you extracted data from Cosmos DB, preprocessed it, performed a train/test split, initiated a model training pipeline using Azure Machine Learning, and, finally, tested and deployed the model. These are crucial steps to building a system that can intelligently forecast product prices.</p>
<p>In the third and final article of this series, you’ll build a web interface that displays the generated price forecasts using approachable, simple graphs that help businesses easily make data-informed decisions.</p>
<p>To challenge yourself, learn more about Azure’s AI and ML tooling, and put the skills you’ve learned in this tutorial to work, participate in the <a href="https://azure.github.io/Cloud-Native/Build-IA/CloudSkills" target="_blank" rel="noopener noreferrer">Data Cloud Skill Challenge</a>. You can also register for <strong>AKS <a href="https://aka.ms/aks-day" target="_blank" rel="noopener noreferrer">Customer</a> and <a href="https://aka.ms/aks-lab-day" target="_blank" rel="noopener noreferrer">Lab</a> Days</strong> at the premier conference for cloud-native technologies, <em>KubeCon EU 2024</em>.</p>]]></content>
        <author>
            <name>#60Days Of IA</name>
            <uri>https://azure.github.io/Cloud-Native/Build-IA/</uri>
        </author>
        <category label="Build-Intelligent-Apps" term="Build-Intelligent-Apps"/>
        <category label="60-days-of-IA" term="60-days-of-IA"/>
        <category label="learn-live" term="learn-live"/>
        <category label="hack-together" term="hack-together"/>
        <category label="community-buzz" term="community-buzz"/>
        <category label="ask-the-expert" term="ask-the-expert"/>
        <category label="azure-kubernetes-service" term="azure-kubernetes-service"/>
        <category label="azure-functions" term="azure-functions"/>
        <category label="azure-openai" term="azure-openai"/>
        <category label="azure-container-apps" term="azure-container-apps"/>
        <category label="azure-cosmos-db" term="azure-cosmos-db"/>
        <category label="github-copilot" term="github-copilot"/>
        <category label="github-codespaces" term="github-codespaces"/>
        <category label="github-actions" term="github-actions"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[4. Fuel Your Intelligent Apps with Azure AI]]></title>
        <id>https://azure.github.io/Cloud-Native/60DaysOfIA/fuel-your-intelligent-apps-with-azure-ai</id>
        <link href="https://azure.github.io/Cloud-Native/60DaysOfIA/fuel-your-intelligent-apps-with-azure-ai"/>
        <updated>2024-03-11T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this kickoff post, we'll set the stage for the week of posts by describing the application scenario (motivation) and introducing core terminology (LLM Ops), developer tools (Azure AI Studio, frameworks) and design patterns (RAG) to help you jumpstart your journey building and deploying generative AI solutions in the enterprise. By the end of this week, you should have a good understanding of how to build a copilot app end-to-end on the Azure AI platform, how to deploy it for integration with real-world applications, and how to incorporate responsible AI principles into your development workflow.]]></summary>
        <content type="html"><![CDATA[
<p>Welcome to the <code>Azure AI</code> week on <strong>#60Days Of IA</strong>. Over the next 5 days, we'll share a series of blog posts that give you a comprehensive look at the tools and end-to-end development workflow reequired to build intelligent applications <a href="https://techcommunity.microsoft.com/t5/ai-ai-platform-blog/a-code-first-experience-for-building-a-copilot-with-azure-ai/ba-p/4058659?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">code-first on the Azure AI platform</a>.</p>
<p>In this kickoff post, we'll set the stage for the week of posts by describing the application scenario (motivation) and introducing core terminology (LLM Ops), developer tools (Azure AI Studio, frameworks) and design patterns (RAG) to help you jumpstart your journey building and deploying generative AI solutions in the enterprise. By the end of this week, you should have a good understanding of how to build a copilot app end-to-end on the Azure AI platform, how to deploy it for integration with real-world applications, and how to incorporate responsible AI principles into your development workflow.</p>
<p>Ready? Let's get started!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-well-cover-today">What We'll Cover Today<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/fuel-your-intelligent-apps-with-azure-ai#what-well-cover-today" class="hash-link" aria-label="Direct link to What We'll Cover Today" title="Direct link to What We'll Cover Today">​</a></h2>
<ul>
<li><strong>Application Scenario |</strong> What is Contoso Chat?</li>
<li><strong>Paradigm Shift |</strong> What is LLM Ops?</li>
<li><strong>Unified Platform |</strong> What is Azure AI Studio?</li>
<li><strong>Copilot Experience |</strong> What is the development workflow?</li>
<li><strong>The Week Ahead |</strong> What will we cover?</li>
<li><strong>Resources:</strong> <a href="https://aka.ms/ai-studio/collection?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Explore the Code-First Azure AI Collection</a></li>
</ul>
<hr>
<p><img loading="lazy" alt="Roadmap" src="https://azure.github.io/Cloud-Native/assets/images/banner-6dc91900960e8cdf2fbeece64e5fc877.png" width="1000" height="420" class="img_ev3q"></p>
<br>
<p>Generative AI applications are transforming the user experience and accelerating adoption of AI tools and solutions in the enterprise. But as developers, we face new challenges in building solutions <strong>end-to-end</strong> - from prompt engineering to LLM Ops. We need new tools, frameworks, and guidance to help us navigate and streamline a fast-growing ecosystem.</p>
<p>In <a href="https://techcommunity.microsoft.com/t5/ai-ai-platform-blog/a-code-first-experience-for-building-a-copilot-with-azure-ai/ba-p/4058659?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">a recent blog post</a> we described how the Azure AI platform is addressing these challanges with a <em>code-first experience for building a copilot application end-to-end</em> with your data and APIs. This week, we unpack that post in more detail - walking you through a end-to-end application sample, and several <em>quickstart</em> options, to get you started on your own generative AI solutions.</p>
<p>To kick things off, let's set the stage by describing a common generative AI application scenario ("Contoso Chat") and introduce core terminology, tools and processes that we will be using throughout the week, on our development journey.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1--the-application-scenario">1 | The Application Scenario<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/fuel-your-intelligent-apps-with-azure-ai#1--the-application-scenario" class="hash-link" aria-label="Direct link to 1 | The Application Scenario" title="Direct link to 1 | The Application Scenario">​</a></h2>
<p>Say hello to <em>Contoso Outdoor Company</em> - an online retailer of outdoor adventuring equipment with a loyal and growing customer base. Your website has a rich catalog of items organized into categories like <em>tents</em>, <em>backpacks</em>, <em>hiking boots</em> and more. Customers visit the site looking to find the best gear for their next adventure, and often have questions about the products, or how they might fit with their previous purchases.</p>
<p><img loading="lazy" alt="Contoso Outdoors site" src="https://azure.github.io/Cloud-Native/assets/images/app-contoso-outdoors-2e49c3ff8b9705669d3e5f144b6aef09.png" width="2734" height="2008" class="img_ev3q"></p>
<p>The company has a customer support line, but it is getting overwhelmed with calls and you don't have the resources to meet the demand. You hear about generative AI applications and decide to build a <em>customer support chat AI</em> agent that knows your catalog and customers. You can then integrate it into the site as shown, to improve customer satisfaction and drive follow-up actions.</p>
<p><img loading="lazy" alt="Contoso Chat concept" src="https://azure.github.io/Cloud-Native/assets/images/app-contoso-chat-concept-1e6a568ef26af525237d5b3df58804c8.png" width="1457" height="529" class="img_ev3q"></p>
<p>You identify three requirements for your chat AI application:</p>
<ul>
<li><strong>Custom Data</strong>. The application responses must prioritize your catalog data.</li>
<li><strong>Responsible AI</strong>. The application must follow responsible AI principles.</li>
<li><strong>LLM Ops</strong>. The end-to-end development workflow must be operationalizable.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="2--the-paradigm-shift">2 | The Paradigm Shift<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/fuel-your-intelligent-apps-with-azure-ai#2--the-paradigm-shift" class="hash-link" aria-label="Direct link to 2 | The Paradigm Shift" title="Direct link to 2 | The Paradigm Shift">​</a></h2>
<p>Building generative AI applications requires a different mindset from traditional ML applications. The latter are trained on finite custom data, deploying an endpoint that makes <em>predictions</em>. By contrast, generative AI applications are trained on massive amounts of data, using large language models (LLM) and natural language processing (NLP) to <em>generate</em> new content.</p>
<p>The focus now moves from <strong>MLOps</strong> (workflow for building ML apps) to <strong>LLMOps</strong> (workflow for building generative AI apps) - starting with <em>prompt engineering</em>, a process where we refine the inputs to the LLM ("prompts") through a process of trial-and-error (build-run-evaluate) till the responses meet our quality, cost and performance requirements. The generative AI application lifecycle now looks more like this:</p>
<p><img loading="lazy" alt="LLM App Lifecyle" src="https://azure.github.io/Cloud-Native/assets/images/llm-app-lifecycle-6509347ca42b47d5c7ae425b890e5efe.png" width="1147" height="646" class="img_ev3q"></p>
<ol>
<li><strong>Ideation Phase</strong>: Start by building the basic AI application (copilot) for your scenario. At this stage, you define the architectural elements (AI resources, design patterns) and language models (chat completion, chat evaluation, text embeddings) that you will need to build-run-evaluate the basic experience. And have sample data to test against.</li>
<li><strong>Augmentation Phase</strong>: Iteratively refine the quality and performance of your application by <em>engineering</em> the prompts, <em>tuning</em> the models, and <em>evaluating</em> the responses with sample data (smal) and batch runs (large). Use relevant metrics (groundedness, coherence, relevance, fluency) to guide decisions on what to change, and when to stop iterating.</li>
<li><strong>Operationalization Phase:</strong> Now, you're ready to deploy the application to a production environment so that the endpoint can be accessed by others, for integrating into user-facing experiences. This is also a good time to review the entire workflow for responsible AI practices, and explore automation and monitoring solutions for efficiency and performance.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="3--the-azure-ai-platform">3 | The Azure AI Platform<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/fuel-your-intelligent-apps-with-azure-ai#3--the-azure-ai-platform" class="hash-link" aria-label="Direct link to 3 | The Azure AI Platform" title="Direct link to 3 | The Azure AI Platform">​</a></h2>
<p>Implementing this end-to-end workflow and managing the various phases of the application lifecycle can be challenging for developers. Azure AI Studio addresses these challenges with a <a href="https://ai.azure.com/?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer"><strong>unified platform</strong></a> for building generative AI applications and custom copilot experiences.</p>
<p>Use the platform to <strong>explore</strong> language models from Microsoft and the broader community, and experiment with them in a built-in playground. Then <strong>build</strong> your
AI project by seamlessly integrating with deployed models and built-in AI services - and <strong>manage</strong> your AI resources (for compute, access, billing and more) from the unified UI.</p>
<p><img loading="lazy" alt="Azure AI Studio" src="https://azure.github.io/Cloud-Native/assets/images/azure-ai-c35fed704147614a7f607c699852d602.png" width="1147" height="633" class="img_ev3q"></p>
<p>As a developer, you have both low-code and code-first options for engaging with the platform. Use the <a href="https://ai.azure.com/?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure AI Studio UI</a> for a browser-based low-code experience, and the <a href="https://learn.microsoft.com/azure/ai-studio/how-to/sdk-generative-overview?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure AI SDK</a> for a Python-based code-first experience. In our posts this week, we'll focus on the code-first experience, and show you how to build a copilot app on Azure AI using the Python SDK and popular frameworks.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="4--the-copilot-experience">4 | The Copilot Experience<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/fuel-your-intelligent-apps-with-azure-ai#4--the-copilot-experience" class="hash-link" aria-label="Direct link to 4 | The Copilot Experience" title="Direct link to 4 | The Copilot Experience">​</a></h2>
<p>So how do we get started on the end-to-end development journey using the Azure AI platform? Let's start by defining what we mean by a <em>copilot</em> experience for enterprise-grade generative AI applications. A copilot is:</p>
<ul>
<li>a generative AI application that uses large language models (LLM) and natural language processing (NLP)</li>
<li>to assist customers in completing complex cognitive tasks <strong>using your data</strong></li>
<li>typically using conversational “chat” interactions (request-reponse)</li>
</ul>
<p>The copilot (generative AI application) is deployed in the cloud to expose an interaction endpoint (API) that can be integrated into customer-facing experiences (e.g,, web or mobile apps) for real-world use. For our specific application scenario, the implementation will involve two components:</p>
<ul>
<li>Contoso Chat (copilot API) as the backend component with the chat AI</li>
<li>Contoso Outdoors (web App) as the frontend component with the chat UI</li>
</ul>
<p><img loading="lazy" alt="Azure Copilot" src="https://azure.github.io/Cloud-Native/assets/images/copilot-architecture-a14ddb6e2ac8e5ded7e544f1093325fc.png" width="2856" height="1292" class="img_ev3q"></p>
<p>The figure shows the high-level application architecture for <a href="https://www.youtube.com/watch?v=UbJg7RNLi7E" target="_blank" rel="noopener noreferrer">building generative AI applications using custom code with Azure AI</a>, where the <strong>App</strong> represents the front-end component and the blue box encloses the components of the <strong>Copilot</strong> implementation exposed through the managed online endpoint (API). The copilot experience now involves the following steps:</p>
<ul>
<li>The user (customer) asks a question from the chat UI (web app)</li>
<li>The web app sends the question to the chat API (copilot endpoint)</li>
<li>The chat API invokes our custom Python code (chat function) which:<!-- -->
<ul>
<li>converts the user question (prompt) into a machine-friendly format (vector)</li>
<li>uses the vectorized prompt to find matches in our custom data (search index)</li>
<li>combines the user question with custom results for an enhanced prompt</li>
<li>sends this prompt to the chat model to get the completion (answer)</li>
</ul>
</li>
<li>The chat API now returns the answer as a response to the chat UI request</li>
</ul>
<p>To build this workflow requires us to complete the following steps:</p>
<ol>
<li>Provision the necessary resources on Azure</li>
<li>Create the search index using our custom data</li>
<li>Deploy chat and embedding models for use by the chat function</li>
<li>Configure connections between chat function and models, resources</li>
<li>Write the code to <em>orchestrate</em> the steps for the chat function</li>
<li>Deploy our chat function to expose the API endpoint online</li>
<li>Integrate the API endpoint with our front-end application for usage</li>
</ol>
<p>From an LLM Ops perspective, we also need to consider two additional steps:</p>
<ol>
<li>Evaluation of the chat function using sample data - to assess quality</li>
<li>Automation of the workflow steps - for iteration and operationalization</li>
</ol>
<p>This is a non-trivial set of requirements for building, running, evaluating, and deploying a generative AI application. Thankfully, the Azure AI platform and related ecosystem of tools and services, helps streamline the process for developers - allowing us to focus on our chat function logic and user experience.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="5--the-week-ahead">5 | The Week Ahead!<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/fuel-your-intelligent-apps-with-azure-ai#5--the-week-ahead" class="hash-link" aria-label="Direct link to 5 | The Week Ahead!" title="Direct link to 5 | The Week Ahead!">​</a></h2>
<p>In the upcoming week, we'll dive into the implementation details of these processes in the context of a signature reference sample (Contoso Chat) and as quickstart templates that showcase usage with popular frameworks. Here's what we'll cover:</p>
<ul>
<li><a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-contoso-chat-end-to-end" target="_blank" rel="noopener noreferrer"><strong>Day 1:</strong></a> Build the Contoso Chat app on Azure AI (end-to-end reference sample)</li>
<li><strong>Day 2:</strong> Build a Copilot app on Azure AI with the Python SDK (quickstart)</li>
<li><strong>Day 3:</strong> Build a Copilot app on Azure AI with promptflow (framework)</li>
<li><strong>Day 4:</strong> Build a Copilot app on Azure AI with LangChain (framework)</li>
<li><strong>Day 5:</strong> Deploy your Copilot app responsibly on Azure AI (advanced topics)</li>
</ul>]]></content>
        <author>
            <name>#60Days Of IA</name>
            <uri>https://azure.github.io/Cloud-Native/Build-IA/</uri>
        </author>
        <category label="Build-Intelligent-Apps" term="Build-Intelligent-Apps"/>
        <category label="60-days-of-IA" term="60-days-of-IA"/>
        <category label="learn-live" term="learn-live"/>
        <category label="hack-together" term="hack-together"/>
        <category label="community-buzz" term="community-buzz"/>
        <category label="ask-the-expert" term="ask-the-expert"/>
        <category label="azure-kubernetes-service" term="azure-kubernetes-service"/>
        <category label="azure-functions" term="azure-functions"/>
        <category label="azure-openai" term="azure-openai"/>
        <category label="azure-container-apps" term="azure-container-apps"/>
        <category label="azure-cosmos-db" term="azure-cosmos-db"/>
        <category label="github-copilot" term="github-copilot"/>
        <category label="github-codespaces" term="github-codespaces"/>
        <category label="github-actions" term="github-actions"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[4.1 Build Contoso Chat End-to-End]]></title>
        <id>https://azure.github.io/Cloud-Native/60DaysOfIA/build-contoso-chat-end-to-end</id>
        <link href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-contoso-chat-end-to-end"/>
        <updated>2024-03-11T09:01:00.000Z</updated>
        <summary type="html"><![CDATA[Building generative AI applications poses new challenges for streamlining end-to-end application development - from prompt engineering, to LLM Ops. In this post we introduce Contoso Chat, a sample application for building a copilot with your data - using the Azure AI platform with prompt flow.]]></summary>
        <content type="html"><![CDATA[
<p><strong>Welcome to Day 1️⃣ of Azure AI week on ##60Days Of IA</strong></p>
<p>In today's post, we'll introduce you to the <a href="https://aka.ms/aitour/contoso-chat" target="_blank" rel="noopener noreferrer">Contoso Chat</a> sample - a comprehensive end-to-end reference sample that walks you through the journey of building the customer support AI application we talked about in our kickoff post yesterday. By the end of this tutorial, you will be able to:</p>
<ul>
<li>explain how to build a copilot app end-to-end on Azure AI</li>
<li>explain what Retrieval Augmented Generation does for copilot apps</li>
<li>explain what prompt flow is and how it streamlines your workflow</li>
<li>describe the Azure AI platform and Azure AI SDK capabilities</li>
</ul>
<p><em>Ready? Let's go!</em></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-youll-learn-today">What You'll Learn Today<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-contoso-chat-end-to-end#what-youll-learn-today" class="hash-link" aria-label="Direct link to What You'll Learn Today" title="Direct link to What You'll Learn Today">​</a></h2>
<ul>
<li><strong>Contoso Chat Sample</strong>: Building a copilot with Azure AI and Prompt flow</li>
<li><strong>Retrieval Augmented Generation</strong>: Design pattern for using custom data</li>
<li><strong>Prompt flow</strong>: Open-source tooling for orchestrating end-to-end workflow</li>
<li><strong>Azure resources</strong>: Provisioning Azure for the Contoso Chat AI project</li>
<li><strong>Hands-on lab</strong>: Step-by-step tutorial to build &amp; deploy Contoso Chat</li>
<li><strong>Exercise</strong>: <a href="https://aka.ms/aitour/contoso-chat" target="_blank" rel="noopener noreferrer"><em>Fork the sample</em></a> then work through the hands-on tutorial.</li>
<li><strong>Resources</strong>: <a href="https://aka.ms/ai-studio/collection?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer"><em>Explore this collection</em></a> for samples, docs and training resources.</li>
</ul>
<br>
<p><img loading="lazy" alt="Build Contoso Chat - from prompt-engineering to LLM Ops" src="https://azure.github.io/Cloud-Native/assets/images/banner-6dc91900960e8cdf2fbeece64e5fc877.png" width="1000" height="420" class="img_ev3q"></p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="contoso-chat-sample">Contoso Chat Sample<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-contoso-chat-end-to-end#contoso-chat-sample" class="hash-link" aria-label="Direct link to Contoso Chat Sample" title="Direct link to Contoso Chat Sample">​</a></h2>
<p>The <a href="https://aka.ms/aitour/contoso-chat" target="_blank" rel="noopener noreferrer">Contoso Chat</a> sample provides a comprehensive end-to-end reference example for using Azure AI Studio and Prompt flow, to build a copilot application end-to-end. The sample implements a <em>customer support chat AI</em> experience - allowing customers on the Contoso Outdoors website to ask questions about related products and receive relevant responses based on their query and purchase history. The illustrated guide below gives you a high-level overview of the steps involved in building the application - from provisioning Azure resources to deploying and using the chat AI endpoint. To learn more about the application scenario, refer to our <a href="https://azure.github.io/Cloud-Native/60DaysOfIA/fuel-your-intelligent-apps-with-azure-ai" target="_blank" rel="noopener noreferrer">kickoff post</a> for this week.</p>
<p><img loading="lazy" alt="Sketchnote" src="https://azure.github.io/Cloud-Native/assets/images/contoso-chat-sketchnote-d9a7a4995f13f09e9a5a9ef860d7e366.png" width="3840" height="2160" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rag-design-pattern">RAG Design Pattern<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-contoso-chat-end-to-end#rag-design-pattern" class="hash-link" aria-label="Direct link to RAG Design Pattern" title="Direct link to RAG Design Pattern">​</a></h2>
<p>Our first step is to define the application architecture for Contoso Chat. We know we want to have our copilot <em>grounded in our data</em> so that customer queries return responses that reflect the product catalog or customer purchase history.</p>
<p>The challenge is that Large Language Models (LLM) are trained on massive datasets so the default responses may not be <em>relevant</em> or <em>accurate</em> with respect to your data. This is where prompt engineering and design patterns like Retrieval Augmented Generation (RAG) come in. RAG is a design pattern that uses an information <em>retrieval</em> component to get data relevant to the user prompt, then <em>augments</em> the prompt with that context before sending it to the LLM, as illustrated below.</p>
<p><img loading="lazy" alt="RAG" src="https://azure.github.io/Cloud-Native/assets/images/rag-e3cc68e747ef64a374c15357852679f4.png" width="2452" height="1190" class="img_ev3q"></p>
<p>We can break down the workflow into the following steps:</p>
<ol>
<li>User asks a question ("User prompt")</li>
<li>The question is sent to an information retrieval component ("AI Search")</li>
<li>This vectorizes the query ("Embedding Model")</li>
<li>And uses the vector to retrieve relevant results ("Product Index")</li>
<li>Results are used to augment User prompt ("Model prompt")</li>
<li>The enhanced prompt is sent to the LLM ("Chat completion")</li>
</ol>
<p>The answer is then returned to the user, who now sees a response that is more relevant to the products in your catalog, and personalized to their purchase history. Note that this basic copilot workflow requires us to deploy two large language models:</p>
<ol>
<li>Text-Embedding model (e.g., <code>text-embedding-ada-002</code>) that vectories the user query</li>
<li>Text-Generation model (e.g., <code>gpt-35-turbo</code>) that generates the final response</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="prompt-flow-orchestration">Prompt flow Orchestration<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-contoso-chat-end-to-end#prompt-flow-orchestration" class="hash-link" aria-label="Direct link to Prompt flow Orchestration" title="Direct link to Prompt flow Orchestration">​</a></h2>
<p>Implementing the RAG pattern requires a number of interactions between the language model deployments and the data sources used (e.g., search index for products, cusomer database for purchase history), and <em>coordination</em> of intermediate steps before the final response can be delivered. This is where frameworks like Prompt flow, LangChain and Semantic kernel come in.</p>
<p>The Contoso Chat sample makes extensive use of Prompt flow - an <a href="https://github.com/microsoft/promptflow" target="_blank" rel="noopener noreferrer">open-source project</a> on GitHub, with its own SDK and VS Code extension. Prompt flow provides a comprehensive solution that simplifies the process of prototyping, experimenting, iterating, and deploying your AI applications. It is <a href="https://learn.microsoft.com/azure/ai-studio/how-to/prompt-flow?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">recommended for use as a feature within Azure AI Studio</a>, making it a natural first choice for building our Contoso Chat application. The figure shows a high-level architecture diagram showcasing the Azure components used with Prompt flow as the orchestration layer.</p>
<p><img loading="lazy" alt="Prompt Flow Architecture" src="https://azure.github.io/Cloud-Native/assets/images/contoso-chat-flow-93b5445266637eae6aefcc9e85678a8d.png" width="2582" height="866" class="img_ev3q"></p>
<p>With Prompt flow, your application is defined as a a directed acyclic graph of <em>nodes</em> (<code>flow.dag.yaml</code>) that connect <em>input</em> (prompt) and final <em>output</em> (response) - with intermediate nodes implemented as Python <em>functions</em> (tools) that process or transform the data flowing through them. The Prompt flow extension in VS Code provides a rich <em>visual editor</em> capability as shown below, making it easy to define, debug, run, and test, your application in a local development environment. <em>This view also helps us see how the RAG pattern is implemented in practice, in our copilot</em>.</p>
<p><img loading="lazy" alt="Contoso Chat Flow" src="https://azure.github.io/Cloud-Native/assets/images/promptflow-visual-21dff741b41220833a6add4946da83ab.png" width="1436" height="905" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="azure-provisioning">Azure Provisioning<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-contoso-chat-end-to-end#azure-provisioning" class="hash-link" aria-label="Direct link to Azure Provisioning" title="Direct link to Azure Provisioning">​</a></h2>
<p>The Contoso Chat sample comes with a <a href="https://github.com/Azure-Samples/contoso-chat/blob/main/provision.sh" target="_blank" rel="noopener noreferrer"><code>provision.sh</code></a> script that will pre-provision many of the Azure resources for you, for use in the development workflow. To get started with the implementation, follow the instructions in the <a href="https://github.com/Azure-Samples/contoso-chat/blob/main/README.md" target="_blank" rel="noopener noreferrer">README</a> file in the repo by doing the following:</p>
<ol>
<li><a href="https://github.com/Azure-Samples/contoso-chat/fork" target="_blank" rel="noopener noreferrer">Fork the sample</a> to your own GitHub account</li>
<li><a href="https://github.com/Azure-Samples/contoso-chat/blob/main/README.md#3-development-environment" target="_blank" rel="noopener noreferrer">Setup development environment</a> using GitHub Codespaces</li>
<li><a href="https://github.com/Azure-Samples/contoso-chat/tree/main#41-authenticate-with-azure" target="_blank" rel="noopener noreferrer">Authenticate</a> with your Azure subscription</li>
<li><a href="https://github.com/Azure-Samples/contoso-chat/tree/main#42-run-provisioning-script" target="_blank" rel="noopener noreferrer">Run the Provisioning script</a> and verify your setup is complete</li>
</ol>
<p>At this point, you should have an Azure resource group created for your project with the following resources created for your application. Note that in order to complete this step, you must have a valid Azure subscription that has been given access to the relevant Azure OpenAI services. You must also have available quota for model deployments in the specific regions that we use in the provisioning script.</p>
<p><img loading="lazy" alt="Provisioning Azure" src="https://azure.github.io/Cloud-Native/assets/images/provision-azure-86013b78767740531d53ab8efc7fb697.png" width="2622" height="1302" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="hands-on-lab">Hands-on Lab<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-contoso-chat-end-to-end#hands-on-lab" class="hash-link" aria-label="Direct link to Hands-on Lab" title="Direct link to Hands-on Lab">​</a></h2>
<p>You can now complete the step-by-step tutorial in the <a href="https://github.com/Azure-Samples/contoso-chat/blob/main/README.md" target="_blank" rel="noopener noreferrer">README</a> to build, evaluate and deploy the application. Let's quickly review the main steps involved in the end-to-end workflow.</p>
<table><thead><tr><th style="text-align:left">Stage</th><th style="text-align:left">Description</th></tr></thead><tbody><tr><td style="text-align:left">1. Build a Copilot.</td><td style="text-align:left">Get familiar with the application codebase. Check out the <code>data/</code> folder to see the data we will be using for customer order (history) and product catalog (index).</td></tr><tr><td style="text-align:left">2. Provision Azure.</td><td style="text-align:left">Run the <code>./provision.sh</code> script or manually provision the required resources. This should setup an Azure AI hub (manage), an Azure AI project (build), an Azure Cosmos DB resource  (customer data) and an Azure AI Search resource (product index). Verify you have a <code>config.json</code> created (for local Azure configuration) and an <code>.env</code> file (for relevant keys and endpoints for access).</td></tr><tr><td style="text-align:left">3. Add Models &amp; Data.</td><td style="text-align:left">The provisioning script does the model deployments - but review them now. Make sure you have a chat completion model (gpt-35-turbo), a chat evaluation model (gpt-4) and a text-embeddings model (text-embedding-ada-02). Use the provided notebooks to populate the data in Azure Cosmos DB and Azure AI Search.</td></tr><tr><td style="text-align:left">4. Add Connections</td><td style="text-align:left">The <code>devcontainer</code> configuration ensures you have the Prompt flow extension installed in VS Code, and the <code>pf</code> too for command-line, by default. Use the provided notebooks to setup <em>connection configurations</em> from prompt flow to key services (Azure OpenAI, Azure AI Search, Azure Cosmos DB) for use in related notes of the prompt flow graph. Use the <code>pf</code> tool to validate these were setup correctly (on VS Code). The provision script may have setup some of these for you in the cloud (Azure) for use in later stages (deploy) - take a minute to verify and correct these as described in README.</td></tr><tr><td style="text-align:left">5. Build Prompt Flow</td><td style="text-align:left">You are all set to run the prompt flow with your data in Azure.  Explore the components of the prompt flow. Click the <em>stylized P</em> icon in the sidebar to see the Prompt Flow extension activity menu. Open the <code>contoso-chat/flow.dag.yaml</code> file in VS Code, then click the <em>Visual Editor</em> option to see the view shown in the earlier screeshot above. Run it to validate it works - then explore the nodes, outputs and code.</td></tr><tr><td style="text-align:left">6. Evaluate Prompt Flow</td><td style="text-align:left">You can complete a local evaluation by opening the relevant notebook and running it <em>cell-by-cell</em>. Review the code in each cell of the notebook, then analyze the output to understand what the relevant metrics are telling you about the quality of the basic flow. The <em>batch run</em> step takes a while and requires Azure connection setup so consider that an optional step. Switch periodically to the <em>Azure AI Studio</em> website view to see how the relevant Azure AI project pages are updated to show the status of various activities or configurations.</td></tr><tr><td style="text-align:left">7. Deploy Prompt Flow</td><td style="text-align:left">Deploying the prompt flow is a 2-step process. First, we need to upload the flow (code, assets) to Azure AI Studio. Do this using the provided notebook, or you can try to do this manually using the <em>import</em> option in Azure AI Studio under the <em>Prompt Flow</em> section. Once uploaded, you need to select a runtime ("automatic") and start it to get a compute instance provisioned to execute your flow. Use that to <em>test</em> that your flow was imported successfully. Then click the <em>Deploy</em> option to deploy the flow. This will take a while - refresh the <em>Deployments</em> page to get updates. Once deployment is successful, use the built-in testing feature to try a simple question against the hosted API endpoint. <strong>Congratulations</strong> Your chat AI endpoint is ready for use!</td></tr><tr><td style="text-align:left">8. Summary &amp; Clean up</td><td style="text-align:left">This was a lot. Note that almost every step of this process can be achieved using code (SDK), command-line (CLI) or UI (Studio website) so explore the documentation. <em>Note that Azure AI Studio is in preview</em> so the features are constantly evolving and things may break unexpectedly - send feedback if so! Finally, don't forget to <strong>delete your codespaces and your Azure resources for this lab</strong> to avoid unnecessary charges. And watch the sample repo for updates on workshop content and exercises to extend this further.</td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td></tr></tbody></table>
<p>Completing this workshop can take 60-90 minutes based on your level of familiarity with the tools. In the <em>next</em> blog post, we'll dive a bit deeper into the process with specific focus on the <strong>Azure AI SDK</strong> to understand <em>how</em> you can implement core steps of the workflow from your Python application. And, in the <em>final</em> post of this week, we'll return to the Contoso Chat sample to explore deployment and evaluation in more detail - with additional guidance for ensuring responsible AI usage in your generative AI applications.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="exercise">Exercise<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-contoso-chat-end-to-end#exercise" class="hash-link" aria-label="Direct link to Exercise" title="Direct link to Exercise">​</a></h2>
<p>Congratulations! You made it to the end of this whirlwind tour of the Contoso Chat sample. Now it's time for you to do the hard work of building this yoursel!! Start by <a href="https://aka.ms/aitour/contoso-chat" target="_blank" rel="noopener noreferrer"><em>forking the sample</em></a> - then follow the step-by-step instructions in the README.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="resources">Resources<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-contoso-chat-end-to-end#resources" class="hash-link" aria-label="Direct link to Resources" title="Direct link to Resources">​</a></h2>
<p>We've referenced a number of links and samples in this post. Bookmark the <a href="https://aka.ms/ai-studio/collection?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer"><em>Azure AI Studio: Code-First Collection</em></a> and revisit it regularly for an updated list of resources for code-first development of generative AI applications on Azure.</p>]]></content>
        <author>
            <name>#60Days Of IA</name>
            <uri>https://azure.github.io/Cloud-Native/Build-IA/</uri>
        </author>
        <category label="Build-Intelligent-Apps" term="Build-Intelligent-Apps"/>
        <category label="60-days-of-IA" term="60-days-of-IA"/>
        <category label="learn-live" term="learn-live"/>
        <category label="hack-together" term="hack-together"/>
        <category label="community-buzz" term="community-buzz"/>
        <category label="ask-the-expert" term="ask-the-expert"/>
        <category label="azure-kubernetes-service" term="azure-kubernetes-service"/>
        <category label="azure-functions" term="azure-functions"/>
        <category label="azure-openai" term="azure-openai"/>
        <category label="azure-container-apps" term="azure-container-apps"/>
        <category label="azure-cosmos-db" term="azure-cosmos-db"/>
        <category label="github-copilot" term="github-copilot"/>
        <category label="github-codespaces" term="github-codespaces"/>
        <category label="github-actions" term="github-actions"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[4.2 Build A Copilot Code-First with the Azure AI Python SDK]]></title>
        <id>https://azure.github.io/Cloud-Native/60DaysOfIA/build-a-copilot-code-first-with-the-azure-ai-python-sdk</id>
        <link href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-a-copilot-code-first-with-the-azure-ai-python-sdk"/>
        <updated>2024-03-12T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[Have a generative AI application you want to build, but don't know where to start? In this blog post, we introduce the Azure AI Studio Python Quickstart Sample, explain the end-to-end development workflow, then show you how you can get started customizing it, to explore your own application requirements.]]></summary>
        <content type="html"><![CDATA[
<p><strong>Welcome to Day 2️⃣ of the Azure AI week on #60DaysOfIA</strong></p>
<p>Let's recap what we learned so far. In our <em>kickoff</em> post we set the stage by describing our application scenario (Contoso Chat), the paradigm shift for generative AI apps (LLM Ops) and the unified platform for streamlining development (Azure AI Studio). In the next post we walked through the signature <a href="https://aka.ms/aitour/contoso-chat" target="_blank" rel="noopener noreferrer">Contoso Chat</a> application sample to understand how we can implement that scenario using Azure AI Studio and Prompt flow - from building the chat function, to evaluating it, deploying it to a hosted endpoint, then testing that API in a chat client.</p>
<p>But what if you want to get started building your own application scenario? Over the next three posts, we'll look at <em>starter samples</em> that will get you from ideation (define chat function) to operationalization (deploy chat API) using different tools and frameworks to simplify orchestration.</p>
<p>Ready? Let's go!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-youll-learn-today">What You'll Learn Today<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-a-copilot-code-first-with-the-azure-ai-python-sdk#what-youll-learn-today" class="hash-link" aria-label="Direct link to What You'll Learn Today" title="Direct link to What You'll Learn Today">​</a></h2>
<ul>
<li>What is the copilot architecture?</li>
<li>What is the Azure AI SDK?</li>
<li>What is the Quickstart sample?</li>
<li>How can I customize and extend this for my scenario?</li>
<li><strong>Challenge:</strong> Fork <a href="https://github.com/Azure-Samples/aistudio-python-quickstart-sample" target="_blank" rel="noopener noreferrer">this quickstart</a> and build it, then extend it with your data.</li>
<li><strong>Resources:</strong> Bookmark <a href="https://aka.ms/ai-studio/collection?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">this collection</a> for training &amp; documentation.</li>
</ul>
<br>
<p><img loading="lazy" alt="Build a Copilot on Azure Code-First with Azure AI SDK" src="https://azure.github.io/Cloud-Native/assets/images/banner-4d2eba8f8235ac22e80ba59b0b9a3651.png" width="1000" height="420" class="img_ev3q"></p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1--learning-objectives">1 | Learning Objectives<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-a-copilot-code-first-with-the-azure-ai-python-sdk#1--learning-objectives" class="hash-link" aria-label="Direct link to 1 | Learning Objectives" title="Direct link to 1 | Learning Objectives">​</a></h2>
<p>The <a href="https://github.com/Azure-Samples/aistudio-python-quickstart-sample" target="_blank" rel="noopener noreferrer">copilot ai-sdk quickstart</a> is a Python-based starter sample for a code-first approach to building a copilot experience on the Azure AI platform. Since this is the foundational sample, we'll use it to explore some of the details of the implementation and set the stage for you to explore customizing it further for your application requirements.</p>
<p>By the end of this tutorial you should be able to:</p>
<ol>
<li>Explain the functional components of the copilot architecture</li>
<li>Explain the Azure resources required to implement a copilot</li>
<li>Explain the core functionality provided by the Azure AI SDK</li>
<li>Build, run, evaluate, and deploy, a basic copilot with Azure AI Studio.</li>
<li>Explore the Azure AI curated VS Code environment to customize the sample</li>
</ol>
<p>Keep in mind that this is a <em>quickstart sample</em> and is <strong>not meant for production use</strong>. We encourage you to extend and customize the sample to understand the platform capabilities and end-to-end development workflow. Make sure to validate the responses yourself and evaluate its suitability for your application needs in context.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-copilot-architecture">2| Copilot Architecture<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-a-copilot-code-first-with-the-azure-ai-python-sdk#2-copilot-architecture" class="hash-link" aria-label="Direct link to 2| Copilot Architecture" title="Direct link to 2| Copilot Architecture">​</a></h2>
<p>Let's first revisit the high-level application architecture for our copilot and familiarize ourselves with the core functional components. Our goal is to <strong>build the chat function</strong> component and deploy it to get a hosted <strong>Copilot API</strong> endpoint that we can integrate into front-end applications to provide a conversational chatbot capability grounded in our data.
<img loading="lazy" alt="Copilot architecture" src="https://azure.github.io/Cloud-Native/assets/images/copilot-architecture-a14ddb6e2ac8e5ded7e544f1093325fc.png" width="2856" height="1292" class="img_ev3q"></p>
<p>Let's review what we will need to implement this architecture:</p>
<ol>
<li><strong>Model Deployments</strong> - we need deployed models for chat and embeddings.</li>
<li><strong>Search Index</strong> - we need a search index populated with our product data.</li>
<li><strong>Azure Resources</strong> - we need to setup and configure our Azure AI project.</li>
<li><strong>App Evaluation</strong> - we need to evaluate copilot quality for responsible AI.</li>
<li><strong>App Deployment</strong> - we need to deploy the copilot for a hosted API endpoint.</li>
</ol>
<p>The <a href="https://github.com/Azure-Samples/aistudio-python-quickstart-sample" target="_blank" rel="noopener noreferrer">copilot ai-sdk quickstart</a> provides a starter codebase that implements this chat function using the Retrieval Augmented Generation (RAG) pattern with custom data. The implementation makes use of Azure AI Studio and the <a href="https://aka.ms/aistudio/docs/sdk?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure AI SDK (Python)</a> for a code-first approach. Since these technologies are currently in preview, we expect the sample to keep evolving quickly and <strong>recommend following the README-based tutorial there</strong> for the latest instructions.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="3--azure-ai-sdk">3 | Azure AI SDK<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-a-copilot-code-first-with-the-azure-ai-python-sdk#3--azure-ai-sdk" class="hash-link" aria-label="Direct link to 3 | Azure AI SDK" title="Direct link to 3 | Azure AI SDK">​</a></h2>
<p>Before we dive into the sample, let's take a moment to learn about the <a href="https://learn.microsoft.com/python/api/overview/azure/ai?view=azure-python-preview?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure AI SDK for Python (preview)</a>. The SDK consists of two packages:</p>
<ul>
<li><a href="https://pypi.org/project/azure-ai-generative/" target="_blank" rel="noopener noreferrer">azure-ai-generative</a> - which provides the functionality needed for building, evaluating and deploying Generative AI applications. This has extra packages (index, evaluate, promptflow) you can use for enhanced local development capabilities - or optionally, remove if unused.</li>
<li><a href="https://pypi.org/project/azure-ai-resources/" target="_blank" rel="noopener noreferrer">azure-ai-resources</a> - which provides the functionality for connecting to, and managing, your Azure AI projects and resources. Use this for control plane operations to create and manage data, indexes, models and deployments.</li>
</ul>
<p>The generative package makes use of the resources package to <a href="https://learn.microsoft.com/azure/ai-studio/how-to/sdk-generative-overview#connecting-to-projects?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">create an <code>AIClient</code> instance</a> that can be used for connecting to the Azure AI project resources.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> azure</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">resources</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">client </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> AIClient</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> azure</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">identity </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> DefaultAzureCredential</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ai_client </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AIClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    credential</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">DefaultAzureCredential</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    subscription_id</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'subscription_id'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    resource_group_name</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'resource_group'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    project_name</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'project_name'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Once connected, you can use the generative package to build an index, run a local evaluation, or deploy chat functions and prompt flows, using the imports shown:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> azure</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">generative</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">index </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> build_index</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> azure</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">generative</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">evaluate </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> evaluate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> azure</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">resources</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">entities</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">deployment </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> Deployment</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>To get started, you will need to <a href="https://learn.microsoft.com/en-us/azure/ai-studio/how-to/sdk-install?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">install the SDK</a> in your local development environment. When you use the quickstart sample with GitHub Codespaces or the Azure AI curated VS Code environment, the SDK comes pre-installed and ready to use.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="4--using-the-quickstart-sample">4 | Using the Quickstart Sample<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-a-copilot-code-first-with-the-azure-ai-python-sdk#4--using-the-quickstart-sample" class="hash-link" aria-label="Direct link to 4 | Using the Quickstart Sample" title="Direct link to 4 | Using the Quickstart Sample">​</a></h2>
<p>The <a href="https://github.com/Azure-Samples/aistudio-python-quickstart-sample" target="_blank" rel="noopener noreferrer">copilot ai-sdk quickstart</a> provides a comprehensive <strong>README.md</strong> document that describes the step-by-step process for building, running, evaluating, and deploying, a starter copilot sample.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="41--pre-requisites">4.1 | Pre-Requisites<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-a-copilot-code-first-with-the-azure-ai-python-sdk#41--pre-requisites" class="hash-link" aria-label="Direct link to 4.1 | Pre-Requisites" title="Direct link to 4.1 | Pre-Requisites">​</a></h3>
<p>To get started, you will need an active Azure subscription and have access to the Azure OpenAI service to create and deploy the required models for chat completion, chat evaluation and embedddings. You will also need a GitHub account.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="42--setup-dev-environment">4.2 | Setup Dev Environment<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-a-copilot-code-first-with-the-azure-ai-python-sdk#42--setup-dev-environment" class="hash-link" aria-label="Direct link to 4.2 | Setup Dev Environment" title="Direct link to 4.2 | Setup Dev Environment">​</a></h3>
<p>The fastest way to get started exploring the sample is to fork the repo to your personal profile, then launch GitHub Codespaces by navigating to the "Codespaces" tab under the "Code" dropdown and creating a new codespace. Active codespaces are listed as shown below.</p>
<p><img loading="lazy" alt="Launch" src="https://azure.github.io/Cloud-Native/assets/images/01-launch-codespaces-1ad39efaa8d2fb4aaba22c3d862d4481.png" width="440" height="308" class="img_ev3q"></p>
<p>Once the Codespace is ready, you will see the Visual Studio Code editor view in your browser tab. Open the <strong>README.md</strong> in the editor, then follow the instructions to complete the tutorial.</p>
<p><img loading="lazy" alt="Run" src="https://azure.github.io/Cloud-Native/assets/images/03-running-codespaces-b22f43ec205440e361612be69b0fa8bf.png" width="1237" height="793" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="43--initialize-azure-ai-resources">4.3 | Initialize Azure AI Resources<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-a-copilot-code-first-with-the-azure-ai-python-sdk#43--initialize-azure-ai-resources" class="hash-link" aria-label="Direct link to 4.3 | Initialize Azure AI Resources" title="Direct link to 4.3 | Initialize Azure AI Resources">​</a></h3>
<p>To build the copilot, we need to provision the Azure resources listed below.</p>
<ul>
<li>An <a href="https://learn.microsoft.com/azure/ai-studio/concepts/ai-resources?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure AI hub resource</a> to provide a working <em>team</em> environment and manage resource access, billing and more.</li>
<li>An <a href="https://learn.microsoft.com/azure/ai-studio/how-to/create-projects?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure AI project resource</a> to organize the data, models, and deployments for <em>an application</em>, and save its state for future use.</li>
<li>An <a href="https://learn.microsoft.com/en-us/azure/search/?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure AI Search resource</a> to host the search index for our product data.</li>
<li>An <a href="https://learn.microsoft.com/azure/openai?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure OpenAI resource</a> to deploy the models for chat completion, chat evaluation and embeddings.</li>
</ul>
<p>For now, we will be creating these resources from the <a href="https://ai.azure.com/?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure AI Studio UI</a> and <a href="https://portal.azure.com/?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure Portal</a> UI in the browser. However, we expect future support for a command-line (CLI) based approach for efficiency and automation. Refer to the sample README for the step-by-step guidance.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="44--initialize-azure-configuration">4.4 | Initialize Azure Configuration<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-a-copilot-code-first-with-the-azure-ai-python-sdk#44--initialize-azure-configuration" class="hash-link" aria-label="Direct link to 4.4 | Initialize Azure Configuration" title="Direct link to 4.4 | Initialize Azure Configuration">​</a></h3>
<p>Once we've created the Azure resources, we need to configure our Visual Studio Code environment to connect to the cloud.  The repo comes with a <code>config.sample.json</code> that shows you the properties that need to be configured. The easiest way to set these is to download the <code>config.json</code> file from your Azure AI project resource and place it in the root folder. This information is then used to initialize the<code>AIClient</code> in the code, to support interactions with those resources, as explained earlier.</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "subscription_id": "your_subscription_id",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "resource_group": "your_resource_group",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "project_name": "your_project_name"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="45--configure-environment-variables">4.5 | Configure Environment Variables<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-a-copilot-code-first-with-the-azure-ai-python-sdk#45--configure-environment-variables" class="hash-link" aria-label="Direct link to 4.5 | Configure Environment Variables" title="Direct link to 4.5 | Configure Environment Variables">​</a></h3>
<p>The codebase comes with a sample <code>.env.sample</code> file that shows the environment variables you will need to configure, to run the sample. Copy this to <code>.env</code> then replace the placeholder strings with the values from the respective Azure resources you provisioned earlier. These environment variables will be used by the Azure AI SDK, to connect to relevant services (by endpoint) with required authentication (key) when implementing the chat function.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">AZURE_SUBSCRIPTION_ID=replace_with_azure_subscription_id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OPENAI_API_TYPE=azure</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OPENAI_API_KEY=replace_with_openai_key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OPENAI_API_BASE=replace_with_openai_base</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OPENAI_API_VERSION=replace_with_openai_version</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AZURE_AI_SEARCH_ENDPOINT=replace_with_aisearch_target</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AZURE_AI_SEARCH_KEY=replace_with_aisearch_key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AZURE_AI_SEARCH_INDEX_NAME=replace_with_aisearch_index_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AZURE_OPENAI_CHAT_MODEL=gpt-35-turbo-16k</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AZURE_OPENAI_CHAT_DEPLOYMENT=gpt-35-turbo-16k-0613</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AZURE_OPENAI_EVALUATION_MODEL=gpt-35-turbo-16k</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AZURE_OPENAI_EVALUATION_DEPLOYMENT="gpt-35-turbo-16k-0613"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AZURE_OPENAI_EMBEDDING_MODEL=text-embedding-ada-002</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AZURE_OPENAI_EMBEDDING_DEPLOYMENT=text-ada-embedding-002-2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="46--explore-custom-data">4.6 | Explore Custom Data<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-a-copilot-code-first-with-the-azure-ai-python-sdk#46--explore-custom-data" class="hash-link" aria-label="Direct link to 4.6 | Explore Custom Data" title="Direct link to 4.6 | Explore Custom Data">​</a></h3>
<p>At this point, the base system configuration is done and we just need to populate the data (for the search index) and then run, evaluate, and iterate, the chat function till the response quality is acceptable. Let's take a minute to explore the codebase <code>data/</code> folder to see the sample data we provide in the starter. We only use the product catalog data (to build the index) in <em>this</em> sample but you can explore usage of the other data types for advanced features or integrations later.</p>
<table><thead><tr><th>Data Folder</th><th>Data Description</th></tr></thead><tbody><tr><td><code>data/0-misc</code></td><td>General information - e.g., customer policies for org.</td></tr><tr><td><code>data/1-customer-info</code></td><td>Customer purchase records  - for 13 fictional customers</td></tr><tr><td><code>data/2-chat-history</code></td><td>Customer conversation history - for a subset of customers</td></tr><tr><td><code>data/3-product-info</code></td><td>Product catalog data - for 20 items in 7 categories</td></tr><tr><td><code>data/4-scores</code></td><td>Test data - for use in evaluations</td></tr><tr><td><code>data/5-prompt-templates</code></td><td>Example templates - for different contexts</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="47--explore-the-codebase">4.7 | Explore The Codebase<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-a-copilot-code-first-with-the-azure-ai-python-sdk#47--explore-the-codebase" class="hash-link" aria-label="Direct link to 4.7 | Explore The Codebase" title="Direct link to 4.7 | Explore The Codebase">​</a></h3>
<p>Here are the main files you need to be aware of:</p>
<table><thead><tr><th>File</th><th>Description</th></tr></thead><tbody><tr><td><code>src/run.py</code></td><td>The main entry point for executing core operations</td></tr><tr><td><code>src/streaming_utils.py</code></td><td>Functions for use in interactive conversation</td></tr><tr><td><code>src/copilot_aisdk/chat.py</code></td><td>The chat function implementation.</td></tr><tr><td><code>src/system-message.jinja2</code></td><td>The prompt template with system context (assistant)</td></tr></tbody></table>
<p>You can now execute the various steps of the end-to-end workflow as follows:</p>
<ul>
<li><code>python src/run.py --build-index</code> - to build the search index</li>
<li><code>python src/run.py --question "which tent is the most waterproof?"</code> - to test the chat function</li>
<li><code>python src/run.py --evaluate</code> - to evaluate the chat function</li>
<li><code>python src/run.py --deploy</code> - to deploy the chat function</li>
<li><code>python src/run.py --invoke</code> - to test the deployed chat API endpoint</li>
</ul>
<p>Note that the exact syntax and parameters used in these commands may evolve over time - so check the README in the sample for the latest instructions.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="48--explore-the-chat-function">4.8 | Explore The Chat Function<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-a-copilot-code-first-with-the-azure-ai-python-sdk#48--explore-the-chat-function" class="hash-link" aria-label="Direct link to 4.8 | Explore The Chat Function" title="Direct link to 4.8 | Explore The Chat Function">​</a></h3>
<p>Let's briefly talk about the custom code for the copilot, found in the <code>src/chat.py</code> file.</p>
<ul>
<li>The main entry point is the <code>chat_completion</code> function that takes a list of messages representing the conversation history.</li>
<li>The <code>get_documents</code> function extracts the last message ("user question") and uses it to retrieve relevant search results using the OpenAI embeddings model and the Azure AI Search client respectively, in a <em>retrieval augmented generation</em> (RAG) pattern.</li>
<li>The <code>chat_completion</code> function then takes the returned response and crafts an enhanced prompt (with the system context template, initial user message, and returned search results) and sends the request to the OpenAI chat model for completion.</li>
<li>The returned response is then returned to the user either interactively, or by adding it to the conversation thread (in stream mode).</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="5--operationalization">5 | Operationalization<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-a-copilot-code-first-with-the-azure-ai-python-sdk#5--operationalization" class="hash-link" aria-label="Direct link to 5 | Operationalization" title="Direct link to 5 | Operationalization">​</a></h2>
<p>The starter sample provides a simple sequence of command-line operations to build, run, evaluate, deploy, and test, the chat function. However, in a real-world scenario, you would integrate the deployed app with a front-end chat UI (like the Contoso Outdoors website) - and use the Azure AI Studio platform to further evaluate the chat function (batch runs), configure content filters (content safety), and monitor usage (performance) for iterative improvement. We'll discuss some of these tools and practices in the final post of this series.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="6--customizing-the-sample">6 | Customizing the Sample<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-a-copilot-code-first-with-the-azure-ai-python-sdk#6--customizing-the-sample" class="hash-link" aria-label="Direct link to 6 | Customizing the Sample" title="Direct link to 6 | Customizing the Sample">​</a></h2>
<p>The quickstart sample is a great starting point for exploring your own application scenarios using your own data. Note that the sample is not designed for production use - you will need to do your own validation and evaluation of responses to determine if the chat function is suitable for your application needs.</p>
<p>However, this is a great time to introduce you to the <em>cloud development environment</em> provided by the <a href="https://learn.microsoft.com/azure/ai-studio/how-to/develop-in-vscode?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer">Azure AI curated Visual Studio Code environment</a>.This allows you to open your fork of the sample directly from Azure AI Studio, creating a compute instance with a development environment that has the Azure AI SDK and other dependencies pre-installed. Watch this video from the Azure AI Studio team to see how that works - then replicate the process to jumpstart your application exploration journey.</p>
<iframe width="600" height="400" src="https://www.youtube.com/embed/UbJg7RNLi7E" title="Build generative AI applications using custom code with Azure AI" frameborder="0"></iframe>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="resources">Resources<a href="https://azure.github.io/Cloud-Native/60DaysOfIA/build-a-copilot-code-first-with-the-azure-ai-python-sdk#resources" class="hash-link" aria-label="Direct link to Resources" title="Direct link to Resources">​</a></h2>
<p>We've referenced a number of links and samples in this post. Bookmark the <a href="https://aka.ms/ai-studio/collection?ocid=buildia24_60days_blogs" target="_blank" rel="noopener noreferrer"><em>Azure AI Studio: Code-First Collection</em></a> and revisit it regularly for an updated list of resources for code-first development of generative AI applications on Azure.</p>]]></content>
        <author>
            <name>#60Days Of IA</name>
            <uri>https://azure.github.io/Cloud-Native/Build-IA/</uri>
        </author>
        <category label="Build-Intelligent-Apps" term="Build-Intelligent-Apps"/>
        <category label="60-days-of-IA" term="60-days-of-IA"/>
        <category label="learn-live" term="learn-live"/>
        <category label="hack-together" term="hack-together"/>
        <category label="community-buzz" term="community-buzz"/>
        <category label="ask-the-expert" term="ask-the-expert"/>
        <category label="azure-kubernetes-service" term="azure-kubernetes-service"/>
        <category label="azure-functions" term="azure-functions"/>
        <category label="azure-openai" term="azure-openai"/>
        <category label="azure-container-apps" term="azure-container-apps"/>
        <category label="azure-cosmos-db" term="azure-cosmos-db"/>
        <category label="github-copilot" term="github-copilot"/>
        <category label="github-codespaces" term="github-codespaces"/>
        <category label="github-actions" term="github-actions"/>
    </entry>
</feed>