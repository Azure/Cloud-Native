"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[33733],{69202:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var i=t(85893),s=t(11151);const r={slug:"bring-your-app-day-3",title:"3-3. Bringing Your Application to Kubernetes - Opening your Application with Ingress",authors:["paul"],draft:!1,hide_table_of_contents:!1,toc_min_heading_level:2,toc_max_heading_level:3,keywords:["cloudnative","azure","kubernetes","configmaps","persistent-volumes","secrets","azure-files","azure-key-vault","azure-workload-identity","best-practices"],image:"https://azure.github.io/Cloud-Native/img/og/30-13.png",description:"Expose your web application on Azure Kubernetes Service with ease using the Web Application Routing add-on. Benefit from automatic installation of a NGINX Ingress Controller, integration with Azure DNS for custom domains, and secure TLS with Azure Key Vault. Follow our step-by-step guide to enhance the accessibility and security of your web application.",tags:["cloud-native-new-year","azure-kubernetes-service","aks","kubernetes","ingress","nginx-ingress-controller","azure-dns","azure-key-vault"]},a=void 0,o={permalink:"/Cloud-Native/cnny-2023/bring-your-app-day-3",source:"@site/blog-cnny/2023-02-08/index.md",title:"3-3. Bringing Your Application to Kubernetes - Opening your Application with Ingress",description:"Expose your web application on Azure Kubernetes Service with ease using the Web Application Routing add-on. Benefit from automatic installation of a NGINX Ingress Controller, integration with Azure DNS for custom domains, and secure TLS with Azure Key Vault. Follow our step-by-step guide to enhance the accessibility and security of your web application.",date:"2023-02-08T00:00:00.000Z",formattedDate:"February 8, 2023",tags:[{label:"cloud-native-new-year",permalink:"/Cloud-Native/cnny-2023/tags/cloud-native-new-year"},{label:"azure-kubernetes-service",permalink:"/Cloud-Native/cnny-2023/tags/azure-kubernetes-service"},{label:"aks",permalink:"/Cloud-Native/cnny-2023/tags/aks"},{label:"kubernetes",permalink:"/Cloud-Native/cnny-2023/tags/kubernetes"},{label:"ingress",permalink:"/Cloud-Native/cnny-2023/tags/ingress"},{label:"nginx-ingress-controller",permalink:"/Cloud-Native/cnny-2023/tags/nginx-ingress-controller"},{label:"azure-dns",permalink:"/Cloud-Native/cnny-2023/tags/azure-dns"},{label:"azure-key-vault",permalink:"/Cloud-Native/cnny-2023/tags/azure-key-vault"}],readingTime:9.835,hasTruncateMarker:!1,authors:[{name:"Paul Yu",title:"Senior Cloud Advocate",url:"https://github.com/pauldotyu",imageURL:"https://github.com/pauldotyu.png",key:"paul"}],frontMatter:{slug:"bring-your-app-day-3",title:"3-3. Bringing Your Application to Kubernetes - Opening your Application with Ingress",authors:["paul"],draft:!1,hide_table_of_contents:!1,toc_min_heading_level:2,toc_max_heading_level:3,keywords:["cloudnative","azure","kubernetes","configmaps","persistent-volumes","secrets","azure-files","azure-key-vault","azure-workload-identity","best-practices"],image:"https://azure.github.io/Cloud-Native/img/og/30-13.png",description:"Expose your web application on Azure Kubernetes Service with ease using the Web Application Routing add-on. Benefit from automatic installation of a NGINX Ingress Controller, integration with Azure DNS for custom domains, and secure TLS with Azure Key Vault. Follow our step-by-step guide to enhance the accessibility and security of your web application.",tags:["cloud-native-new-year","azure-kubernetes-service","aks","kubernetes","ingress","nginx-ingress-controller","azure-dns","azure-key-vault"]},unlisted:!1,prevItem:{title:"3-2. Bringing Your Application to Kubernetes - Adapting Storage, Secrets, and Configuration",permalink:"/Cloud-Native/cnny-2023/bring-your-app-day-2"},nextItem:{title:"3-4. Bringing Your Application to Kubernetes - Debugging and Instrumentation",permalink:"/Cloud-Native/cnny-2023/bring-your-app-day-4"}},l={authorsImageUrls:[void 0]},c=[{value:"What We&#39;ll Cover",id:"what-well-cover",level:2},{value:"Gather requirements",id:"gather-requirements",level:2},{value:"Generate TLS certificate and store in Azure Key Vault",id:"generate-tls-certificate-and-store-in-azure-key-vault",level:2},{value:"Implement custom DNS with Azure DNS",id:"implement-custom-dns-with-azure-dns",level:2},{value:"Enable Web Application Routing add-on for AKS",id:"enable-web-application-routing-add-on-for-aks",level:2},{value:"Implement Ingress for the web application",id:"implement-ingress-for-the-web-application",level:2},{value:"Why is the Admin page broken?",id:"why-is-the-admin-page-broken",level:3},{value:"Conclusion",id:"conclusion",level:2},{value:"Resources",id:"resources",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components},{Head:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t,{children:[(0,i.jsx)("meta",{name:"twitter:url",content:"https://azure.github.io/Cloud-Native/cnny-2023/bring-your-app-day-3"}),(0,i.jsx)("meta",{name:"twitter:title",content:"3-3. Bringing Your Application to Kubernetes - Opening your Application with Ingress"}),(0,i.jsx)("meta",{name:"twitter:description",content:"Expose your web application on Azure Kubernetes Service with ease using the Web Application Routing add-on. Benefit from automatic installation of a NGINX Ingress Controller, integration with Azure DNS for custom domains, and secure TLS with Azure Key Vault. Follow our step-by-step guide to enhance the accessibility and security of your web application."}),(0,i.jsx)("meta",{name:"twitter:image",content:"https://azure.github.io/Cloud-Native/img/og/30-13.png"}),(0,i.jsx)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,i.jsx)("meta",{name:"twitter:creator",content:"@pauldotyu"}),(0,i.jsx)("meta",{name:"twitter:site",content:"@AzureAdvocates"}),(0,i.jsx)("link",{rel:"canonical",href:"https://azure.github.io/Cloud-Native/cnny-2023/bring-your-app-day-3"})]}),"\n",(0,i.jsxs)(n.p,{children:["Welcome to ",(0,i.jsx)(n.code,{children:"Day 3 of Week 3"})," of #CloudNativeNewYear!"]}),"\n",(0,i.jsx)(n.p,{children:"The theme for this week is Bringing Your Application to Kubernetes. Yesterday we added configuration, secrets, and storage to our app. Today we'll explore how to expose the eShopOnWeb app so that customers can reach it over the internet using a custom domain name and TLS."}),"\n",(0,i.jsx)(n.admonition,{title:"Ask the Experts Thursday, February 9th at 9 AM PST",type:"tip",children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://aka.ms/cnny/watch-ate",children:"Watch our Q&A with Experts from the Azure Kubernetes Service product team!"})})}),"\n",(0,i.jsxs)(n.admonition,{title:"Friday, February 10th at 11 AM PST",type:"tip",children:[(0,i.jsx)(n.p,{children:"Watch the recorded demo and conversation about this week's topics."}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://aka.ms/cnny/week3-demo",children:"We were live on YouTube walking through today's (and the rest of this week's) demos"}),".  Join us Friday, February 10th and bring your questions!"]})]}),"\n",(0,i.jsx)(n.h2,{id:"what-well-cover",children:"What We'll Cover"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Gather requirements"}),"\n",(0,i.jsx)(n.li,{children:"Generate TLS certificate and store in Azure Key Vault"}),"\n",(0,i.jsx)(n.li,{children:"Implement custom DNS using Azure DNS"}),"\n",(0,i.jsx)(n.li,{children:"Enable Web Application Routing add-on for AKS"}),"\n",(0,i.jsx)(n.li,{children:"Implement Ingress for the web application"}),"\n",(0,i.jsx)(n.li,{children:"Conclusion"}),"\n",(0,i.jsx)(n.li,{children:"Resources"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"gather-requirements",children:"Gather requirements"}),"\n",(0,i.jsx)(n.p,{children:"Currently, our eShopOnWeb app has three Kubernetes services deployed:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"db"})," exposed internally via ",(0,i.jsx)(n.code,{children:"ClusterIP"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"api"})," exposed externally via ",(0,i.jsx)(n.code,{children:"LoadBalancer"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"web"})," exposed externally via ",(0,i.jsx)(n.code,{children:"LoadBalancer"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["As mentioned in ",(0,i.jsx)(n.a,{href:"/Cloud-Native/cnny-2023/fundamentals-day-2",children:"my post last week"}),", Services allow applications to communicate with each other using DNS names. Kubernetes has service discovery capabilities built-in that allows Pods to resolve Services simply by using their names."]}),"\n",(0,i.jsxs)(n.p,{children:["In the case of our ",(0,i.jsx)(n.code,{children:"api"})," and ",(0,i.jsx)(n.code,{children:"web"})," deployments, they can simply reach the database by calling its name. The service type of ",(0,i.jsx)(n.code,{children:"ClusterIP"})," for the ",(0,i.jsx)(n.code,{children:"db"})," can remain as-is since it only needs to be accessed by the ",(0,i.jsx)(n.code,{children:"api"})," and ",(0,i.jsx)(n.code,{children:"web"})," apps."]}),"\n",(0,i.jsxs)(n.p,{children:["On the other hand, ",(0,i.jsx)(n.code,{children:"api"})," and ",(0,i.jsx)(n.code,{children:"web"})," both need to be accessed over the public internet. Currently, these services are using service type ",(0,i.jsx)(n.code,{children:"LoadBalancer"})," which tells AKS to provision an Azure Load Balancer with a public IP address. No one is going to remember the IP addresses, so we need to make the app more accessible by adding a custom domain name and securing it with a TLS certificate."]}),"\n",(0,i.jsx)(n.p,{children:"Here's what we're going to need:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Custom domain name for our app"}),"\n",(0,i.jsx)(n.li,{children:"TLS certificate for the custom domain name"}),"\n",(0,i.jsxs)(n.li,{children:["Routing rule to ensure requests with ",(0,i.jsx)(n.code,{children:"/api/"})," in the URL is routed to the backend REST API"]}),"\n",(0,i.jsxs)(n.li,{children:["Routing rule to ensure requests without ",(0,i.jsx)(n.code,{children:"/api/"})," in the URL is routing to the web UI"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Just like last week, we will use the ",(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/azure/aks/web-app-routing?WT.mc_id=containers-84290-pauyu&tabs=without-osm",children:"Web Application Routing"})," add-on for AKS. But this time, we'll integrate it with Azure DNS and Azure Key Vault to satisfy all of our requirements above."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"At the time of this writing the add-on is still in Public Preview"})}),"\n",(0,i.jsx)(n.h2,{id:"generate-tls-certificate-and-store-in-azure-key-vault",children:"Generate TLS certificate and store in Azure Key Vault"}),"\n",(0,i.jsxs)(n.p,{children:["We deployed an Azure Key Vault ",(0,i.jsx)(n.a,{href:"/Cloud-Native/cnny-2023/bring-your-app-day-2",children:"yesterday"})," to store secrets. We'll use it again to store a TLS certificate too."]}),"\n",(0,i.jsx)(n.p,{children:"Let's create and export a self-signed certificate for the custom domain."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'DNS_NAME=eshoponweb$RANDOM.com\nopenssl req -new -x509 -nodes -out web-tls.crt -keyout web-tls.key -subj "/CN=${DNS_NAME}" -addext "subjectAltName=DNS:${DNS_NAME}"\nopenssl pkcs12 -export -in web-tls.crt -inkey web-tls.key -out web-tls.pfx -password pass:\n'})}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.p,{children:"For learning purposes we'll use a self-signed certificate and a fake custom domain name."}),(0,i.jsx)(n.p,{children:"To browse to the site using the fake domain, we'll mimic a DNS lookup by adding an entry to your host file which maps the public IP address assigned to the ingress controller to the custom domain."}),(0,i.jsx)(n.p,{children:"In a production scenario, you will need to have a real domain delegated to Azure DNS and a valid TLS certificate for the domain."})]}),"\n",(0,i.jsx)(n.p,{children:"Grab your Azure Key Vault name and set the value in a variable for later use."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'RESOURCE_GROUP=cnny-week3\n\nAKV_NAME=$(az resource list \\\n  --resource-group $RESOURCE_GROUP \\\n  --resource-type Microsoft.KeyVault/vaults \\\n  --query "[0].name" -o tsv)\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Grant yourself permissions to ",(0,i.jsx)(n.code,{children:"get"}),", ",(0,i.jsx)(n.code,{children:"list"}),", and ",(0,i.jsx)(n.code,{children:"import"})," certificates."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"MY_USER_NAME=$(az account show --query user.name -o tsv)\nMY_USER_OBJECT_ID=$(az ad user show --id $MY_USER_NAME --query id -o tsv)\n\naz keyvault set-policy \\\n  --name $AKV_NAME \\\n  --object-id $MY_USER_OBJECT_ID \\\n  --certificate-permissions get list import\n"})}),"\n",(0,i.jsx)(n.p,{children:"Upload the TLS certificate to Azure Key Vault and grab its certificate URI."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"WEB_TLS_CERT_ID=$(az keyvault certificate import \\\n  --vault-name $AKV_NAME \\\n  --name web-tls \\\n  --file web-tls.pfx \\\n  --query id \\\n  --output tsv)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"implement-custom-dns-with-azure-dns",children:"Implement custom DNS with Azure DNS"}),"\n",(0,i.jsx)(n.p,{children:"Create a custom domain for our application and grab its Azure resource id."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"DNS_ZONE_ID=$(az network dns zone create \\\n  --name $DNS_NAME \\\n  --resource-group $RESOURCE_GROUP \\\n  --query id \\\n  --output tsv)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"enable-web-application-routing-add-on-for-aks",children:"Enable Web Application Routing add-on for AKS"}),"\n",(0,i.jsxs)(n.p,{children:["As we enable the Web Application Routing add-on, we'll also pass in the Azure DNS Zone resource id which triggers the installation of the ",(0,i.jsxs)(n.a,{href:"https://learn.microsoft.com/azure/aks/web-app-routing?WT.mc_id=containers-84290-pauyu&tabs=without-osm#web-application-routing-add-on-overview:~:text=external%2Ddns%20controller%3A%20Watches%20for%20Kubernetes%20Ingress%20resources%20and%20creates%20DNS%20A%20records%20in%20the%20cluster%2Dspecific%20DNS%20zone.%20Note%20that%20this%20is%20only%20deployed%20when%20you%20pass%20in%20the%20%2D%2Ddns%2Dzone%2Dresource%2Did%20argument.",children:[(0,i.jsx)(n.code,{children:"external-dns"})," controller"]})," in your Kubernetes cluster. This controller will be able to write Azure DNS zone entries on your behalf as you deploy Ingress manifests."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'AKS_NAME=$(az resource list \\\n  --resource-group $RESOURCE_GROUP \\\n  --resource-type Microsoft.ContainerService/managedClusters \\\n  --query "[0].name" -o tsv)\n\naz aks enable-addons \\\n  --name $AKS_NAME \\\n  --resource-group $RESOURCE_GROUP \\\n  --addons web_application_routing \\\n  --dns-zone-resource-id=$DNS_ZONE_ID \\\n  --enable-secret-rotation\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The add-on will also deploy a new Azure Managed Identity which is used by the ",(0,i.jsx)(n.code,{children:"external-dns"})," controller when writing Azure DNS zone entries. Currently, it does not have permission to do that, so let's grant it permission."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# This is where resources are automatically deployed by AKS\nNODE_RESOURCE_GROUP=$(az aks show \\\n  --name $AKS_NAME \\\n  --resource-group $RESOURCE_GROUP \\\n  --query nodeResourceGroup -o tsv)\n\n# This is the managed identity created by the Web Application Routing add-on\nMANAGED_IDENTTIY_OBJECT_ID=$(az resource show \\\n  --name webapprouting-${AKS_NAME} \\\n  --resource-group $NODE_RESOURCE_GROUP \\\n  --resource-type Microsoft.ManagedIdentity/userAssignedIdentities \\\n  --query properties.principalId \\\n  --output tsv)\n\n# Grant the managed identity permissions to write DNS entries\naz role assignment create \\\n  --role "DNS Zone Contributor" \\\n  --assignee $MANAGED_IDENTTIY_OBJECT_ID \\\n  --scope $DNS_ZONE_ID\n'})}),"\n",(0,i.jsx)(n.p,{children:"The Azure Managed Identity will also be used to retrieve and rotate TLS certificates from Azure Key Vault. So we'll need to grant it permission for that too."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"az keyvault set-policy \\\n  --name $AKV_NAME \\\n  --object-id $MANAGED_IDENTTIY_OBJECT_ID \\\n  --secret-permissions get \\\n  --certificate-permissions get\n"})}),"\n",(0,i.jsx)(n.h2,{id:"implement-ingress-for-the-web-application",children:"Implement Ingress for the web application"}),"\n",(0,i.jsxs)(n.p,{children:["Before we create a new Ingress manifest, let's update the existing services to use ",(0,i.jsx)(n.code,{children:"ClusterIP"})," instead of ",(0,i.jsx)(n.code,{children:"LoadBalancer"}),". With an Ingress in place, there is no reason why we need the Service resources to be accessible from outside the cluster. The new Ingress will be the only entrypoint for external users."]}),"\n",(0,i.jsxs)(n.p,{children:["We can use the ",(0,i.jsx)(n.code,{children:"kubectl patch"})," command to update the services"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'kubectl patch service api -p \'{"spec": {"type": "ClusterIP"}}\'\nkubectl patch service web -p \'{"spec": {"type": "ClusterIP"}}\'\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Deploy a new Ingress to place in front of the ",(0,i.jsx)(n.code,{children:"web"})," Service. Notice there is a special ",(0,i.jsx)(n.code,{children:"annotations"})," entry for ",(0,i.jsx)(n.code,{children:"kubernetes.azure.com/tls-cert-keyvault-uri"})," which points back to our self-signed certificate that was uploaded to Azure Key Vault."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f - <<EOF\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    kubernetes.azure.com/tls-cert-keyvault-uri: ${WEB_TLS_CERT_ID}\n  name: web\nspec:\n  ingressClassName: webapprouting.kubernetes.azure.com\n  rules:\n  - host: ${DNS_NAME}\n    http:\n      paths:\n      - backend:\n          service:\n            name: web\n            port:\n              number: 80\n        path: /\n        pathType: Prefix\n      - backend:\n          service:\n            name: api\n            port:\n              number: 80\n        path: /api\n        pathType: Prefix\n  tls:\n  - hosts:\n    - ${DNS_NAME}\n    secretName: web-tls\nEOF\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In our manifest above, we've also configured the Ingress route the traffic to either the ",(0,i.jsx)(n.code,{children:"web"})," or ",(0,i.jsx)(n.code,{children:"api"})," services based on the URL path requested. If the request URL includes ",(0,i.jsx)(n.code,{children:"/api"}),"/ then it will send traffic to the ",(0,i.jsx)(n.code,{children:"api"})," backend service. Otherwise, it will send traffic to the ",(0,i.jsx)(n.code,{children:"web"})," service."]}),"\n",(0,i.jsxs)(n.p,{children:["Within a few minutes, the ",(0,i.jsx)(n.code,{children:"external-dns"})," controller will add an ",(0,i.jsx)(n.code,{children:"A"})," record to Azure DNS which points to the Ingress resource's public IP. With the custom domain in place, we can simply browse using this domain name."]}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.p,{children:"As mentioned above, since this is not a real domain name, we need to modify our host file to make it seem like our custom domain is resolving to the Ingress' public IP address."}),(0,i.jsx)(n.p,{children:"To get the ingress public IP, run the following:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Get the IP\nkubectl get ingress web -o jsonpath="{.status.loadBalancer.ingress[0].ip}"\n\n# Get the hostname\nkubectl get ingress web -o jsonpath="{.spec.tls[0].hosts[0]}"\n'})}),(0,i.jsxs)(n.p,{children:["Next, open your host file and add an entry using the format ",(0,i.jsx)(n.code,{children:"<YOUR_PUBLIC_IP> <YOUR_CUSTOM_DOMAIN>"}),". Below is an example of what it should look like."]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"20.237.116.224 eshoponweb11265.com\n"})}),(0,i.jsxs)(n.p,{children:["See this ",(0,i.jsx)(n.a,{href:"https://linuxize.com/post/how-to-edit-your-hosts-file/",children:"doc"})," for more info on how to do this."]})]}),"\n",(0,i.jsx)(n.p,{children:"When browsing to the website, you may be presented with a warning about the connection not being private. This is due to the fact that we are using a self-signed certificate. This is expected, so go ahead and proceed anyway to load up the page."}),"\n",(0,i.jsx)(n.h3,{id:"why-is-the-admin-page-broken",children:"Why is the Admin page broken?"}),"\n",(0,i.jsxs)(n.p,{children:["If you log in using the ",(0,i.jsx)(n.code,{children:"admin@microsoft.com"})," account and browse to the ",(0,i.jsx)(n.strong,{children:"Admin"})," page, you'll notice no products are loaded on the page."]}),"\n",(0,i.jsxs)(n.p,{children:["This is because the admin page is built using Blazor and compiled as a WebAssembly application that runs in your browser. When the application was compiled, it packed the ",(0,i.jsx)(n.code,{children:"appsettings.Development.json"})," file as an embedded resource. This file contains the base URL for the public API and it currently points to ",(0,i.jsx)(n.code,{children:"https://localhost:5099"}),". Now that we have a domain name, we can update the base URL and point it to our custom domain."]}),"\n",(0,i.jsxs)(n.p,{children:["From the root of the ",(0,i.jsx)(n.code,{children:"eShopOnWeb"})," repo, update the configuration file using a ",(0,i.jsxs)(n.a,{href:"https://www.geeksforgeeks.org/sed-command-in-linux-unix-with-examples/",children:[(0,i.jsx)(n.code,{children:"sed"})," command"]}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'sed -i -e "s/localhost:5099/${DNS_NAME}/g" ./src/BlazorAdmin/wwwroot/appsettings.Development.json\n'})}),"\n",(0,i.jsx)(n.p,{children:"Rebuild and push the container to Azure Container Registry."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Grab the name of your Azure Container Registry\nACR_NAME=$(az resource list \\\n  --resource-group $RESOURCE_GROUP \\\n  --resource-type Microsoft.ContainerRegistry/registries \\\n  --query "[0].name" -o tsv)\n\n# Invoke a build and publish job\naz acr build \\\n  --registry $ACR_NAME \\\n  --image $ACR_NAME.azurecr.io/web:v0.1.0 \\\n  --file ./src/Web/Dockerfile .\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Once the container build has completed, we can issue a ",(0,i.jsx)(n.code,{children:"kubectl patch"})," command to quickly update the ",(0,i.jsx)(n.code,{children:"web"})," deployment to test our change."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'kubectl patch deployment web -p "$(cat <<EOF\n{\n  "spec": {\n    "template": {\n      "spec": {\n        "containers": [\n          {\n            "name": "web",\n            "image": "${ACR_NAME}.azurecr.io/web:v0.1.0"\n          }\n        ]\n      }\n    }\n  }\n}\nEOF\n)"\n'})}),"\n",(0,i.jsx)(n.p,{children:"If all went well, you will be able to browse the admin page again and confirm product data is being loaded \ud83e\udd73"}),"\n",(0,i.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsxs)(n.p,{children:["The Web Application Routing add-on for AKS aims to streamline the process of exposing it to the public using the open-source ",(0,i.jsx)(n.a,{href:"https://kubernetes.github.io/ingress-nginx/",children:"NGINX Ingress Controller"}),". With the add-on being managed by Azure, it natively integrates with other Azure services like Azure DNS and eliminates the need to manually create DNS entries. It can also integrate with Azure Key Vault to automatically pull in TLS certificates and rotate them as needed to further reduce operational overhead."]}),"\n",(0,i.jsx)(n.p,{children:"We are one step closer to production and in the upcoming posts we'll further operationalize and secure our deployment, so stay tuned!"}),"\n",(0,i.jsx)(n.p,{children:"In the meantime, check out the resources listed below for further reading."}),"\n",(0,i.jsxs)(n.p,{children:["You can also find manifests with all the changes made in today's post in the ",(0,i.jsx)(n.a,{href:"https://github.com/Azure-Samples/eShopOnAKS/tree/week3/day3",children:"Azure-Samples/eShopOnAKS"})," repository."]}),"\n",(0,i.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,i.jsxs)(n.admonition,{title:"Take the Cloud Skills Challenge!",type:"tip",children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/training/challenges?id=a0e385b9-f970-4182-b2e2-3b4619b6c356",children:"Enroll"})," in the Cloud Skills Challenge!"]}),(0,i.jsx)(n.p,{children:"Don't miss out on this opportunity to level up your skills and stay ahead of the curve in the world of cloud native."})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/azure/aks/web-app-routing?WT.mc_id=containers-84290-pauyu&tabs=without-osm",children:"Web Application Routing (Preview)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://dev.to/azure/web-application-routing-on-aks-58ap",children:"Web Application Routing on AKS"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://aka.ms/aks-webapp-routing-lab",children:"Lab: Web Application Routing with AKS"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://kubernetes.github.io/ingress-nginx/",children:"NGINX Ingress Controller"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/azure/dns/dns-overview?WT.mc_id=containers-84290-pauyu",children:"What is Azure DNS?"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>a});var i=t(67294);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);