"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[88182],{49074:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var i=n(85893),a=n(11151);const o={date:"2023-10-23T09:00",slug:"building-an-ai-powered-logo-variation-generator-with-azure-openai-and-aks-1",title:"4-1. Building an AI-Powered Logo Variation Generator with Azure OpenAI and AKS (1)",authors:["cnteam"],draft:!1,hide_table_of_contents:!1,toc_min_heading_level:2,toc_max_heading_level:3,keywords:["Cloud","Data","AI","AI/ML","intelligent apps","cloud-native","30-days","enterprise apps","digital experiences","app modernization","serverless","ai apps","data"],image:"https://azure.github.io/Cloud-Native/img/ogImage.png",description:"Explore how to develop an AI-powered logo generator using DALL-E, Azure OpenAI and Azure Kubernetes Service (AKS).",tags:["Build-Intelligent-Apps","30-days-of-IA","learn-live","hack-together","community-buzz","ask-the-expert","azure-kubernetes-service","azure-functions","azure-openai","azure-container-apps","azure-cosmos-db","github-copilot","github-codespaces","github-actions"]},r=void 0,s={permalink:"/Cloud-Native/30DaysOfIA/building-an-ai-powered-logo-variation-generator-with-azure-openai-and-aks-1",source:"@site/blog-30daysofIA/2023-10-23/building-an-ai-powered-logo-variation-generator-with-azure-openai-and-aks-1.md",title:"4-1. Building an AI-Powered Logo Variation Generator with Azure OpenAI and AKS (1)",description:"Explore how to develop an AI-powered logo generator using DALL-E, Azure OpenAI and Azure Kubernetes Service (AKS).",date:"2023-10-23T09:00:00.000Z",formattedDate:"October 23, 2023",tags:[{label:"Build-Intelligent-Apps",permalink:"/Cloud-Native/30DaysOfIA/tags/build-intelligent-apps"},{label:"30-days-of-IA",permalink:"/Cloud-Native/30DaysOfIA/tags/30-days-of-ia"},{label:"learn-live",permalink:"/Cloud-Native/30DaysOfIA/tags/learn-live"},{label:"hack-together",permalink:"/Cloud-Native/30DaysOfIA/tags/hack-together"},{label:"community-buzz",permalink:"/Cloud-Native/30DaysOfIA/tags/community-buzz"},{label:"ask-the-expert",permalink:"/Cloud-Native/30DaysOfIA/tags/ask-the-expert"},{label:"azure-kubernetes-service",permalink:"/Cloud-Native/30DaysOfIA/tags/azure-kubernetes-service"},{label:"azure-functions",permalink:"/Cloud-Native/30DaysOfIA/tags/azure-functions"},{label:"azure-openai",permalink:"/Cloud-Native/30DaysOfIA/tags/azure-openai"},{label:"azure-container-apps",permalink:"/Cloud-Native/30DaysOfIA/tags/azure-container-apps"},{label:"azure-cosmos-db",permalink:"/Cloud-Native/30DaysOfIA/tags/azure-cosmos-db"},{label:"github-copilot",permalink:"/Cloud-Native/30DaysOfIA/tags/github-copilot"},{label:"github-codespaces",permalink:"/Cloud-Native/30DaysOfIA/tags/github-codespaces"},{label:"github-actions",permalink:"/Cloud-Native/30DaysOfIA/tags/github-actions"}],readingTime:10.64,hasTruncateMarker:!1,authors:[{name:"It's 30DaysOfIA",title:"BuildIA Content Team",url:"https://azure.github.io/Cloud-Native/Build-IA/",imageURL:"https://azure.github.io/Cloud-Native/img/logo-ms-cloud-native.png",key:"cnteam"}],frontMatter:{date:"2023-10-23T09:00",slug:"building-an-ai-powered-logo-variation-generator-with-azure-openai-and-aks-1",title:"4-1. Building an AI-Powered Logo Variation Generator with Azure OpenAI and AKS (1)",authors:["cnteam"],draft:!1,hide_table_of_contents:!1,toc_min_heading_level:2,toc_max_heading_level:3,keywords:["Cloud","Data","AI","AI/ML","intelligent apps","cloud-native","30-days","enterprise apps","digital experiences","app modernization","serverless","ai apps","data"],image:"https://azure.github.io/Cloud-Native/img/ogImage.png",description:"Explore how to develop an AI-powered logo generator using DALL-E, Azure OpenAI and Azure Kubernetes Service (AKS).",tags:["Build-Intelligent-Apps","30-days-of-IA","learn-live","hack-together","community-buzz","ask-the-expert","azure-kubernetes-service","azure-functions","azure-openai","azure-container-apps","azure-cosmos-db","github-copilot","github-codespaces","github-actions"]},unlisted:!1,prevItem:{title:"3-4. Taking Intelligent Apps to the Next Level - Implementing Advanced Features with Azure Machine Learning (2)",permalink:"/Cloud-Native/30DaysOfIA/taking-intelligent-apps-to-the-next-level-implementing-advanced-features-with-azure-machine-learning-2"},nextItem:{title:"4-2. Building an AI-Powered Logo Variation Generator with Azure OpenAI and AKS (2)",permalink:"/Cloud-Native/30DaysOfIA/building-an-ai-powered-logo-variation-generator-with-azure-openai-and-aks-2"}},l={authorsImageUrls:[void 0]},d=[{value:"What We&#39;ll Cover:",id:"what-well-cover",level:2},{value:"Building an AI-Powered Logo Variation Generator with Azure OpenAI and AKS (1)",id:"building-an-ai-powered-logo-variation-generator-with-azure-openai-and-aks-1",level:2},{value:"Creating an AI-Powered Logo Variation Generator",id:"creating-an-ai-powered-logo-variation-generator",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Solution Architecture",id:"solution-architecture",level:3},{value:"Generating Images with DALL-E",id:"generating-images-with-dall-e",level:2},{value:"Building a Web Interface",id:"building-a-web-interface",level:2},{value:"Exercise",id:"exercise",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components},{Head:o}=t;return o||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(o,{children:[(0,i.jsx)("meta",{property:"og:url",content:"https://azure.github.io/cloud-native/30daysofia/building-an-ai-powered-logo-variation-generator-with-azure-openai-and-aks-1"}),(0,i.jsx)("meta",{property:"og:type",content:"website"}),(0,i.jsx)("meta",{property:"og:title",content:"Build Intelligent Apps!| Build AI Apps On Azure"}),(0,i.jsx)("meta",{property:"og:description",content:"Explore how to develop an AI-powered logo generator using DALL-E, Azure OpenAI and Azure Kubernetes Service (AKS)."}),(0,i.jsx)("meta",{property:"og:image",content:"https://azure.github.io/Cloud-Native/img/ogImage.png"}),(0,i.jsx)("meta",{name:"twitter:url",content:"https://azure.github.io/Cloud-Native/30daysofIA/building-an-ai-powered-logo-variation-generator-with-azure-openai-and-aks-1"}),(0,i.jsx)("meta",{name:"twitter:title",content:"Build Intelligent Apps! | Build AI Apps On Azure"}),(0,i.jsx)("meta",{name:"twitter:description",content:"4.1 - Building an AI-Powered Logo Variation Generator with Azure OpenAI and AKS (1)"}),(0,i.jsx)("meta",{name:"twitter:image",content:"https://azure.github.io/Cloud-Native/img/ogImage.png"}),(0,i.jsx)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,i.jsx)("meta",{name:"twitter:creator",content:"@devanshidiaries"}),(0,i.jsx)("meta",{name:"twitter:site",content:"@AzureAdvocates"}),(0,i.jsx)("link",{rel:"canonical",href:"https://azure.github.io/Cloud-Native/30daysofIA/https://azure.github.io/Cloud-Native/30daysofIA/building-an-ai-powered-logo-variation-generator-with-azure-openai-and-aks-1"})]}),"\n",(0,i.jsxs)(t.p,{children:["In this article, explore how to develop an AI-powered logo generator using DALL-E, ",(0,i.jsx)(t.a,{href:"https://learn.microsoft.com/azure/ai-services/openai/overview?WT.mc_id=javascript-99907-ninarasi",children:"Azure OpenAI"})," and ",(0,i.jsx)(t.a,{href:"https://learn.microsoft.com/azure/aks/?WT.mc_id=javascript-99907-ninarasi",children:"Azure Kubernetes Service (AKS)"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"what-well-cover",children:"What We'll Cover:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Generating images with ",(0,i.jsx)(t.a,{href:"https://openai.com/dall-e-2",children:"DALL-E"})]}),"\n",(0,i.jsx)(t.li,{children:"Building a web interface"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"image of logos on web interface",src:n(88481).Z+"",width:"625",height:"380"})}),"\n",(0,i.jsx)(t.h2,{id:"building-an-ai-powered-logo-variation-generator-with-azure-openai-and-aks-1",children:"Building an AI-Powered Logo Variation Generator with Azure OpenAI and AKS (1)"}),"\n",(0,i.jsxs)(t.p,{children:["Have you ever wondered how to create unique and eye-catching logos for your brand or project? Do you want to unleash your creativity and experiment with AI? If so, you might be interested in ",(0,i.jsx)(t.a,{href:"https://azure.microsoft.com/products/ai-services/openai-service?WT.mc_id=javascript-99907-ninarasi",children:"Azure OpenAI"}),", a new Azure service granting access to some of the most advanced AI models globally, including ",(0,i.jsx)(t.a,{href:"https://openai.com/dall-e-2",children:"DALL-E 2"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"With the ability to interpret detailed text prompts, DALL-E 2 can generate images ranging from realistic to imaginative. It can merge elements, characteristics, and artistic influences to generate unique illustrations, emblems, or images with a true-to-life appearance."}),"\n",(0,i.jsx)(t.p,{children:"In this article, we\u2019ll explore how to build an Intelligent App that uses DALL-E to create logos. Intelligent Apps harness artificial intelligence (AI), machine learning (ML), and data analytics to deliver personalized and data-driven user experiences. They can understand the user\u2019s intent, make predictions, automate tasks, generate content, or provide recommendations based on data and analytics."}),"\n",(0,i.jsx)(t.p,{children:"After completing this tutorial, you\u2019ll know how to:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Set up Azure OpenAI."}),"\n",(0,i.jsxs)(t.li,{children:["Create a Python back end using ",(0,i.jsx)(t.a,{href:"https://fastapi.tiangolo.com/",children:"FastAPI"})," that uses DALL-E to create logo variations."]}),"\n",(0,i.jsx)(t.li,{children:"Build a web interface that lets you upload a logo, enter a text prompt, and view logos generated by DALL-E."}),"\n",(0,i.jsxs)(t.li,{children:["Deploy your app using ",(0,i.jsx)(t.a,{href:"https://azure.microsoft.com/products/kubernetes-service?WT.mc_id=javascript-99907-ninarasi",children:"Azure Kubernetes Service (AKS)"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Let\u2019s get started!"}),"\n",(0,i.jsx)(t.h2,{id:"creating-an-ai-powered-logo-variation-generator",children:"Creating an AI-Powered Logo Variation Generator"}),"\n",(0,i.jsx)(t.p,{children:"Before diving into the details of how to build and deploy the app, let\u2019s look at its basic architecture. The app consists of three main parts:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["A Python back end that uses the ",(0,i.jsx)(t.a,{href:"https://github.com/openai/openai-python",children:"OpenAI Python Library"})," to communicate with Azure OpenAI and FastAPI to serve logo generation requests."]}),"\n",(0,i.jsx)(t.li,{children:"A web UI built with HTML, CSS, and JavaScript. This setup lets us select a logo, enter instructions, submit them to the back end, and view the logos provided by DALL-E."}),"\n",(0,i.jsx)(t.li,{children:"An AKS cluster that hosts the app. This is AKS Azure\u2019s managed Kubernetes service, which we\u2019ll use to deploy the app as a containerized application."}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["For a preview of the final product, review the ",(0,i.jsx)(t.a,{href:"https://github.com/contentlab-io/Microsoft-Building-an-AI-Powered-Logo-Variation-Generator-with-Azure-OpenAI",children:"complete project code"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsx)(t.p,{children:"To follow along, you need:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["An ",(0,i.jsx)(t.a,{href:"https://learn.microsoft.com/azure/cloud-adoption-framework/ready/landing-zone/design-area/resource-org-subscriptions?WT.mc_id=javascript-99907-ninarasi",children:"Azure subscription"})," with access to Azure OpenAI. Note that you\u2019ll have to ",(0,i.jsx)(t.a,{href:"https://customervoice.microsoft.com/Pages/ResponsePage.aspx?id=v4j5cvGGr0GRqy180BHbR7en2Ais5pxKtso_Pz4b1_xUOFA5Qk1UWDRBMjg0WFhPMkIzTzhKQ1dWNyQlQCN0PWcu",children:"apply for approval"})," to access Azure OpenAI."]}),"\n",(0,i.jsxs)(t.li,{children:["A DALL-E model deployed to Azure. See the ",(0,i.jsx)(t.a,{href:"https://learn.microsoft.com/azure/ai-services/openai/how-to/create-resource?pivots=cli&WT.mc_id=javascript-99907-ninarasi",children:"resource deployment guide"})," for further instructions on deploying a model. You can currently only deploy DALL-E models to resource groups in the ",(0,i.jsx)(t.code,{children:"eastus"})," region using the ",(0,i.jsx)(t.code,{children:"dalle2"})," model."]}),"\n",(0,i.jsxs)(t.li,{children:["The deployment name, endpoint, and API key for your DALL-E model. See the \u201cRetrieve key and endpoint\u201d section in the ",(0,i.jsx)(t.a,{href:"https://learn.microsoft.com/azure/ai-services/openai/dall-e-quickstart?pivots=programming-language-python&WT.mc_id=javascript-99907-ninarasi#retrieve-key-and-endpoint",children:"Azure OpenAI docs"})," for instructions on how to find your model\u2019s endpoint URL and API key."]}),"\n",(0,i.jsxs)(t.li,{children:["The ",(0,i.jsx)(t.a,{href:"https://learn.microsoft.com/cli/azure/install-azure-cli?WT.mc_id=javascript-99907-ninarasi",children:"Azure CLI"})," installed and signed in to the Azure subscription containing your DALL-E model deployment"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://www.docker.com/",children:"Docker"})," to package and deploy your application"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://kubernetes.io/docs/reference/kubectl/",children:"kubectl"})," to manage your AKS cluster"]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["If you don\u2019t yet have Docker or ",(0,i.jsx)(t.code,{children:"kubectl"})," installed, ",(0,i.jsx)(t.a,{href:"https://www.docker.com/products/docker-desktop/",children:"Docker Desktop"})," includes both and is the quickest way to get up and running."]}),"\n",(0,i.jsx)(t.h3,{id:"solution-architecture",children:"Solution Architecture"}),"\n",(0,i.jsx)(t.p,{children:"The image below shows the architecture of the solution we\u2019re aiming for in this article."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"image of solution architecture in this article",src:n(31899).Z+"",width:"625",height:"382"})}),"\n",(0,i.jsx)(t.h2,{id:"generating-images-with-dall-e",children:"Generating Images with DALL-E"}),"\n",(0,i.jsxs)(t.p,{children:["The first step in building our Azure OpenAI-powered app is creating a Python back end using ",(0,i.jsx)(t.a,{href:"https://fastapi.tiangolo.com/",children:"FastAPI"})," and the OpenAI Python SDK. If you haven\u2019t used it before, FastAPI is a library for building fast, easy-to-write REST APIs."]}),"\n",(0,i.jsxs)(t.p,{children:["Start by creating a file named ",(0,i.jsx)(t.code,{children:"requirements.txt"}),". Add our app\u2019s dependencies to it:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"fastapi[all] \nopenai \n"})}),"\n",(0,i.jsxs)(t.p,{children:["Then, install the dependencies using ",(0,i.jsx)(t.code,{children:"pip"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"pip install -r requirements.txt\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Next, create a file named ",(0,i.jsx)(t.code,{children:"main.py"}),". Our back end doesn\u2019t require a lot of code, so we\u2019ll compile all the Python code into this file to keep things simple. Copy the rest of the code blocks in this section into ",(0,i.jsx)(t.code,{children:"main.py"})," as you go. Start by importing the packages and classes needed to build the back end:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"from typing import List\n\nimport openai\nfrom fastapi import FastAPI\nfrom fastapi.staticfiles import StaticFiles \n"})}),"\n",(0,i.jsxs)(t.p,{children:["Now, we need to alter a few settings to get the OpenAI Python library to work with Azure OpenAI. Replace ",(0,i.jsx)(t.code,{children:"AZURE_OPENAI_KEY"})," and ",(0,i.jsx)(t.code,{children:"AZURE_OPENAI_ENDPOINT"})," with the values you received when creating your Azure OpenAI model:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"openai.api_key = \"AZURE_OPENAI_KEY\"\nopenai.api_base = \"AZURE_OPENAI_ENDPOINT\"\nopenai.api_type = 'azure'\nopenai.api_version = '2023-05-15'\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Note that we\u2019re hardcoding the values to keep this tutorial simple, but in a production environment, you\u2019ll want to use ",(0,i.jsx)(t.a,{href:"https://azure.microsoft.com/products/key-vault?WT.mc_id=javascript-99907-ninarasi",children:"Azure Key Vault"})," to safely store your app\u2019s secrets."]}),"\n",(0,i.jsx)(t.p,{children:"Then, create an instance of FastAPI and assign it to a variable named 'app':"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"app = FastAPI() \n"})}),"\n",(0,i.jsx)(t.p,{children:"Next, add a function named 'generate_logos' that takes a text prompt as a parameter and returns a list of logo variants that DALL-E generates:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'async def generate_logos(text_prompt: str):\n    # Generate images from text prompt using DALL-E\n    response = await openai.Image.acreate(\n        prompt=f"A company logo matching the following description: {text_prompt}",\n        size="256x256",\n        n=3,\n    )\n\n    # Return a list of image URLs\n    image_urls = [image["url"] for image in response["data"]]\n    return image_urls\n'})}),"\n",(0,i.jsx)(t.p,{children:"Here\u2019s what the function does:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"It reads the image file as bytes and encodes it as base64."}),"\n",(0,i.jsxs)(t.li,{children:["It uses the ",(0,i.jsx)(t.code,{children:"openai.Image.create()"})," method to generate images from the user\u2019s prompt, passing in the image file as an input parameter along with the text prompt."]}),"\n",(0,i.jsx)(t.li,{children:"It returns a list of image URLs from the response."}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Note that we\u2019re adding additional detail to the prompt the user provided to help ensure it generates logos as we expect. This technique is worth remembering because ",(0,i.jsx)(t.a,{href:"https://learn.microsoft.com/azure/ai-services/openai/concepts/prompt-engineering?WT.mc_id=javascript-99907-ninarasi",children:"prompt engineering"})," is important when working with modern AI models."]}),"\n",(0,i.jsx)(t.p,{children:"Next, add a FastAPI endpoint that accepts a text prompt from the web UI and returns a list of DALL-E-generated logo variants:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'@app.post("/logos", response_model=List[str])\nasync def logos(text_prompt: str = ""):\n    # Generate logo variants using DALL-E\n    image_urls = generate_logos(text_prompt)\n\n    # Return image URLs as JSON response\n    return image_urls\n'})}),"\n",(0,i.jsx)(t.p,{children:"FastAPI automatically converts the Python array to JSON, so we don\u2019t need to serialize it before returning it. Now, add an endpoint to serve the static files housing the app\u2019s web UI:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'app.mount("/", StaticFiles(directory="static", html=True), name="static")\n'})}),"\n",(0,i.jsxs)(t.p,{children:["FastAPI processes routes in the order they\u2019re created, so adding the static file handler at the end ensures it won\u2019t accidentally intercept requests to the ",(0,i.jsx)(t.code,{children:"/logo"})," endpoint."]}),"\n",(0,i.jsxs)(t.p,{children:["That\u2019s all the code needed in ",(0,i.jsx)(t.code,{children:"main.py"}),". Save the file and run the server using uvicorn, which comes automatically with FastAPI:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"uvicorn main:app --reload\n"})}),"\n",(0,i.jsx)(t.p,{children:"Your terminal should display something like this:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) INFO:     Started reloader process [12345] using statreload INFO:     Started server process [56789] INFO:     Waiting for application startup. INFO:     Application startup complete.\n"})}),"\n",(0,i.jsx)(t.p,{children:"That\u2019s all you need for the Python back end! Let\u2019s move on to building the app\u2019s user interface."}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["Join the Azure team at ",(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.a,{href:"https://aka.ms/aks-day",children:"KubeCon and Azure Day"})})," in Chicago on ",(0,i.jsx)(t.strong,{children:"November 6, 2023"}),". The Azure Product Engineering team along with the Cloud Advocates team will be there to dive deep with you on developing intelligent apps with Azure Kubernetes Service."]})}),"\n",(0,i.jsx)(t.h2,{id:"building-a-web-interface",children:"Building a Web Interface"}),"\n",(0,i.jsx)(t.p,{children:"The next step in our app is creating a simple web interface that lets users upload an image of a logo, enter a text prompt with instructions on how to vary the logo, and view the results that DALL-E returns. We\u2019ll use HTML and plain JavaScript with some Tailwind CSS to add visual appeal."}),"\n",(0,i.jsxs)(t.p,{children:["Start by creating a ",(0,i.jsx)(t.code,{children:"static"})," subdirectory, and inside it, generate an HTML file named ",(0,i.jsx)(t.code,{children:"index.html"}),". This file will contain the basic layout of our webpage, such as the title, navigation bar, input box for entering a text prompt, and container for displaying the results. It\u2019s also essential to link to the Tailwind CSS CDN and our custom CSS file that we\u2019ll create later."]}),"\n",(0,i.jsxs)(t.p,{children:["Add the following HTML to the ",(0,i.jsx)(t.code,{children:"index.html"})," file:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <title>Logo Variation Generator</title>\n  \x3c!-- Link to Tailwind CSS CDN --\x3e\n  <script src="https://cdn.tailwindcss.com"><\/script>\n  \x3c!-- Link to our custom CSS file --\x3e\n  <link rel="stylesheet" href="/style.css">\n</head>\n<body>\n  \x3c!-- Navigation bar --\x3e\n    <nav class="bg-blue-500 p-4 flex justify-between items-center fixed top-0 left-0 w-full z-10">\n    <h1 class="text-white text-xl font-bold">Logo Variation Generator</h1>\n  </nav>\n  \x3c!-- Main content --\x3e\n  <main class="container mx-auto p-4 pt-16">\n    \x3c!-- Create a grid layout with two columns --\x3e\n    <div id="logo-input" class="flex flex-col items-center justify-center space-y-4 mt-20">\n        <input id="logo-text" type="text" placeholder="Describe the logo you\'d like to create..." class="w-3/4 text-2xl text-center border border-gray-300 px-4 py-2 rounded" required>\n        <button id="logo-generate" type="button" class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded">Generate</button>\n      </div>\n    <div id="logo-results" class="mt-10 hidden"></div>\n  </main>\n  \x3c!-- Script for handling user input and fetch requests --\x3e\n  <script src="/script.js"><\/script>\n</body>\n</html>\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Next, create a file named ",(0,i.jsx)(t.code,{children:"style.css"})," in the static directory and add a few styles to enhance the UI:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:".logo-input {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.logo-input-moved {\n    flex-direction: row;\n    justify-content: space-between;\n    gap: 1rem;\n    width: 100%;\n    max-width: 800px;\n    margin: 2rem auto;\n}\n\n/* Grid layout for displaying logos */ \n\n#logo-results {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr); /* Change '3' according to desired columns */\n    gap: 20px;\n} \n\n#logo-text {\n    font-size: 2rem;\n    border-color: #e5e7eb;\n    box-shadow: inset 0 2px 4px rgba(0,0,0,0.06);\n} \n\n#logo-generate {\n    transition: all 0.3s ease-in-out;\n    font-size: 1.5rem;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.06);\n}   \n\n.fade-in {\n    opacity: 0;\n    animation: fade-in 0.5s forwards;\n}\n\n@keyframes fade-in {\n    from {\n    opacity: 0;\n    }\n    to {\n    opacity: 1;\n    }\n}\n\n.fade-out {\n    animation: fade-out 0.5s forwards;\n} \n\n@keyframes fade-out {\n    from {\n    opacity: 1;\n    }\n    to {\n    opacity: 0;\n    }\n}\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Now, we just need some JavaScript to tie it all together. Create a file named ",(0,i.jsx)(t.code,{children:"script.js"})," in the ",(0,i.jsx)(t.code,{children:"static"})," directory, and add the following:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'const logoGenerateButton = document.getElementById("logo-generate");\nconst logoInput = document.getElementById("logo-input");\nconst logoResults = document.getElementById("logo-results");\nconst logoText = document.getElementById("logo-text");\n\nlogoGenerateButton.addEventListener("click", function () {\n    // Disable the input and button\n    logoText.disabled = true;\n    logoGenerateButton.disabled = true;\n    // Change the button text\n    logoGenerateButton.textContent = "Generating...";\n\n    // Get the input value\n    const text = logoText.value;\n\n    fetch("/logos", {\n        method: "POST",\n        // send the input value as JSON\n        headers: {\n            "Content-Type": "application/json",\n        },\n        body: JSON.stringify({ text }),\n    })\n    .then((response) => response.json())\n    .then((data) => {\n        // Fade out the input and button\n        logoInput.classList.add("opacity-0");\n        // Re-enable the input and button\n        logoText.disabled = false;\n        logoGenerateButton.disabled = false;\n        // Reset the button text\n        logoGenerateButton.textContent = "Generate";\n        // Adjust the input and button styles\n        logoInput.classList.remove("flex-col", "items-center", "justify-center", "space-y-4", "mt-20", "opacity-0");\n        logoInput.classList.add("flex-row", "justify-between", "mt-4");\n        logoText.classList.add("w-3/5");\n        logoGenerateButton.classList.add("w-1/3");\n\n        // Clear the results container\n        logoResults.innerHTML = "";\n\n        // Loop through each image URL in the data array\n        data.forEach((url) => { \n\n            // Create an image element for each URL\n            const img = document.createElement("img");\n            img.src = url;\n            img.alt = "Logo variant";\n\n        // Append the image element to the results container\n            logoResults.appendChild(img);\n        }); \n\n        // Show the results container\n        logoResults.classList.remove("hidden");\n\n        // Fade in the input, button, and images\n        logoInput.classList.add("opacity-100");\n    })\n    .catch((error) => {\n        // Log any errors to the console\n        console.error(error);\n    });\n}); \n'})}),"\n",(0,i.jsx)(t.p,{children:"And with that, you\u2019ve successfully built an Azure OpenAI-powered logo creation web interface."}),"\n",(0,i.jsx)(t.p,{children:"To test it, run the following command in your terminal from the app\u2019s root directory."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"uvicorn main:app --reload\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Then, open a web browser and navigate to ",(0,i.jsx)(t.code,{children:"http://localhost:8000"}),". You should see the web page you just created. Describe the kind of logo you\u2019d like to create and click Generate. In a few seconds, you should see the images DALL-E generated for you:"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"image of logo generator",src:n(80252).Z+"",width:"625",height:"241"})}),"\n",(0,i.jsx)(t.p,{children:"DALL-E will display the original logo on the left column and the logo variants on the right one."}),"\n",(0,i.jsx)(t.p,{children:"Try experimenting with different prompts to see what you come up with!"}),"\n",(0,i.jsx)(t.h2,{id:"exercise",children:"Exercise"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Complete this ",(0,i.jsx)(t.strong,{children:"hands-on sample"})," ",(0,i.jsx)(t.a,{href:"https://github.com/contentlab-io/Microsoft-Building-an-AI-Powered-Logo-Variation-Generator-with-Azure-OpenAI",children:"project code"})," to build your intelligent app with multi-modal databases."]}),"\n",(0,i.jsxs)(t.li,{children:["Watch the ",(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.a,{href:"https://reactor.microsoft.com/reactor/events/20732/?WT.mc_id=javascript-99907-ninarasi",children:"Ask the Expert: Azure Kubernetes Service"})})," session where the Product Engineering team goes dives into the concepts for building intelligent apps using Azure Kubernetes Service."]}),"\n",(0,i.jsxs)(t.li,{children:["To revise core concepts on cloud-native or Azure Kubernetes Service, go to ",(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.a,{href:"https://azure.github.io/Cloud-Native/cnny-2023/cloud-native-fundamentals?WT.mc_id=javascript-99907-ninarasi",children:"30 Days of Cloud Native"})}),"."]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},88481:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/blog-image-4-1-1-b2eef075d03aca6265a1767331f6f5fc.jpeg"},31899:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/blog-image-4-1-2-6248ccd27cfc7f9bcaeeb5bf4cbd9d46.png"},80252:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/blog-image-4-1-3-87c2e41b77960f876fdb4cfbcf7ef37f.png"},11151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>r});var i=n(67294);const a={},o=i.createContext(a);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);