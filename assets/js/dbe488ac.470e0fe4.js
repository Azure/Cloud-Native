"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[46233],{70331:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var r=i(85893),t=i(11151);const s={date:"2024-10-11T09:00",slug:"setting-up-ci-cd-pipelines-for-azure-app-servicea-and-aks-using-azure-devops-1",title:"1.6a Setting Up CI/CD Pipelines for Azure App Service and AKS Using Azure DevOps Part 1",authors:["30days"],draft:!1,hide_table_of_contents:!1,toc_min_heading_level:2,toc_max_heading_level:3,keywords:["Cloud","Data","AI","AI/ML","intelligent apps","cloud-native","30-days-2024","30-days","enterprise apps","digital experiences","app modernization","serverless","ai apps"],image:"https://github.com/Azure/Cloud-Native/blob/main/website/static/img/ogImage.png",description:"In this application development, Continuous Integration and Continuous Deployment (CI/CD) play a vital role in streamlining workflows and ensuring rapid delivery of software.",tags:["Build-Intelligent-Apps","30-days-of-IA-2024","learn-live","demo-bytes","community-gallery","azure-kubernetes-service","azure-functions","azure-openai","azure-container-apps","azure-cosmos-db","github-copilot","github-codespaces","github-actions"]},a=void 0,o={permalink:"/Cloud-Native/30-days-of-ia-2024/setting-up-ci-cd-pipelines-for-azure-app-servicea-and-aks-using-azure-devops-1",source:"@site/blog-30-days-of-ia-2024/2024-10-11/setting-up-ci-cd-pipelines-for-azure-app-service-and-aks-using-azure-devops-1.md",title:"1.6a Setting Up CI/CD Pipelines for Azure App Service and AKS Using Azure DevOps Part 1",description:"In this application development, Continuous Integration and Continuous Deployment (CI/CD) play a vital role in streamlining workflows and ensuring rapid delivery of software.",date:"2024-10-11T09:00:00.000Z",formattedDate:"October 11, 2024",tags:[{label:"Build-Intelligent-Apps",permalink:"/Cloud-Native/30-days-of-ia-2024/tags/build-intelligent-apps"},{label:"30-days-of-IA-2024",permalink:"/Cloud-Native/30-days-of-ia-2024/tags/30-days-of-ia-2024"},{label:"learn-live",permalink:"/Cloud-Native/30-days-of-ia-2024/tags/learn-live"},{label:"demo-bytes",permalink:"/Cloud-Native/30-days-of-ia-2024/tags/demo-bytes"},{label:"community-gallery",permalink:"/Cloud-Native/30-days-of-ia-2024/tags/community-gallery"},{label:"azure-kubernetes-service",permalink:"/Cloud-Native/30-days-of-ia-2024/tags/azure-kubernetes-service"},{label:"azure-functions",permalink:"/Cloud-Native/30-days-of-ia-2024/tags/azure-functions"},{label:"azure-openai",permalink:"/Cloud-Native/30-days-of-ia-2024/tags/azure-openai"},{label:"azure-container-apps",permalink:"/Cloud-Native/30-days-of-ia-2024/tags/azure-container-apps"},{label:"azure-cosmos-db",permalink:"/Cloud-Native/30-days-of-ia-2024/tags/azure-cosmos-db"},{label:"github-copilot",permalink:"/Cloud-Native/30-days-of-ia-2024/tags/github-copilot"},{label:"github-codespaces",permalink:"/Cloud-Native/30-days-of-ia-2024/tags/github-codespaces"},{label:"github-actions",permalink:"/Cloud-Native/30-days-of-ia-2024/tags/github-actions"}],readingTime:5.585,hasTruncateMarker:!1,authors:[{name:"#30Days Of IA",title:"BuildIA Content Team",url:"https://azure.github.io/Cloud-Native/Build-IA/",imageURL:"https://azure.github.io/Cloud-Native/img/logo-2024.png",key:"30days"}],frontMatter:{date:"2024-10-11T09:00",slug:"setting-up-ci-cd-pipelines-for-azure-app-servicea-and-aks-using-azure-devops-1",title:"1.6a Setting Up CI/CD Pipelines for Azure App Service and AKS Using Azure DevOps Part 1",authors:["30days"],draft:!1,hide_table_of_contents:!1,toc_min_heading_level:2,toc_max_heading_level:3,keywords:["Cloud","Data","AI","AI/ML","intelligent apps","cloud-native","30-days-2024","30-days","enterprise apps","digital experiences","app modernization","serverless","ai apps"],image:"https://github.com/Azure/Cloud-Native/blob/main/website/static/img/ogImage.png",description:"In this application development, Continuous Integration and Continuous Deployment (CI/CD) play a vital role in streamlining workflows and ensuring rapid delivery of software.",tags:["Build-Intelligent-Apps","30-days-of-IA-2024","learn-live","demo-bytes","community-gallery","azure-kubernetes-service","azure-functions","azure-openai","azure-container-apps","azure-cosmos-db","github-copilot","github-codespaces","github-actions"]},unlisted:!1,prevItem:{title:"1.6b Setting Up CI/CD Pipelines for Azure App Service and AKS Using Azure DevOps Part 2",permalink:"/Cloud-Native/30-days-of-ia-2024/setting-up-ci-cd-pipelines-for-azure-app-servicea-and-aks-using-azure-devops-2"},nextItem:{title:"1.5b Deploy Application with AKS Part 2",permalink:"/Cloud-Native/30-days-of-ia-2024/deploy-application-with-AKS-part-2"}},l={authorsImageUrls:[void 0]},p=[{value:"Part 1: Setting Up CI/CD Pipelines for Azure App Service Using Azure DevOps",id:"part-1-setting-up-cicd-pipelines-for-azure-app-service-using-azure-devops",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Overview of the Pipeline",id:"overview-of-the-pipeline",level:2},{value:"Integrating GitHub Repository into Azure DevOps",id:"integrating-github-repository-into-azure-devops",level:3},{value:"Creating Variable Groups",id:"creating-variable-groups",level:3},{value:"Pipeline YAML Configuration",id:"pipeline-yaml-configuration",level:4},{value:"Testing the CI/CD Pipeline",id:"testing-the-cicd-pipeline",level:4},{value:"Conclusion",id:"conclusion",level:2},{value:"Next",id:"next",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components},{Head:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s,{children:[(0,r.jsx)("meta",{property:"og:url",content:"https://azure.github.io/cloud-native/setting-up-ci-cd-pipelines-for-azure-app-servicea-and-aks-using-azure-devops-1"}),(0,r.jsx)("meta",{property:"og:type",content:"website"}),(0,r.jsx)("meta",{property:"og:title",content:"**Build Intelligent Apps | AI Apps on Azure"}),(0,r.jsx)("meta",{property:"og:description",content:"In this application development, Continuous Integration and Continuous Deployment (CI/CD) play a vital role in streamlining workflows and ensuring rapid delivery of software.  "}),(0,r.jsx)("meta",{property:"og:image",content:"https://github.com/Azure/Cloud-Native/blob/main/website/static/img/ogImage.png"}),(0,r.jsx)("meta",{name:"twitter:url",content:"https://azure.github.io/Cloud-Native/setting-up-ci-cd-pipelines-for-azure-app-servicea-and-aks-using-azure-devops-1"}),(0,r.jsx)("meta",{name:"twitter:title",content:"**Build Intelligent Apps | AI Apps on Azure"}),(0,r.jsx)("meta",{name:"twitter:description",content:"In this application development, Continuous Integration and Continuous Deployment (CI/CD) play a vital role in streamlining workflows and ensuring rapid delivery of software."}),(0,r.jsx)("meta",{name:"twitter:image",content:"https://azure.github.io/Cloud-Native/img/ogImage.png"}),(0,r.jsx)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,r.jsx)("meta",{name:"twitter:creator",content:"@devanshidiaries"}),(0,r.jsx)("link",{rel:"canonical",href:"https://azure.github.io/Cloud-Native/30-days-of-ia-2024/setting-up-ci-cd-pipelines-for-azure-app-servicea-and-aks-using-azure-devops-1"})]}),"\n",(0,r.jsx)(n.h2,{id:"part-1-setting-up-cicd-pipelines-for-azure-app-service-using-azure-devops",children:"Part 1: Setting Up CI/CD Pipelines for Azure App Service Using Azure DevOps"}),"\n",(0,r.jsx)(n.p,{children:"In this application development, Continuous Integration and Continuous Deployment (CI/CD) play a vital role in streamlining workflows and ensuring rapid delivery of software. In this blog, we will explore how to set up CI/CD pipelines for three applications\u2014a Java Spring Boot backend, a Java Spring Boot middleware, and a ReactJS frontend\u2014using Azure DevOps. We will deploy these applications to Azure App Service in parallel."}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(n.p,{children:"Before we start, ensure you have:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"An Azure DevOps account."}),"\n",(0,r.jsxs)(n.li,{children:["A GitHub repository with your application code, specifically structured with three folders: ",(0,r.jsx)(n.code,{children:"backend"}),", ",(0,r.jsx)(n.code,{children:"middleware"}),", and ",(0,r.jsx)(n.code,{children:"frontend"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"An Azure subscription with access to Azure App Service."}),"\n",(0,r.jsxs)(n.li,{children:["The GitHub URL for the project we will be using is: ",(0,r.jsx)(n.a,{href:"https://github.com/Azure-Samples/Java-AI-Based-Content-Generator",children:"Java-AI-Based-Content-Generator"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"overview-of-the-pipeline",children:"Overview of the Pipeline"}),"\n",(0,r.jsx)(n.p,{children:"The CI/CD pipeline will consist of the following key stages:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Build Stage:"})," Each application is built in parallel, producing artifacts for deployment."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Deploy Stage:"})," The built artifacts are deployed to Azure App Service and AKS."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"integrating-github-repository-into-azure-devops",children:"Integrating GitHub Repository into Azure DevOps"}),"\n",(0,r.jsx)(n.p,{children:"To connect your GitHub repository to Azure DevOps, follow these steps:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Navigate to Your Azure DevOps Project:"})," Go to the Azure DevOps portal and select your project."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"screenshot of project in Azure DevOps portal",src:i(73398).Z+"",width:"1380",height:"689"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Select Project Settings:"})," At the bottom left corner, click on the ",(0,r.jsx)(n.strong,{children:"Project settings"})," gear icon.\u202f"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Service Connections:"})," Under the ",(0,r.jsx)(n.strong,{children:"Pipelines"})," section, select ",(0,r.jsx)(n.strong,{children:"Service connections"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"screenshot of Service connections under Pipelines in Azure DevOps portal",src:i(82870).Z+"",width:"1380",height:"689"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Create a New Service Connection:"})," Click on ",(0,r.jsx)(n.strong,{children:"New service connection"})," and select ",(0,r.jsx)(n.strong,{children:"GitHub"})," from the list."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Authorize Azure DevOps:"})," Follow the prompts to authorize Azure DevOps to access your GitHub account."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Select Repository:"})," Choose the repository you want to integrate and complete the setup."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"screenshot of repository in Azure DevOps portal",src:i(64233).Z+"",width:"1380",height:"628"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"creating-variable-groups",children:"Creating Variable Groups"}),"\n",(0,r.jsx)(n.p,{children:"Variable groups in Azure DevOps help centralize configuration management by allowing you to store and reuse variables across multiple pipelines. Here's how to create and configure a variable group:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Navigate to Pipelines:"})," Open the ",(0,r.jsx)(n.strong,{children:"Pipelines"})," section in your Azure DevOps project."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Library:"})," Click on ",(0,r.jsx)(n.strong,{children:"Library"})," under Pipelines."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"screenshot of Library in Azure DevOps portal",src:i(80585).Z+"",width:"1380",height:"463"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Add Variable Group:"})," Select ",(0,r.jsx)(n.strong,{children:"+ Variable group"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"screenshot of variable group properties in Azure DevOps portal",src:i(92891).Z+"",width:"1380",height:"578"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Define Variables:"})," Add the necessary variables (e.g., ",(0,r.jsx)(n.code,{children:"AcrName"}),", ",(0,r.jsx)(n.code,{children:"BackendAppServiceName"}),", ",(0,r.jsx)(n.code,{children:"MiddlewareAppServiceName"}),", and ",(0,r.jsx)(n.code,{children:"FrontendAppServiceName"}),"). Optionally, mark sensitive values as secrets."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"screenshot of variable group secret options in Azure DevOps portal",src:i(3217).Z+"",width:"1380",height:"628"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Link to Azure Key Vault:"})," If needed, link your variable group to an Azure Key Vault to manage secrets."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"screenshot of linking variable group to an Azure Key Vault in Azure DevOps portal",src:i(45473).Z+"",width:"1380",height:"1256"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Save the Variable Group:"})," Click ",(0,r.jsx)(n.strong,{children:"Save"})," to confirm your variable group configuration."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Add Pipeline Permission"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"screenshot of Pipeline permissionsin Azure DevOps portal",src:i(47726).Z+"",width:"1380",height:"628"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"pipeline-yaml-configuration",children:"Pipeline YAML Configuration"}),"\n",(0,r.jsx)(n.p,{children:"Below is the YAML configuration for the Azure DevOps pipeline, followed by a detailed explanation of each block."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"azure-pipeline.yml"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"trigger:\r\n  branches:\r\n    include:\r\n      - main\r\n      - feature/ci\r\n\r\npool:\r\n  vmImage: 'ubuntu-latest'\r\n\r\nvariables:\r\n  - group: ai-study-vg\r\n  - group: ai-study-secrets\r\n\r\nstages:\r\n  - stage: Build\r\n    displayName: 'Build Stage'\r\n    jobs:\r\n      - job: Build_Backend\r\n        displayName: 'Build Backend Service'\r\n        pool:\r\n          vmImage: 'ubuntu-latest'\r\n        steps:\r\n          - checkout: self\r\n          - task: Maven@4\r\n            inputs:\r\n              mavenPomFile: 'backend/pom.xml'\r\n              mavenOptions: '-Xmx3072m'\r\n              javaHomeOption: 'JDKVersion'\r\n              jdkVersionOption: '1.17' # JDK Version set to 17\r\n              jdkArchitectureOption: 'x64'\r\n              publishJUnitResults: true\r\n              testResultsFiles: '**/TEST-*.xml'\r\n              goals: 'clean package'\r\n          - publish: '$(System.DefaultWorkingDirectory)/backend/target/backend.war'\r\n            artifact: backend\r\n\r\n      - job: Build_Middleware\r\n        displayName: 'Build Middleware Service'\r\n        pool:\r\n          vmImage: 'ubuntu-latest'\r\n        steps:\r\n          - checkout: self\r\n          - task: Maven@4\r\n            inputs:\r\n              mavenPomFile: 'middleware/pom.xml'\r\n              mavenOptions: '-Xmx3072m'\r\n              javaHomeOption: 'JDKVersion'\r\n              jdkVersionOption: '1.17' # JDK Version set to 17\r\n              jdkArchitectureOption: 'x64'\r\n              publishJUnitResults: true\r\n              testResultsFiles: '**/TEST-*.xml'\r\n              goals: 'clean package'\r\n          - publish: '$(System.DefaultWorkingDirectory)/middleware/target/middleware.war'\r\n            artifact: middleware\r\n\r\n      - job: Build_Frontend\r\n        displayName: 'Build Frontend Service'\r\n        pool:\r\n          vmImage: 'ubuntu-latest'\r\n        steps:\r\n          - checkout: self\r\n          - script: |\r\n              cd frontend\r\n              npm install\r\n              npm run build\r\n          - publish: '$(System.DefaultWorkingDirectory)/frontend/build'\r\n            artifact: frontend\r\n\r\n  - stage: Deploy\r\n    displayName: 'Deploy Stage'\r\n    dependsOn: Build\r\n    jobs:\r\n      - job: Deploy_Backend_AppService\r\n        displayName: 'Deploy Backend to Azure App Service'\r\n        pool:\r\n          vmImage: 'ubuntu-latest'\r\n        steps:\r\n          - download: current\r\n            artifact: backend\r\n          - task: AzureWebApp@1\r\n            inputs:\r\n              azureSubscription: '$(AzureSubscription)' # This will be set from Variable Group\r\n              appName: '$(BackendAppServiceName)' # This will be set from Key Vault - Variable Group\r\n              package: '$(Pipeline.Workspace)/backend/backend.war'\r\n              appType: 'webAppLinux'\r\n              appSettings: |\r\n                -AZURE_KEYVAULT_URI \"$(AZURE_KEYVAULT_URI)\"\r\n\r\n      - job: Deploy_Middleware_AppService\r\n        displayName: 'Deploy Middleware to Azure App Service'\r\n        pool:\r\n          vmImage: 'ubuntu-latest'\r\n        steps:\r\n          - download: current\r\n            artifact: middleware\r\n          - task: AzureWebApp@1\r\n            inputs:\r\n              azureSubscription: '$(AzureSubscription)' # This will be set from Variable Group\r\n              appName: '$(MiddlewareAppServiceName)' # This will be set from Key Vault - Variable Group\r\n              package: '$(Pipeline.Workspace)/middleware/middleware.war'\r\n              appType: 'webAppLinux'\r\n              appSettings: |\r\n                -AZURE_KEYVAULT_URI \"$(AZURE_KEYVAULT_URI)\"\r\n\r\n      - job: Deploy_Frontend_AppService\r\n        displayName: 'Deploy Frontend to Azure App Service'\r\n        pool:\r\n          vmImage: 'ubuntu-latest'\r\n        steps:\r\n          - download: current\r\n            artifact: frontend\r\n          - task: AzureWebApp@1\r\n            inputs:\r\n              azureSubscription: '$(AzureSubscription)' # This will be set from Variable Group\r\n              appName: '$(FrontendAppServiceName)' # This will be set from Key Vault - Variable Group\r\n              package: '$(Pipeline.Workspace)/frontend'\r\n              startUpCommand: 'pm2 serve /home/site/wwwroot/build --no-daemon --spa'\r\n              appType: 'webAppLinux'\r\n              # These secrets will be retrieved from Key Vault - Variable Group\r\n              appSettings: |\r\n                -REACT_APP_SERVICE_BASE_URL \"$(MiddlewareServiceBaseUrl)\"\r\n                -REACT_APP_CLIENT_ID \"$(MsalAppId)\"\r\n                -REACT_APP_CONTENT_GENERATOR_ENDPOINT \"$(MiddlewareServiceGenerateContentEndpoint)\"\r\n                -REACT_APP_SERVICE_ACCESS_KEY \"$(MiddlewareServiceAccessKey)\"\n"})}),"\n",(0,r.jsx)(n.h4,{id:"testing-the-cicd-pipeline",children:"Testing the CI/CD Pipeline"}),"\n",(0,r.jsxs)(n.p,{children:["After setting up the pipeline, navigate to the ",(0,r.jsx)(n.strong,{children:"Pipelines"})," section in Azure DevOps and manually trigger a run to test your configuration."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Navigate to Pipelines:"})," Open the Pipelines section."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"screenshot of Pipelines in Azure DevOps portal",src:i(65204).Z+"",width:"1380",height:"367"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Select the Pipeline:"})," Choose the pipeline you configured."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"screenshot of Pipeline configuration in Azure DevOps portal",src:i(33453).Z+"",width:"1600",height:"425"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Run Pipeline:"})," Click on ",(0,r.jsx)(n.strong,{children:"Run Pipeline"})," and monitor the execution."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"screenshot of Run pipeline screen in Azure DevOps portal",src:i(56341).Z+"",width:"1380",height:"632"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Monitor Job Logs:"})," View the logs for each stage to ensure there are no errors."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"screenshot of logs in Azure DevOps portal",src:i(26797).Z+"",width:"1380",height:"632"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Join live experts to dive into ",(0,r.jsx)(n.a,{href:"https://aka.ms/learn-live/ep3?ocid=biafy25h1_30daysofia_webpage_azuremktg",children:"operational excellence with AKS"}),"."]})}),"\n",(0,r.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsx)(n.p,{children:"In this blog, we explored how to set up a CI/CD pipeline for Java and ReactJS applications using Azure DevOps. We integrated GitHub, configured variable groups, and deployed to Azure App Service. Testing the pipeline ensures that the setup works end-to-end."}),"\n",(0,r.jsx)(n.h2,{id:"next",children:"Next"}),"\n",(0,r.jsxs)(n.p,{children:["In the ",(0,r.jsx)(n.a,{href:"https://azure.github.io/Cloud-Native/30-days-of-ia-2024/setting-up-ci-cd-pipelines-for-azure-app-servicea-and-aks-using-azure-devops-2",children:"next blog"}),", we\u2019ll cover advanced topics such as monitoring and scaling these deployments."]})]})}function c(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},73398:(e,n,i)=>{i.d(n,{Z:()=>r});const r=i.p+"assets/images/1-6-1-8e42297b3f9e67fa459a463766ca25e6.png"},33453:(e,n,i)=>{i.d(n,{Z:()=>r});const r=i.p+"assets/images/1-6-10-9f6ccf8bd61a0306b623e4d876514d72.png"},56341:(e,n,i)=>{i.d(n,{Z:()=>r});const r=i.p+"assets/images/1-6-11-5b292cabe843fe74b2b5533b381eb643.png"},26797:(e,n,i)=>{i.d(n,{Z:()=>r});const r=i.p+"assets/images/1-6-12-3b0a13e2ef986bad553dcc151bd303f2.png"},82870:(e,n,i)=>{i.d(n,{Z:()=>r});const r=i.p+"assets/images/1-6-2-3a967b8ed0bbb252a058d4d93a449655.png"},64233:(e,n,i)=>{i.d(n,{Z:()=>r});const r=i.p+"assets/images/1-6-3-96b6327a1574f1d0c551958afca741f2.png"},80585:(e,n,i)=>{i.d(n,{Z:()=>r});const r=i.p+"assets/images/1-6-4-f55d7358fd6e14b909bccc8351a31e0e.png"},92891:(e,n,i)=>{i.d(n,{Z:()=>r});const r=i.p+"assets/images/1-6-5-3aa841a43244db778a3503a28cc5b397.png"},3217:(e,n,i)=>{i.d(n,{Z:()=>r});const r=i.p+"assets/images/1-6-6-92789d225d10332406ef84dfa2561d28.png"},45473:(e,n,i)=>{i.d(n,{Z:()=>r});const r=i.p+"assets/images/1-6-7-e666ecda22d116eca88174ffd5cff1ff.png"},47726:(e,n,i)=>{i.d(n,{Z:()=>r});const r=i.p+"assets/images/1-6-8-5f5e5b79815b564b2011abaebef7b17d.png"},65204:(e,n,i)=>{i.d(n,{Z:()=>r});const r=i.p+"assets/images/1-6-9-5b268f2d10e0131626dbf0d507169b92.png"},11151:(e,n,i)=>{i.d(n,{Z:()=>o,a:()=>a});var r=i(67294);const t={},s=r.createContext(t);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);